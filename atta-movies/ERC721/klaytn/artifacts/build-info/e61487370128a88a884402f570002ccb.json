{
	"id": "e61487370128a88a884402f570002ccb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2021-02-11\r\n*/\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/Math.sol\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC721MintableAutoId {\r\n    function _currentNextId() external view returns (uint256);      // The NFT id that you want to start with. Auto increment here.\r\n    \r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function safeBatchMint(address[] calldata _to, uint256 _uriTemplateId) external;\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function safeMint(address _to, uint256 _uriTemplateId) external;\r\n}\r\n\r\n\r\ncontract VendingMachine is Ownable {\r\n    using SafeMath for uint256;\r\n \r\n    IERC721MintableAutoId public nft;\r\n\r\n    address public treasury;\r\n    \r\n    mapping(uint256 => uint256) public _commodityPrices;\r\n\r\n    event PriceUpdate(uint256 indexed uriTemplateId, uint256 price);\r\n    event Buy(address indexed buyer, uint256 indexed uriTemplateId, uint256 indexed tokenId, uint256 price);\r\n\r\n    constructor(\r\n        address _nftAddress,\r\n        address _treasury\r\n    ) {\r\n        require(_nftAddress != address(0) && _nftAddress != address(this));\r\n        nft = IERC721MintableAutoId(_nftAddress);\r\n        treasury = _treasury;\r\n    }\r\n    \r\n    function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r\n        _commodityPrices[_uriTemplateId] = _price;\r\n        emit PriceUpdate( _uriTemplateId, _price);\r\n    }\r\n    \r\n    function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r\n        _listToken(_uriTemplateId, _price);\r\n    }\r\n    \r\n    function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r\n        uint256 tokenId = nft._currentNextId();\r\n        nft.safeMint(_buyer, _uriTemplateId);\r\n        emit Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]);\r\n    }\r\n    \r\n    function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r\n        require(_commodityPrices[_uriTemplateId]>0, \"Not on list\");\r\n\r\n        for (uint256 i = 0; i < _quantity; ++i) {\r\n            _buyToken(_msgSender(), _uriTemplateId);\r\n        }\r\n        (bool success, ) = treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\");\r\n        require(success, \"Failed to send klay\");\r\n    }    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":12353:18240  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":12353:18240  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0a59b4f837f4bf2a490151608922f5564b7b28c295be41b852106ffec1b971064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0a59b4f837f4bf2a490151608922f5564b7b28c295be41b852106ffec1b971064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xA5 SWAP12 0x4F DUP4 PUSH32 0x4BF2A490151608922F5564B7B28C295BE41B852106FFEC1B971064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d0a59b4f837f4bf2a490151608922f5564b7b28c295be41b852106ffec1b971064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xA5 SWAP12 0x4F DUP4 PUSH32 0x4BF2A490151608922F5564B7B28C295BE41B852106FFEC1B971064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0a59b4f837f4bf2a490151608922f5564b7b28c295be41b852106ffec1b971064736f6c63430008070033",
									".code": [
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721MintableAutoId": {
					"abi": [
						{
							"inputs": [],
							"name": "_currentNextId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_to",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								}
							],
							"name": "safeBatchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"safeBatchMint(address[],uint256)": {
								"details": "Returns the amount of tokens in existence."
							},
							"safeMint(address,uint256)": {
								"details": "Returns the amount of tokens owned by `account`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_currentNextId()": "1c178087",
							"safeBatchMint(address[],uint256)": "43253955",
							"safeMint(address,uint256)": "a1448194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_currentNextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"}],\"name\":\"safeBatchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"safeBatchMint(address[],uint256)\":{\"details\":\"Returns the amount of tokens in existence.\"},\"safeMint(address,uint256)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"IERC721MintableAutoId\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":5613:6304  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":5613:6304  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208eef5fe2fbd30c1a7814c40e3678b6a96d3171ba77a39300cd00b9e8a91166b464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208eef5fe2fbd30c1a7814c40e3678b6a96d3171ba77a39300cd00b9e8a91166b464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEF 0x5F 0xE2 0xFB 0xD3 0xC BYTE PUSH25 0x14C40E3678B6A96D3171BA77A39300CD00B9E8A91166B46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208eef5fe2fbd30c1a7814c40e3678b6a96d3171ba77a39300cd00b9e8a91166b464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 0xEF 0x5F 0xE2 0xFB 0xD3 0xC BYTE PUSH25 0x14C40E3678B6A96D3171BA77A39300CD00B9E8A91166B46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208eef5fe2fbd30c1a7814c40e3678b6a96d3171ba77a39300cd00b9e8a91166b464736f6c63430008070033",
									".code": [
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":18775:21936  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":18775:21936  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122098d95bf014440088bee01537954f8c0d1a6f8b01d26529d4241b8e504ba7de2964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098d95bf014440088bee01537954f8c0d1a6f8b01d26529d4241b8e504ba7de2964736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD9 JUMPDEST CREATE EQ DIFFICULTY STOP DUP9 0xBE 0xE0 ISZERO CALLDATACOPY SWAP6 0x4F DUP13 0xD BYTE PUSH16 0x8B01D26529D4241B8E504BA7DE296473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098d95bf014440088bee01537954f8c0d1a6f8b01d26529d4241b8e504ba7de2964736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD9 JUMPDEST CREATE EQ DIFFICULTY STOP DUP9 0xBE 0xE0 ISZERO CALLDATACOPY SWAP6 0x4F DUP13 0xD BYTE PUSH16 0x8B01D26529D4241B8E504BA7DE296473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098d95bf014440088bee01537954f8c0d1a6f8b01d26529d4241b8e504ba7de2964736f6c63430008070033",
									".code": [
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":763:5482  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":763:5482  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ea900855866feae4e9ac49b8a3bdda6d0a3c638f3342d6ed1dbd3e9b08ef425064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea900855866feae4e9ac49b8a3bdda6d0a3c638f3342d6ed1dbd3e9b08ef425064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP1 ADDMOD SSTORE DUP7 PUSH16 0xEAE4E9AC49B8A3BDDA6D0A3C638F3342 0xD6 0xED SAR 0xBD RETURNDATACOPY SWAP12 ADDMOD 0xEF TIMESTAMP POP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea900855866feae4e9ac49b8a3bdda6d0a3c638f3342d6ed1dbd3e9b08ef425064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP1 ADDMOD SSTORE DUP7 PUSH16 0xEAE4E9AC49B8A3BDDA6D0A3C638F3342 0xD6 0xED SAR 0xBD RETURNDATACOPY SWAP12 ADDMOD 0xEF TIMESTAMP POP PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea900855866feae4e9ac49b8a3bdda6d0a3c638f3342d6ed1dbd3e9b08ef425064736f6c63430008070033",
									".code": [
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VendingMachine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "uriTemplateId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "uriTemplateId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PriceUpdate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_commodityPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721MintableAutoId",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "safeBuyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "safeListToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22830:23074  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8103:8120  address msgSender */\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8123:8135  _msgSender() */\n  tag_7\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8123:8133  _msgSender */\n  shl(0x20, tag_8)\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8123:8135  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8103:8135  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8155:8164  msgSender */\n  dup1\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8146:8152  _owner */\n  0x00\n  dup1\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8146:8164  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8213:8222  msgSender */\n  dup1\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8209:8210  0 */\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8092:8231  {\r... */\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22949:22950  0 */\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22926:22951  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22926:22937  _nftAddress */\n  dup3\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22926:22951  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22926:22983  _nftAddress != address(0) && _nftAddress != address(this) */\n  dup1\n  iszero\n  tag_10\n  jumpi\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22978:22982  this */\n  address\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22955:22983  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22955:22966  _nftAddress */\n  dup3\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22955:22983  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22926:22983  _nftAddress != address(0) && _nftAddress != address(this) */\ntag_10:\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22918:22984  require(_nftAddress != address(0) && _nftAddress != address(this)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23023:23034  _nftAddress */\n  dup2\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22995:22998  nft */\n  0x01\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22995:23035  nft = IERC721MintableAutoId(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23057:23066  _treasury */\n  dup1\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23046:23054  treasury */\n  0x02\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23046:23066  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22830:23074  constructor(\r... */\n  pop\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n  jump(tag_12)\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\ntag_8:\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6956:6963  address */\n  0x00\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6983:6993  msg.sender */\n  caller\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6976:6993  return msg.sender */\n  swap1\n  pop\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_15:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_21\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":260:379   */\ntag_20:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_23\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_24\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_15\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_27:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_29\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_30:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_22:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_18:\n    /* \"#utility.yul\":1303:1327   */\n  tag_36\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_27\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_37:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd3f50573\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x3e56e6c3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x432be4d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n    tag_2:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22588:22639  mapping(uint256 => uint256) public _commodityPrices */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22511:22543  IERC721MintableAutoId public nft */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22552:22575  address public treasury */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n    tag_14:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23825:23826  0 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23792:23808  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23792:23824  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23809:23823  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23792:23824  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23792:23826  _commodityPrices[_uriTemplateId]>0 */\n      gt\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23784:23842  require(_commodityPrices[_uriTemplateId]>0, \"Not on list\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23860:23869  uint256 i */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n    tag_52:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23879:23888  _quantity */\n      dup2\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23875:23876  i */\n      dup2\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23875:23888  i < _quantity */\n      lt\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n      iszero\n      tag_53\n      jumpi\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23910:23949  _buyToken(_msgSender(), _uriTemplateId) */\n      tag_55\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23920:23932  _msgSender() */\n      tag_56\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23920:23930  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23920:23932  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23934:23948  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23910:23919  _buyToken */\n      tag_58\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23910:23949  _buyToken(_msgSender(), _uriTemplateId) */\n      jump\t// in\n    tag_55:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23890:23893  ++i */\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n      jump(tag_52)\n    tag_53:\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23972:23984  bool success */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23990:23998  treasury */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23990:24003  treasury.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24058  _commodityPrices[_uriTemplateId].mul(_quantity) */\n      tag_61\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24048:24057  _quantity */\n      dup4\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24027  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24043  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24028:24042  _uriTemplateId */\n      dup8\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24043  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24047  _commodityPrices[_uriTemplateId].mul */\n      tag_62\n      swap1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24011:24058  _commodityPrices[_uriTemplateId].mul(_quantity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23990:24063  treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\") */\n      mload(0x40)\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_67\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_66)\n    tag_67:\n      0x60\n      swap2\n      pop\n    tag_66:\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23971:24063  (bool success, ) = treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24082:24089  success */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":24074:24113  require(success, \"Failed to send klay\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23773:24121  {\r... */\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22588:22639  mapping(uint256 => uint256) public _commodityPrices */\n    tag_19:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22511:22543  IERC721MintableAutoId public nft */\n    tag_24:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":22552:22575  address public treasury */\n    tag_29:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_34:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_72\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9061:9062  0 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9045:9051  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9092:9093  0 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9075:9081  _owner */\n      dup1\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9075:9094  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_37:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8350:8357  address */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8377:8383  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8370:8383  return _owner */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n    tag_42:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_79\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_75\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23370:23404  _listToken(_uriTemplateId, _price) */\n      tag_83\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23381:23395  _uriTemplateId */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23397:23403  _price */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23370:23380  _listToken */\n      tag_84\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23370:23404  _listToken(_uriTemplateId, _price) */\n      jump\t// in\n    tag_83:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_47:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_86\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_75\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9366:9367  0 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9346:9354  newOwner */\n      dup2\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9338:9411  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9456:9464  newOwner */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9448:9454  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9485:9493  newOwner */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9476:9482  _owner */\n      0x00\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9476:9493  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_57:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6956:6963  address */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6983:6993  msg.sender */\n      caller\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6976:6993  return msg.sender */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23424:23682  function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r... */\n    tag_58:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23503:23518  uint256 tokenId */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23521:23524  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23521:23539  nft._currentNextId */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1c178087\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23521:23541  nft._currentNextId() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23503:23541  uint256 tokenId = nft._currentNextId() */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23552:23555  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23552:23564  nft.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1448194\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23565:23571  _buyer */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23573:23587  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23552:23588  nft.safeMint(_buyer, _uriTemplateId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23632:23639  tokenId */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23616:23630  _uriTemplateId */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23608:23614  _buyer */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23604:23674  Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23641:23657  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23641:23673  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23658:23672  _uriTemplateId */\n      dup8\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23641:23673  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23604:23674  Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]) */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23492:23682  {\r... */\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23424:23682  function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_62:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2438:2445  uint256 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2688:2689  0 */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2683:2684  a */\n      dup4\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2683:2689  a == 0 */\n      eq\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2679:2726  if (a == 0) {\r... */\n      iszero\n      tag_107\n      jumpi\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2713:2714  0 */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2706:2714  return 0 */\n      swap1\n      pop\n      jump(tag_106)\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2679:2726  if (a == 0) {\r... */\n    tag_107:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2738:2747  uint256 c */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2754:2755  b */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2750:2751  a */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2750:2755  a * b */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2738:2755  uint256 c = a * b */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2783:2784  b */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2778:2779  a */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2774:2775  c */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2774:2779  c / a */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2774:2784  c / a == b */\n      eq\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2766:2822  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2842:2843  c */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2835:2843  return c */\n      swap2\n      pop\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_106:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23086:23267  function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r... */\n    tag_84:\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23201:23207  _price */\n      dup1\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23166:23182  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23166:23198  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23183:23197  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23166:23198  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23166:23207  _commodityPrices[_uriTemplateId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23236:23250  _uriTemplateId */\n      dup2\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23223:23259  PriceUpdate( _uriTemplateId, _price) */\n      0x92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23252:23258  _price */\n      dup3\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23223:23259  PriceUpdate( _uriTemplateId, _price) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":23086:23267  function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_118:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_120\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_122:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_124\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:440   */\n    tag_126:\n        /* \"#utility.yul\":354:359   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup2\n        /* \"#utility.yul\":379:392   */\n      mload\n        /* \"#utility.yul\":370:392   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:434   */\n      tag_128\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":401:434   */\n      tag_125\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":297:440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":446:775   */\n    tag_46:\n        /* \"#utility.yul\":505:511   */\n      0x00\n        /* \"#utility.yul\":554:556   */\n      0x20\n        /* \"#utility.yul\":542:551   */\n      dup3\n        /* \"#utility.yul\":533:540   */\n      dup5\n        /* \"#utility.yul\":529:552   */\n      sub\n        /* \"#utility.yul\":525:557   */\n      slt\n        /* \"#utility.yul\":522:641   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":560:639   */\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":522:641   */\n    tag_130:\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":705:758   */\n      tag_133\n        /* \"#utility.yul\":750:757   */\n      dup5\n        /* \"#utility.yul\":741:747   */\n      dup3\n        /* \"#utility.yul\":730:739   */\n      dup6\n        /* \"#utility.yul\":726:748   */\n      add\n        /* \"#utility.yul\":705:758   */\n      tag_118\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":695:758   */\n      swap2\n      pop\n        /* \"#utility.yul\":651:768   */\n      pop\n        /* \"#utility.yul\":446:775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1110   */\n    tag_18:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":889:891   */\n      0x20\n        /* \"#utility.yul\":877:886   */\n      dup3\n        /* \"#utility.yul\":868:875   */\n      dup5\n        /* \"#utility.yul\":864:887   */\n      sub\n        /* \"#utility.yul\":860:892   */\n      slt\n        /* \"#utility.yul\":857:976   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":895:974   */\n      tag_136\n      tag_132\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":857:976   */\n    tag_135:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1040:1093   */\n      tag_137\n        /* \"#utility.yul\":1085:1092   */\n      dup5\n        /* \"#utility.yul\":1076:1082   */\n      dup3\n        /* \"#utility.yul\":1065:1074   */\n      dup6\n        /* \"#utility.yul\":1061:1083   */\n      add\n        /* \"#utility.yul\":1040:1093   */\n      tag_122\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1030:1093   */\n      swap2\n      pop\n        /* \"#utility.yul\":986:1103   */\n      pop\n        /* \"#utility.yul\":781:1110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1116:1467   */\n    tag_99:\n        /* \"#utility.yul\":1186:1192   */\n      0x00\n        /* \"#utility.yul\":1235:1237   */\n      0x20\n        /* \"#utility.yul\":1223:1232   */\n      dup3\n        /* \"#utility.yul\":1214:1221   */\n      dup5\n        /* \"#utility.yul\":1210:1233   */\n      sub\n        /* \"#utility.yul\":1206:1238   */\n      slt\n        /* \"#utility.yul\":1203:1322   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":1241:1320   */\n      tag_140\n      tag_132\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1203:1322   */\n    tag_139:\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1386:1450   */\n      tag_141\n        /* \"#utility.yul\":1442:1449   */\n      dup5\n        /* \"#utility.yul\":1433:1439   */\n      dup3\n        /* \"#utility.yul\":1422:1431   */\n      dup6\n        /* \"#utility.yul\":1418:1440   */\n      add\n        /* \"#utility.yul\":1386:1450   */\n      tag_126\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1376:1450   */\n      swap2\n      pop\n        /* \"#utility.yul\":1332:1460   */\n      pop\n        /* \"#utility.yul\":1116:1467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1473:1947   */\n    tag_13:\n        /* \"#utility.yul\":1541:1547   */\n      0x00\n        /* \"#utility.yul\":1549:1555   */\n      dup1\n        /* \"#utility.yul\":1598:1600   */\n      0x40\n        /* \"#utility.yul\":1586:1595   */\n      dup4\n        /* \"#utility.yul\":1577:1584   */\n      dup6\n        /* \"#utility.yul\":1573:1596   */\n      sub\n        /* \"#utility.yul\":1569:1601   */\n      slt\n        /* \"#utility.yul\":1566:1685   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1604:1683   */\n      tag_144\n      tag_132\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1566:1685   */\n    tag_143:\n        /* \"#utility.yul\":1724:1725   */\n      0x00\n        /* \"#utility.yul\":1749:1802   */\n      tag_145\n        /* \"#utility.yul\":1794:1801   */\n      dup6\n        /* \"#utility.yul\":1785:1791   */\n      dup3\n        /* \"#utility.yul\":1774:1783   */\n      dup7\n        /* \"#utility.yul\":1770:1792   */\n      add\n        /* \"#utility.yul\":1749:1802   */\n      tag_122\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":1739:1802   */\n      swap3\n      pop\n        /* \"#utility.yul\":1695:1812   */\n      pop\n        /* \"#utility.yul\":1851:1853   */\n      0x20\n        /* \"#utility.yul\":1877:1930   */\n      tag_146\n        /* \"#utility.yul\":1922:1929   */\n      dup6\n        /* \"#utility.yul\":1913:1919   */\n      dup3\n        /* \"#utility.yul\":1902:1911   */\n      dup7\n        /* \"#utility.yul\":1898:1920   */\n      add\n        /* \"#utility.yul\":1877:1930   */\n      tag_122\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1867:1930   */\n      swap2\n      pop\n        /* \"#utility.yul\":1822:1940   */\n      pop\n        /* \"#utility.yul\":1473:1947   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2071   */\n    tag_147:\n        /* \"#utility.yul\":2040:2064   */\n      tag_149\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2040:2064   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2035:2038   */\n      dup3\n        /* \"#utility.yul\":2028:2065   */\n      mstore\n        /* \"#utility.yul\":1953:2071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2077:2266   */\n    tag_151:\n        /* \"#utility.yul\":2193:2259   */\n      tag_153\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2193:2259   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2188:2191   */\n      dup3\n        /* \"#utility.yul\":2181:2260   */\n      mstore\n        /* \"#utility.yul\":2077:2266   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2272:2638   */\n    tag_155:\n        /* \"#utility.yul\":2414:2417   */\n      0x00\n        /* \"#utility.yul\":2435:2502   */\n      tag_157\n        /* \"#utility.yul\":2499:2501   */\n      0x26\n        /* \"#utility.yul\":2494:2497   */\n      dup4\n        /* \"#utility.yul\":2435:2502   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2428:2502   */\n      swap2\n      pop\n        /* \"#utility.yul\":2511:2604   */\n      tag_159\n        /* \"#utility.yul\":2600:2603   */\n      dup3\n        /* \"#utility.yul\":2511:2604   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2629:2631   */\n      0x40\n        /* \"#utility.yul\":2624:2627   */\n      dup3\n        /* \"#utility.yul\":2620:2632   */\n      add\n        /* \"#utility.yul\":2613:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2272:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:3010   */\n    tag_161:\n        /* \"#utility.yul\":2786:2789   */\n      0x00\n        /* \"#utility.yul\":2807:2874   */\n      tag_163\n        /* \"#utility.yul\":2871:2873   */\n      0x0b\n        /* \"#utility.yul\":2866:2869   */\n      dup4\n        /* \"#utility.yul\":2807:2874   */\n      tag_158\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2800:2874   */\n      swap2\n      pop\n        /* \"#utility.yul\":2883:2976   */\n      tag_164\n        /* \"#utility.yul\":2972:2975   */\n      dup3\n        /* \"#utility.yul\":2883:2976   */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2996:2999   */\n      dup3\n        /* \"#utility.yul\":2992:3004   */\n      add\n        /* \"#utility.yul\":2985:3004   */\n      swap1\n      pop\n        /* \"#utility.yul\":2644:3010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3016:3382   */\n    tag_166:\n        /* \"#utility.yul\":3158:3161   */\n      0x00\n        /* \"#utility.yul\":3179:3246   */\n      tag_168\n        /* \"#utility.yul\":3243:3245   */\n      0x21\n        /* \"#utility.yul\":3238:3241   */\n      dup4\n        /* \"#utility.yul\":3179:3246   */\n      tag_158\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3172:3246   */\n      swap2\n      pop\n        /* \"#utility.yul\":3255:3348   */\n      tag_169\n        /* \"#utility.yul\":3344:3347   */\n      dup3\n        /* \"#utility.yul\":3255:3348   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3373:3375   */\n      0x40\n        /* \"#utility.yul\":3368:3371   */\n      dup3\n        /* \"#utility.yul\":3364:3376   */\n      add\n        /* \"#utility.yul\":3357:3376   */\n      swap1\n      pop\n        /* \"#utility.yul\":3016:3382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3388:3754   */\n    tag_171:\n        /* \"#utility.yul\":3530:3533   */\n      0x00\n        /* \"#utility.yul\":3551:3618   */\n      tag_173\n        /* \"#utility.yul\":3615:3617   */\n      0x20\n        /* \"#utility.yul\":3610:3613   */\n      dup4\n        /* \"#utility.yul\":3551:3618   */\n      tag_158\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3544:3618   */\n      swap2\n      pop\n        /* \"#utility.yul\":3627:3720   */\n      tag_174\n        /* \"#utility.yul\":3716:3719   */\n      dup3\n        /* \"#utility.yul\":3627:3720   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3745:3747   */\n      0x20\n        /* \"#utility.yul\":3740:3743   */\n      dup3\n        /* \"#utility.yul\":3736:3748   */\n      add\n        /* \"#utility.yul\":3729:3748   */\n      swap1\n      pop\n        /* \"#utility.yul\":3388:3754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3760:4126   */\n    tag_176:\n        /* \"#utility.yul\":3902:3905   */\n      0x00\n        /* \"#utility.yul\":3923:3990   */\n      tag_178\n        /* \"#utility.yul\":3987:3989   */\n      0x13\n        /* \"#utility.yul\":3982:3985   */\n      dup4\n        /* \"#utility.yul\":3923:3990   */\n      tag_158\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3916:3990   */\n      swap2\n      pop\n        /* \"#utility.yul\":3999:4092   */\n      tag_179\n        /* \"#utility.yul\":4088:4091   */\n      dup3\n        /* \"#utility.yul\":3999:4092   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4117:4119   */\n      0x20\n        /* \"#utility.yul\":4112:4115   */\n      dup3\n        /* \"#utility.yul\":4108:4120   */\n      add\n        /* \"#utility.yul\":4101:4120   */\n      swap1\n      pop\n        /* \"#utility.yul\":3760:4126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4530   */\n    tag_181:\n        /* \"#utility.yul\":4291:4294   */\n      0x00\n        /* \"#utility.yul\":4312:4395   */\n      tag_183\n        /* \"#utility.yul\":4393:4394   */\n      0x00\n        /* \"#utility.yul\":4388:4391   */\n      dup4\n        /* \"#utility.yul\":4312:4395   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4305:4395   */\n      swap2\n      pop\n        /* \"#utility.yul\":4404:4497   */\n      tag_185\n        /* \"#utility.yul\":4493:4496   */\n      dup3\n        /* \"#utility.yul\":4404:4497   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4522:4523   */\n      0x00\n        /* \"#utility.yul\":4517:4520   */\n      dup3\n        /* \"#utility.yul\":4513:4524   */\n      add\n        /* \"#utility.yul\":4506:4524   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4536:4654   */\n    tag_187:\n        /* \"#utility.yul\":4623:4647   */\n      tag_189\n        /* \"#utility.yul\":4641:4646   */\n      dup2\n        /* \"#utility.yul\":4623:4647   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4618:4621   */\n      dup3\n        /* \"#utility.yul\":4611:4648   */\n      mstore\n        /* \"#utility.yul\":4536:4654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4660:5039   */\n    tag_64:\n        /* \"#utility.yul\":4844:4847   */\n      0x00\n        /* \"#utility.yul\":4866:5013   */\n      tag_192\n        /* \"#utility.yul\":5009:5012   */\n      dup3\n        /* \"#utility.yul\":4866:5013   */\n      tag_181\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4859:5013   */\n      swap2\n      pop\n        /* \"#utility.yul\":5030:5033   */\n      dup2\n        /* \"#utility.yul\":5023:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":4660:5039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5045:5267   */\n    tag_31:\n        /* \"#utility.yul\":5138:5142   */\n      0x00\n        /* \"#utility.yul\":5176:5178   */\n      0x20\n        /* \"#utility.yul\":5165:5174   */\n      dup3\n        /* \"#utility.yul\":5161:5179   */\n      add\n        /* \"#utility.yul\":5153:5179   */\n      swap1\n      pop\n        /* \"#utility.yul\":5189:5260   */\n      tag_194\n        /* \"#utility.yul\":5257:5258   */\n      0x00\n        /* \"#utility.yul\":5246:5255   */\n      dup4\n        /* \"#utility.yul\":5242:5259   */\n      add\n        /* \"#utility.yul\":5233:5239   */\n      dup5\n        /* \"#utility.yul\":5189:5260   */\n      tag_147\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5045:5267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5273:5605   */\n    tag_101:\n        /* \"#utility.yul\":5394:5398   */\n      0x00\n        /* \"#utility.yul\":5432:5434   */\n      0x40\n        /* \"#utility.yul\":5421:5430   */\n      dup3\n        /* \"#utility.yul\":5417:5435   */\n      add\n        /* \"#utility.yul\":5409:5435   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5516   */\n      tag_196\n        /* \"#utility.yul\":5513:5514   */\n      0x00\n        /* \"#utility.yul\":5502:5511   */\n      dup4\n        /* \"#utility.yul\":5498:5515   */\n      add\n        /* \"#utility.yul\":5489:5495   */\n      dup6\n        /* \"#utility.yul\":5445:5516   */\n      tag_147\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":5526:5598   */\n      tag_197\n        /* \"#utility.yul\":5594:5596   */\n      0x20\n        /* \"#utility.yul\":5583:5592   */\n      dup4\n        /* \"#utility.yul\":5579:5597   */\n      add\n        /* \"#utility.yul\":5570:5576   */\n      dup5\n        /* \"#utility.yul\":5526:5598   */\n      tag_187\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5273:5605   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5891   */\n    tag_26:\n        /* \"#utility.yul\":5733:5737   */\n      0x00\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"#utility.yul\":5760:5769   */\n      dup3\n        /* \"#utility.yul\":5756:5774   */\n      add\n        /* \"#utility.yul\":5748:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5784:5884   */\n      tag_199\n        /* \"#utility.yul\":5881:5882   */\n      0x00\n        /* \"#utility.yul\":5870:5879   */\n      dup4\n        /* \"#utility.yul\":5866:5883   */\n      add\n        /* \"#utility.yul\":5857:5863   */\n      dup5\n        /* \"#utility.yul\":5784:5884   */\n      tag_151\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5611:5891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5897:6316   */\n    tag_92:\n        /* \"#utility.yul\":6063:6067   */\n      0x00\n        /* \"#utility.yul\":6101:6103   */\n      0x20\n        /* \"#utility.yul\":6090:6099   */\n      dup3\n        /* \"#utility.yul\":6086:6104   */\n      add\n        /* \"#utility.yul\":6078:6104   */\n      swap1\n      pop\n        /* \"#utility.yul\":6150:6159   */\n      dup2\n        /* \"#utility.yul\":6144:6148   */\n      dup2\n        /* \"#utility.yul\":6140:6160   */\n      sub\n        /* \"#utility.yul\":6136:6137   */\n      0x00\n        /* \"#utility.yul\":6125:6134   */\n      dup4\n        /* \"#utility.yul\":6121:6138   */\n      add\n        /* \"#utility.yul\":6114:6161   */\n      mstore\n        /* \"#utility.yul\":6178:6309   */\n      tag_201\n        /* \"#utility.yul\":6304:6308   */\n      dup2\n        /* \"#utility.yul\":6178:6309   */\n      tag_155\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6170:6309   */\n      swap1\n      pop\n        /* \"#utility.yul\":5897:6316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6322:6741   */\n    tag_51:\n        /* \"#utility.yul\":6488:6492   */\n      0x00\n        /* \"#utility.yul\":6526:6528   */\n      0x20\n        /* \"#utility.yul\":6515:6524   */\n      dup3\n        /* \"#utility.yul\":6511:6529   */\n      add\n        /* \"#utility.yul\":6503:6529   */\n      swap1\n      pop\n        /* \"#utility.yul\":6575:6584   */\n      dup2\n        /* \"#utility.yul\":6569:6573   */\n      dup2\n        /* \"#utility.yul\":6565:6585   */\n      sub\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6550:6559   */\n      dup4\n        /* \"#utility.yul\":6546:6563   */\n      add\n        /* \"#utility.yul\":6539:6586   */\n      mstore\n        /* \"#utility.yul\":6603:6734   */\n      tag_203\n        /* \"#utility.yul\":6729:6733   */\n      dup2\n        /* \"#utility.yul\":6603:6734   */\n      tag_161\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":6595:6734   */\n      swap1\n      pop\n        /* \"#utility.yul\":6322:6741   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6747:7166   */\n    tag_114:\n        /* \"#utility.yul\":6913:6917   */\n      0x00\n        /* \"#utility.yul\":6951:6953   */\n      0x20\n        /* \"#utility.yul\":6940:6949   */\n      dup3\n        /* \"#utility.yul\":6936:6954   */\n      add\n        /* \"#utility.yul\":6928:6954   */\n      swap1\n      pop\n        /* \"#utility.yul\":7000:7009   */\n      dup2\n        /* \"#utility.yul\":6994:6998   */\n      dup2\n        /* \"#utility.yul\":6990:7010   */\n      sub\n        /* \"#utility.yul\":6986:6987   */\n      0x00\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6971:6988   */\n      add\n        /* \"#utility.yul\":6964:7011   */\n      mstore\n        /* \"#utility.yul\":7028:7159   */\n      tag_205\n        /* \"#utility.yul\":7154:7158   */\n      dup2\n        /* \"#utility.yul\":7028:7159   */\n      tag_166\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7020:7159   */\n      swap1\n      pop\n        /* \"#utility.yul\":6747:7166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7172:7591   */\n    tag_75:\n        /* \"#utility.yul\":7338:7342   */\n      0x00\n        /* \"#utility.yul\":7376:7378   */\n      0x20\n        /* \"#utility.yul\":7365:7374   */\n      dup3\n        /* \"#utility.yul\":7361:7379   */\n      add\n        /* \"#utility.yul\":7353:7379   */\n      swap1\n      pop\n        /* \"#utility.yul\":7425:7434   */\n      dup2\n        /* \"#utility.yul\":7419:7423   */\n      dup2\n        /* \"#utility.yul\":7415:7435   */\n      sub\n        /* \"#utility.yul\":7411:7412   */\n      0x00\n        /* \"#utility.yul\":7400:7409   */\n      dup4\n        /* \"#utility.yul\":7396:7413   */\n      add\n        /* \"#utility.yul\":7389:7436   */\n      mstore\n        /* \"#utility.yul\":7453:7584   */\n      tag_207\n        /* \"#utility.yul\":7579:7583   */\n      dup2\n        /* \"#utility.yul\":7453:7584   */\n      tag_171\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":7445:7584   */\n      swap1\n      pop\n        /* \"#utility.yul\":7172:7591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7597:8016   */\n    tag_70:\n        /* \"#utility.yul\":7763:7767   */\n      0x00\n        /* \"#utility.yul\":7801:7803   */\n      0x20\n        /* \"#utility.yul\":7790:7799   */\n      dup3\n        /* \"#utility.yul\":7786:7804   */\n      add\n        /* \"#utility.yul\":7778:7804   */\n      swap1\n      pop\n        /* \"#utility.yul\":7850:7859   */\n      dup2\n        /* \"#utility.yul\":7844:7848   */\n      dup2\n        /* \"#utility.yul\":7840:7860   */\n      sub\n        /* \"#utility.yul\":7836:7837   */\n      0x00\n        /* \"#utility.yul\":7825:7834   */\n      dup4\n        /* \"#utility.yul\":7821:7838   */\n      add\n        /* \"#utility.yul\":7814:7861   */\n      mstore\n        /* \"#utility.yul\":7878:8009   */\n      tag_209\n        /* \"#utility.yul\":8004:8008   */\n      dup2\n        /* \"#utility.yul\":7878:8009   */\n      tag_176\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":7870:8009   */\n      swap1\n      pop\n        /* \"#utility.yul\":7597:8016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8022:8244   */\n    tag_21:\n        /* \"#utility.yul\":8115:8119   */\n      0x00\n        /* \"#utility.yul\":8153:8155   */\n      0x20\n        /* \"#utility.yul\":8142:8151   */\n      dup3\n        /* \"#utility.yul\":8138:8156   */\n      add\n        /* \"#utility.yul\":8130:8156   */\n      swap1\n      pop\n        /* \"#utility.yul\":8166:8237   */\n      tag_211\n        /* \"#utility.yul\":8234:8235   */\n      0x00\n        /* \"#utility.yul\":8223:8232   */\n      dup4\n        /* \"#utility.yul\":8219:8236   */\n      add\n        /* \"#utility.yul\":8210:8216   */\n      dup5\n        /* \"#utility.yul\":8166:8237   */\n      tag_187\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8022:8244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8331:8478   */\n    tag_184:\n        /* \"#utility.yul\":8432:8443   */\n      0x00\n        /* \"#utility.yul\":8469:8472   */\n      dup2\n        /* \"#utility.yul\":8454:8472   */\n      swap1\n      pop\n        /* \"#utility.yul\":8331:8478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8484:8653   */\n    tag_158:\n        /* \"#utility.yul\":8568:8579   */\n      0x00\n        /* \"#utility.yul\":8602:8608   */\n      dup3\n        /* \"#utility.yul\":8597:8600   */\n      dup3\n        /* \"#utility.yul\":8590:8609   */\n      mstore\n        /* \"#utility.yul\":8642:8646   */\n      0x20\n        /* \"#utility.yul\":8637:8640   */\n      dup3\n        /* \"#utility.yul\":8633:8647   */\n      add\n        /* \"#utility.yul\":8618:8647   */\n      swap1\n      pop\n        /* \"#utility.yul\":8484:8653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8659:8844   */\n    tag_111:\n        /* \"#utility.yul\":8699:8700   */\n      0x00\n        /* \"#utility.yul\":8716:8736   */\n      tag_217\n        /* \"#utility.yul\":8734:8735   */\n      dup3\n        /* \"#utility.yul\":8716:8736   */\n      tag_190\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":8711:8736   */\n      swap2\n      pop\n        /* \"#utility.yul\":8750:8770   */\n      tag_218\n        /* \"#utility.yul\":8768:8769   */\n      dup4\n        /* \"#utility.yul\":8750:8770   */\n      tag_190\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":8745:8770   */\n      swap3\n      pop\n        /* \"#utility.yul\":8789:8790   */\n      dup3\n        /* \"#utility.yul\":8779:8814   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":8794:8812   */\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8779:8814   */\n    tag_219:\n        /* \"#utility.yul\":8836:8837   */\n      dup3\n        /* \"#utility.yul\":8833:8834   */\n      dup3\n        /* \"#utility.yul\":8829:8838   */\n      div\n        /* \"#utility.yul\":8824:8838   */\n      swap1\n      pop\n        /* \"#utility.yul\":8659:8844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8850:9198   */\n    tag_109:\n        /* \"#utility.yul\":8890:8897   */\n      0x00\n        /* \"#utility.yul\":8913:8933   */\n      tag_223\n        /* \"#utility.yul\":8931:8932   */\n      dup3\n        /* \"#utility.yul\":8913:8933   */\n      tag_190\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8908:8933   */\n      swap2\n      pop\n        /* \"#utility.yul\":8947:8967   */\n      tag_224\n        /* \"#utility.yul\":8965:8966   */\n      dup4\n        /* \"#utility.yul\":8947:8967   */\n      tag_190\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8942:8967   */\n      swap3\n      pop\n        /* \"#utility.yul\":9135:9136   */\n      dup2\n        /* \"#utility.yul\":9067:9133   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9063:9137   */\n      div\n        /* \"#utility.yul\":9060:9061   */\n      dup4\n        /* \"#utility.yul\":9057:9138   */\n      gt\n        /* \"#utility.yul\":9052:9053   */\n      dup3\n        /* \"#utility.yul\":9045:9054   */\n      iszero\n        /* \"#utility.yul\":9038:9055   */\n      iszero\n        /* \"#utility.yul\":9034:9139   */\n      and\n        /* \"#utility.yul\":9031:9162   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":9142:9160   */\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":9031:9162   */\n    tag_225:\n        /* \"#utility.yul\":9190:9191   */\n      dup3\n        /* \"#utility.yul\":9187:9188   */\n      dup3\n        /* \"#utility.yul\":9183:9192   */\n      mul\n        /* \"#utility.yul\":9172:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":8850:9198   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9300   */\n    tag_150:\n        /* \"#utility.yul\":9241:9248   */\n      0x00\n        /* \"#utility.yul\":9270:9294   */\n      tag_229\n        /* \"#utility.yul\":9288:9293   */\n      dup3\n        /* \"#utility.yul\":9270:9294   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9259:9294   */\n      swap1\n      pop\n        /* \"#utility.yul\":9204:9300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9306:9432   */\n    tag_230:\n        /* \"#utility.yul\":9343:9350   */\n      0x00\n        /* \"#utility.yul\":9383:9425   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9376:9381   */\n      dup3\n        /* \"#utility.yul\":9372:9426   */\n      and\n        /* \"#utility.yul\":9361:9426   */\n      swap1\n      pop\n        /* \"#utility.yul\":9306:9432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9438:9515   */\n    tag_190:\n        /* \"#utility.yul\":9475:9482   */\n      0x00\n        /* \"#utility.yul\":9504:9509   */\n      dup2\n        /* \"#utility.yul\":9493:9509   */\n      swap1\n      pop\n        /* \"#utility.yul\":9438:9515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9521:9676   */\n    tag_154:\n        /* \"#utility.yul\":9600:9609   */\n      0x00\n        /* \"#utility.yul\":9633:9670   */\n      tag_234\n        /* \"#utility.yul\":9664:9669   */\n      dup3\n        /* \"#utility.yul\":9633:9670   */\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9620:9670   */\n      swap1\n      pop\n        /* \"#utility.yul\":9521:9676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9682:9808   */\n    tag_235:\n        /* \"#utility.yul\":9732:9741   */\n      0x00\n        /* \"#utility.yul\":9765:9802   */\n      tag_237\n        /* \"#utility.yul\":9796:9801   */\n      dup3\n        /* \"#utility.yul\":9765:9802   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9752:9802   */\n      swap1\n      pop\n        /* \"#utility.yul\":9682:9808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9814:9927   */\n    tag_238:\n        /* \"#utility.yul\":9864:9873   */\n      0x00\n        /* \"#utility.yul\":9897:9921   */\n      tag_240\n        /* \"#utility.yul\":9915:9920   */\n      dup3\n        /* \"#utility.yul\":9897:9921   */\n      tag_230\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9884:9921   */\n      swap1\n      pop\n        /* \"#utility.yul\":9814:9927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9933:10166   */\n    tag_60:\n        /* \"#utility.yul\":9972:9975   */\n      0x00\n        /* \"#utility.yul\":9995:10019   */\n      tag_242\n        /* \"#utility.yul\":10013:10018   */\n      dup3\n        /* \"#utility.yul\":9995:10019   */\n      tag_190\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":9986:10019   */\n      swap2\n      pop\n        /* \"#utility.yul\":10041:10107   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10034:10039   */\n      dup3\n        /* \"#utility.yul\":10031:10108   */\n      eq\n        /* \"#utility.yul\":10028:10131   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":10111:10129   */\n      tag_244\n      tag_227\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":10028:10131   */\n    tag_243:\n        /* \"#utility.yul\":10158:10159   */\n      0x01\n        /* \"#utility.yul\":10151:10156   */\n      dup3\n        /* \"#utility.yul\":10147:10160   */\n      add\n        /* \"#utility.yul\":10140:10160   */\n      swap1\n      pop\n        /* \"#utility.yul\":9933:10166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10172:10352   */\n    tag_227:\n        /* \"#utility.yul\":10220:10297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10217:10218   */\n      0x00\n        /* \"#utility.yul\":10210:10298   */\n      mstore\n        /* \"#utility.yul\":10317:10321   */\n      0x11\n        /* \"#utility.yul\":10314:10315   */\n      0x04\n        /* \"#utility.yul\":10307:10322   */\n      mstore\n        /* \"#utility.yul\":10341:10345   */\n      0x24\n        /* \"#utility.yul\":10338:10339   */\n      0x00\n        /* \"#utility.yul\":10331:10346   */\n      revert\n        /* \"#utility.yul\":10358:10538   */\n    tag_221:\n        /* \"#utility.yul\":10406:10483   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10403:10404   */\n      0x00\n        /* \"#utility.yul\":10396:10484   */\n      mstore\n        /* \"#utility.yul\":10503:10507   */\n      0x12\n        /* \"#utility.yul\":10500:10501   */\n      0x04\n        /* \"#utility.yul\":10493:10508   */\n      mstore\n        /* \"#utility.yul\":10527:10531   */\n      0x24\n        /* \"#utility.yul\":10524:10525   */\n      0x00\n        /* \"#utility.yul\":10517:10532   */\n      revert\n        /* \"#utility.yul\":10667:10784   */\n    tag_132:\n        /* \"#utility.yul\":10776:10777   */\n      0x00\n        /* \"#utility.yul\":10773:10774   */\n      dup1\n        /* \"#utility.yul\":10766:10778   */\n      revert\n        /* \"#utility.yul\":10790:11015   */\n    tag_160:\n        /* \"#utility.yul\":10930:10964   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10926:10927   */\n      0x00\n        /* \"#utility.yul\":10918:10924   */\n      dup3\n        /* \"#utility.yul\":10914:10928   */\n      add\n        /* \"#utility.yul\":10907:10965   */\n      mstore\n        /* \"#utility.yul\":10999:11007   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10994:10996   */\n      0x20\n        /* \"#utility.yul\":10986:10992   */\n      dup3\n        /* \"#utility.yul\":10982:10997   */\n      add\n        /* \"#utility.yul\":10975:11008   */\n      mstore\n        /* \"#utility.yul\":10790:11015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11021:11182   */\n    tag_165:\n        /* \"#utility.yul\":11161:11174   */\n      0x4e6f74206f6e206c697374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11157:11158   */\n      0x00\n        /* \"#utility.yul\":11149:11155   */\n      dup3\n        /* \"#utility.yul\":11145:11159   */\n      add\n        /* \"#utility.yul\":11138:11175   */\n      mstore\n        /* \"#utility.yul\":11021:11182   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11408   */\n    tag_170:\n        /* \"#utility.yul\":11328:11362   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":11324:11325   */\n      0x00\n        /* \"#utility.yul\":11316:11322   */\n      dup3\n        /* \"#utility.yul\":11312:11326   */\n      add\n        /* \"#utility.yul\":11305:11363   */\n      mstore\n        /* \"#utility.yul\":11397:11400   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11392:11394   */\n      0x20\n        /* \"#utility.yul\":11384:11390   */\n      dup3\n        /* \"#utility.yul\":11380:11395   */\n      add\n        /* \"#utility.yul\":11373:11401   */\n      mstore\n        /* \"#utility.yul\":11188:11408   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11414:11596   */\n    tag_175:\n        /* \"#utility.yul\":11554:11588   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11550:11551   */\n      0x00\n        /* \"#utility.yul\":11542:11548   */\n      dup3\n        /* \"#utility.yul\":11538:11552   */\n      add\n        /* \"#utility.yul\":11531:11589   */\n      mstore\n        /* \"#utility.yul\":11414:11596   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11602:11771   */\n    tag_180:\n        /* \"#utility.yul\":11742:11763   */\n      0x4661696c656420746f2073656e64206b6c617900000000000000000000000000\n        /* \"#utility.yul\":11738:11739   */\n      0x00\n        /* \"#utility.yul\":11730:11736   */\n      dup3\n        /* \"#utility.yul\":11726:11740   */\n      add\n        /* \"#utility.yul\":11719:11764   */\n      mstore\n        /* \"#utility.yul\":11602:11771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11777:11891   */\n    tag_186:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11897:12019   */\n    tag_121:\n        /* \"#utility.yul\":11970:11994   */\n      tag_257\n        /* \"#utility.yul\":11988:11993   */\n      dup2\n        /* \"#utility.yul\":11970:11994   */\n      tag_150\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":11963:11968   */\n      dup2\n        /* \"#utility.yul\":11960:11995   */\n      eq\n        /* \"#utility.yul\":11950:12013   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":12009:12010   */\n      0x00\n        /* \"#utility.yul\":12006:12007   */\n      dup1\n        /* \"#utility.yul\":11999:12011   */\n      revert\n        /* \"#utility.yul\":11950:12013   */\n    tag_258:\n        /* \"#utility.yul\":11897:12019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12025:12147   */\n    tag_125:\n        /* \"#utility.yul\":12098:12122   */\n      tag_260\n        /* \"#utility.yul\":12116:12121   */\n      dup2\n        /* \"#utility.yul\":12098:12122   */\n      tag_190\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":12091:12096   */\n      dup2\n        /* \"#utility.yul\":12088:12123   */\n      eq\n        /* \"#utility.yul\":12078:12141   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":12137:12138   */\n      0x00\n        /* \"#utility.yul\":12134:12135   */\n      dup1\n        /* \"#utility.yul\":12127:12139   */\n      revert\n        /* \"#utility.yul\":12078:12141   */\n    tag_261:\n        /* \"#utility.yul\":12025:12147   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122059b33f6b8632d22e6faa1e23c1932f7398ecf506fcc6e8ae074e51923ac8542864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_320": {
									"entryPoint": null,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_275": {
									"entryPoint": 485,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:1"
															},
															"nodeType": "YulIf",
															"src": "260:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:1",
														"type": ""
													}
												],
												"src": "156:507:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:1",
														"type": ""
													}
												],
												"src": "669:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:1",
														"type": ""
													}
												],
												"src": "750:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:1",
														"type": ""
													}
												],
												"src": "852:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:1"
															},
															"nodeType": "YulIf",
															"src": "1283:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:1",
														"type": ""
													}
												],
												"src": "1230:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200131d3803806200131d833981810160405281019062000037919062000204565b600062000049620001e560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200015157503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b6200015b57600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200029e565b600033905090565b600081519050620001fe8162000284565b92915050565b600080604083850312156200021e576200021d6200027f565b5b60006200022e85828601620001ed565b92505060206200024185828601620001ed565b9150509250929050565b600062000258826200025f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200028f816200024b565b81146200029b57600080fd5b50565b61106f80620002ae6000396000f3fe60806040526004361061007b5760003560e01c8063715018a61161004e578063715018a61461012f5780638da5cb5b14610146578063d3f5057314610171578063f2fde38b1461019a5761007b565b80633e56e6c314610080578063432be4d01461009c57806347ccca02146100d957806361d027b314610104575b600080fd5b61009a60048036038101906100959190610abc565b6101c3565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610a62565b61033f565b6040516100d09190610d0f565b60405180910390f35b3480156100e557600080fd5b506100ee610357565b6040516100fb9190610c54565b60405180910390f35b34801561011057600080fd5b5061011961037d565b6040516101269190610c10565b60405180910390f35b34801561013b57600080fd5b506101446103a3565b005b34801561015257600080fd5b5061015b6104f6565b6040516101689190610c10565b60405180910390f35b34801561017d57600080fd5b5061019860048036038101906101939190610abc565b61051f565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190610a35565b6105c2565b005b6000600360008481526020019081526020016000205411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610c8f565b60405180910390fd5b60005b818110156102465761023561022f610784565b8461078c565b8061023f90610e43565b905061021c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102a883600360008781526020019081526020016000205461092790919063ffffffff16565b6040516102b490610bfb565b60006040518083038185875af1925050503d80600081146102f1576040519150601f19603f3d011682016040523d82523d6000602084013e6102f6565b606091505b505090508061033a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033190610cef565b60405180910390fd5b505050565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103ab610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610527610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610ccf565b60405180910390fd5b6105be82826109a2565b5050565b6105ca610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90610c6f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c1780876040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e9190610a8f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b815260040161088d929190610c2b565b600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b5050505080828473ffffffffffffffffffffffffffffffffffffffff167fbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d600360008781526020019081526020016000205460405161091a9190610d0f565b60405180910390a4505050565b60008083141561093a576000905061099c565b600082846109489190610d77565b90508284826109579190610d46565b14610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610caf565b60405180910390fd5b809150505b92915050565b806003600084815260200190815260200160002081905550817f92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711826040516109ea9190610d0f565b60405180910390a25050565b600081359050610a058161100b565b92915050565b600081359050610a1a81611022565b92915050565b600081519050610a2f81611022565b92915050565b600060208284031215610a4b57610a4a610eea565b5b6000610a59848285016109f6565b91505092915050565b600060208284031215610a7857610a77610eea565b5b6000610a8684828501610a0b565b91505092915050565b600060208284031215610aa557610aa4610eea565b5b6000610ab384828501610a20565b91505092915050565b60008060408385031215610ad357610ad2610eea565b5b6000610ae185828601610a0b565b9250506020610af285828601610a0b565b9150509250929050565b610b0581610dd1565b82525050565b610b1481610e0d565b82525050565b6000610b27602683610d35565b9150610b3282610eef565b604082019050919050565b6000610b4a600b83610d35565b9150610b5582610f3e565b602082019050919050565b6000610b6d602183610d35565b9150610b7882610f67565b604082019050919050565b6000610b90602083610d35565b9150610b9b82610fb6565b602082019050919050565b6000610bb3601383610d35565b9150610bbe82610fdf565b602082019050919050565b6000610bd6600083610d2a565b9150610be182611008565b600082019050919050565b610bf581610e03565b82525050565b6000610c0682610bc9565b9150819050919050565b6000602082019050610c256000830184610afc565b92915050565b6000604082019050610c406000830185610afc565b610c4d6020830184610bec565b9392505050565b6000602082019050610c696000830184610b0b565b92915050565b60006020820190508181036000830152610c8881610b1a565b9050919050565b60006020820190508181036000830152610ca881610b3d565b9050919050565b60006020820190508181036000830152610cc881610b60565b9050919050565b60006020820190508181036000830152610ce881610b83565b9050919050565b60006020820190508181036000830152610d0881610ba6565b9050919050565b6000602082019050610d246000830184610bec565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d5182610e03565b9150610d5c83610e03565b925082610d6c57610d6b610ebb565b5b828204905092915050565b6000610d8282610e03565b9150610d8d83610e03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc657610dc5610e8c565b5b828202905092915050565b6000610ddc82610de3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e1882610e1f565b9050919050565b6000610e2a82610e31565b9050919050565b6000610e3c82610de3565b9050919050565b6000610e4e82610e03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e8157610e80610e8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f74206f6e206c697374000000000000000000000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4661696c656420746f2073656e64206b6c617900000000000000000000000000600082015250565b50565b61101481610dd1565b811461101f57600080fd5b50565b61102b81610e03565b811461103657600080fd5b5056fea264697066735822122059b33f6b8632d22e6faa1e23c1932f7398ecf506fcc6e8ae074e51923ac8542864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x131D CODESIZE SUB DUP1 PUSH3 0x131D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x204 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49 PUSH3 0x1E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x151 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x29E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FE DUP2 PUSH3 0x284 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x21E JUMPI PUSH3 0x21D PUSH3 0x27F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x22E DUP6 DUP3 DUP7 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x241 DUP6 DUP3 DUP7 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x258 DUP3 PUSH3 0x25F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x28F DUP2 PUSH3 0x24B JUMP JUMPDEST DUP2 EQ PUSH3 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x106F DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH2 0x235 PUSH2 0x22F PUSH2 0x784 JUMP JUMPDEST DUP5 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH2 0x23F SWAP1 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A8 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x927 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x527 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP3 DUP3 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1C178087 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x100B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1A DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2F DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB27 PUSH1 0x26 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP3 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4A PUSH1 0xB DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB55 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH1 0x21 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB78 DUP3 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB90 PUSH1 0x20 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP3 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 PUSH1 0x13 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBE DUP3 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 PUSH1 0x0 DUP4 PUSH2 0xD2A JUMP JUMPDEST SWAP2 POP PUSH2 0xBE1 DUP3 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF5 DUP2 PUSH2 0xE03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0xC4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC88 DUP2 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA8 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC8 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE8 DUP2 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD08 DUP2 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD51 DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5C DUP4 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0xEBB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD82 DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xE8C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDC DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE18 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A DUP3 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3C DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0xE8C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64206B6C617900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1014 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP2 EQ PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0xE03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB3 EXTCODEHASH PUSH12 0x8632D22E6FAA1E23C1932F73 SWAP9 0xEC CREATE2 MOD 0xFC 0xC6 0xE8 0xAE SMOD 0x4E MLOAD SWAP3 GASPRICE 0xC8 SLOAD 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "22433:1695:0:-:0;;;22830:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8103:17;8123:12;:10;;;:12;;:::i;:::-;8103:32;;8155:9;8146:6;;:18;;;;;;;;;;;;;;;;;;8213:9;8180:43;;8209:1;8180:43;;;;;;;;;;;;8092:139;22949:1;22926:25;;:11;:25;;;;:57;;;;;22978:4;22955:28;;:11;:28;;;;22926:57;22918:66;;;;;;23023:11;22995:3;;:40;;;;;;;;;;;;;;;;;;23057:9;23046:8;;:20;;;;;;;;;;;;;;;;;;22830:244;;22433:1695;;6903:98;6956:7;6983:10;6976:17;;6903:98;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;22433:1695:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_buyToken_1027": {
									"entryPoint": 1932,
									"id": 1027,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_commodityPrices_913": {
									"entryPoint": 831,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_listToken_982": {
									"entryPoint": 2466,
									"id": 982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_275": {
									"entryPoint": 1924,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_108": {
									"entryPoint": 2343,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nft_907": {
									"entryPoint": 855,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_329": {
									"entryPoint": 1270,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_364": {
									"entryPoint": 931,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBuyToken_1081": {
									"entryPoint": 451,
									"id": 1081,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeListToken_997": {
									"entryPoint": 1311,
									"id": 997,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_392": {
									"entryPoint": 1474,
									"id": 392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasury_909": {
									"entryPoint": 893,
									"id": 909,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3115,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721MintableAutoId_$899__to_t_address__fromStack_reversed": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721MintableAutoId_$899_to_t_address": {
									"entryPoint": 3597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3818,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f": {
									"entryPoint": 4063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12150:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:1",
														"type": ""
													}
												],
												"src": "152:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "360:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "370:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "379:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "401:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "338:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "346:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "354:5:1",
														"type": ""
													}
												],
												"src": "297:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "512:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "560:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:32:1"
															},
															"nodeType": "YulIf",
															"src": "522:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "651:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "666:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "680:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "670:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "695:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "730:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "741:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "726:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "726:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "750:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "705:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "705:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "695:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "482:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "493:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "505:6:1",
														"type": ""
													}
												],
												"src": "446:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "893:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "895:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "895:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "895:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "868:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "877:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "864:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "889:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "860:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:32:1"
															},
															"nodeType": "YulIf",
															"src": "857:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "986:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1001:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1005:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1030:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1065:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1076:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1061:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1061:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1085:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1040:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1040:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1030:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "781:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1193:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1239:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1241:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1241:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1241:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1214:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1223:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1210:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1235:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:32:1"
															},
															"nodeType": "YulIf",
															"src": "1203:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1332:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1347:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1351:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1376:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1422:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1433:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1418:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1418:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1442:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1386:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1386:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1376:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1163:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1174:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1186:6:1",
														"type": ""
													}
												],
												"src": "1116:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1602:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1604:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1604:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1604:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1577:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1586:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1569:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:32:1"
															},
															"nodeType": "YulIf",
															"src": "1566:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1695:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1710:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1724:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1714:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1739:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1774:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1770:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1770:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1794:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1749:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1749:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1739:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1822:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1837:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1841:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1867:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1902:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1913:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1898:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1898:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1922:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1877:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1867:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1518:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1529:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1541:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1549:6:1",
														"type": ""
													}
												],
												"src": "1473:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2035:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2058:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2040:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2040:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2028:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2028:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2006:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2013:3:1",
														"type": ""
													}
												],
												"src": "1953:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2171:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2188:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2193:59:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2193:66:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:79:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2159:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2166:3:1",
														"type": ""
													}
												],
												"src": "2077:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2418:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2428:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2435:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2600:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2511:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2613:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2624:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2620:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2406:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2414:3:1",
														"type": ""
													}
												],
												"src": "2272:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2800:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2866:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2871:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2807:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2807:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2800:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2972:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																	"nodeType": "YulIdentifier",
																	"src": "2883:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2883:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2985:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2996:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2992:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2985:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2778:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2786:3:1",
														"type": ""
													}
												],
												"src": "2644:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3172:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3238:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3243:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3179:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3179:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3172:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3344:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "3255:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3255:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3357:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3368:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3373:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3364:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3364:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3357:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3150:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3158:3:1",
														"type": ""
													}
												],
												"src": "3016:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3534:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3544:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3610:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3551:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3544:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3716:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3627:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3729:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3740:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3745:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3729:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3522:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3530:3:1",
														"type": ""
													}
												],
												"src": "3388:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3906:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3916:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3982:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3987:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3923:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4088:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
																	"nodeType": "YulIdentifier",
																	"src": "3999:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3999:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4101:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4112:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4117:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4108:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4101:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3894:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3902:3:1",
														"type": ""
													}
												],
												"src": "3760:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4295:235:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4305:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4388:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4393:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4312:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4305:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4493:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "4404:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4404:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4404:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4506:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4517:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4522:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4283:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4291:3:1",
														"type": ""
													}
												],
												"src": "4132:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4601:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4618:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4641:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4623:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4623:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4589:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4596:3:1",
														"type": ""
													}
												],
												"src": "4536:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4848:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4859:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5009:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4866:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4866:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4859:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5023:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5030:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5023:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4835:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4844:3:1",
														"type": ""
													}
												],
												"src": "4660:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5143:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5153:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5165:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5176:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5161:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5161:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5153:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5233:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5189:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5115:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5127:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5138:4:1",
														"type": ""
													}
												],
												"src": "5045:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5399:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5409:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5421:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5409:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5489:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5502:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5513:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5498:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5445:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5445:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5445:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5570:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5594:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5526:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5526:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5526:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5363:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5383:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5394:4:1",
														"type": ""
													}
												],
												"src": "5273:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5738:153:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5748:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5756:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5756:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5748:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5857:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5881:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5866:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5784:72:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:100:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5784:100:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721MintableAutoId_$899__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5710:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5722:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5733:4:1",
														"type": ""
													}
												],
												"src": "5611:280:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6068:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6136:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6121:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6144:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6140:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6114:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6170:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6304:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6178:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6170:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6048:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6063:4:1",
														"type": ""
													}
												],
												"src": "5897:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6493:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6503:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6550:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6546:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6569:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6575:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6565:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6539:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6539:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6539:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6595:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6729:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6603:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6603:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6595:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6488:4:1",
														"type": ""
													}
												],
												"src": "6322:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6918:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6928:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6940:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6936:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6928:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6986:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6971:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6971:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6994:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6990:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6964:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7020:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7154:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7028:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7020:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6898:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6913:4:1",
														"type": ""
													}
												],
												"src": "6747:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7343:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7353:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7365:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7361:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7353:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7400:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7411:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7396:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7419:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7425:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7415:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7389:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7445:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7579:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7453:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7453:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7445:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7323:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7338:4:1",
														"type": ""
													}
												],
												"src": "7172:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7768:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7778:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7790:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7801:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7778:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7836:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7821:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7844:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7850:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7840:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7870:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8004:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7878:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7870:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7748:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7763:4:1",
														"type": ""
													}
												],
												"src": "7597:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8120:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8210:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8219:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8166:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8166:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8092:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8104:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8115:4:1",
														"type": ""
													}
												],
												"src": "8022:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8290:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8300:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8316:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8310:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8300:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8283:6:1",
														"type": ""
													}
												],
												"src": "8250:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8444:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8454:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8469:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8454:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8416:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8421:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8432:11:1",
														"type": ""
													}
												],
												"src": "8331:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8580:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8597:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8602:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8590:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8590:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8618:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8637:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8642:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8618:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8552:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8557:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8568:11:1",
														"type": ""
													}
												],
												"src": "8484:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8701:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8711:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8734:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8716:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8711:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8745:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8768:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8750:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8745:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8792:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8794:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8794:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8794:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8789:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8782:9:1"
															},
															"nodeType": "YulIf",
															"src": "8779:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8824:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8833:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8836:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8829:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8824:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8690:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8693:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8699:1:1",
														"type": ""
													}
												],
												"src": "8659:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8898:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8908:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8931:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8913:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8913:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8908:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8942:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8965:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8947:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8947:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8942:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9140:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9142:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9142:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9142:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9052:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9045:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9045:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9038:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9038:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9060:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9067:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9135:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9063:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9063:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9057:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9034:105:1"
															},
															"nodeType": "YulIf",
															"src": "9031:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9172:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9187:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9190:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9183:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9183:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9172:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8881:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8884:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8890:7:1",
														"type": ""
													}
												],
												"src": "8850:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9249:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9259:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9288:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9270:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9270:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9259:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9231:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9241:7:1",
														"type": ""
													}
												],
												"src": "9204:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9351:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9361:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9376:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9383:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9361:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9333:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9343:7:1",
														"type": ""
													}
												],
												"src": "9306:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9483:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9493:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9504:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9493:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9465:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9475:7:1",
														"type": ""
													}
												],
												"src": "9438:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9610:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9620:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9664:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9633:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9633:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9620:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9590:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9600:9:1",
														"type": ""
													}
												],
												"src": "9521:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9742:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9752:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9796:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9765:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9752:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9722:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9732:9:1",
														"type": ""
													}
												],
												"src": "9682:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9874:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9884:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9915:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9897:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9897:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9884:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9854:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9864:9:1",
														"type": ""
													}
												],
												"src": "9814:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9976:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9986:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10013:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9995:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9995:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9986:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10109:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10111:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10111:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10111:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10034:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10041:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10031:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:77:1"
															},
															"nodeType": "YulIf",
															"src": "10028:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10140:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10151:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10147:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9962:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9972:3:1",
														"type": ""
													}
												],
												"src": "9933:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10200:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10217:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10220:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10210:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10314:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10317:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10307:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10341:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10331:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10331:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10172:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10386:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10403:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10406:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10396:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10396:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10396:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10500:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10503:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10493:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10493:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10527:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10517:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10517:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10358:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10633:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10650:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10653:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10643:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10643:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10544:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10756:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10776:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10766:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10766:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10667:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10896:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10918:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10926:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10914:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10930:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10907:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10907:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10986:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10994:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10982:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10999:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10975:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10975:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10888:6:1",
														"type": ""
													}
												],
												"src": "10790:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11127:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11149:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11157:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11145:14:1"
																	},
																	{
																		"hexValue": "4e6f74206f6e206c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11161:13:1",
																		"type": "",
																		"value": "Not on list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11138:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11119:6:1",
														"type": ""
													}
												],
												"src": "11021:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11294:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11316:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11324:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11312:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11328:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11305:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11305:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11384:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11392:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11380:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11397:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11373:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11373:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11373:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11286:6:1",
														"type": ""
													}
												],
												"src": "11188:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11520:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11542:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11550:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11538:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11554:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11531:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11531:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11512:6:1",
														"type": ""
													}
												],
												"src": "11414:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11708:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11730:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11738:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11726:14:1"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64206b6c6179",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11742:21:1",
																		"type": "",
																		"value": "Failed to send klay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11719:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11719:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11700:6:1",
														"type": ""
													}
												],
												"src": "11602:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11883:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11875:6:1",
														"type": ""
													}
												],
												"src": "11777:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11940:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11997:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12006:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12009:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11999:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11999:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11999:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11963:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11988:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11970:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11970:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11960:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:43:1"
															},
															"nodeType": "YulIf",
															"src": "11950:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11933:5:1",
														"type": ""
													}
												],
												"src": "11897:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12068:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12125:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12134:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12137:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12127:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12127:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12127:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12091:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12116:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12098:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12098:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12088:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12088:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12081:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12081:43:1"
															},
															"nodeType": "YulIf",
															"src": "12078:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12061:5:1",
														"type": ""
													}
												],
												"src": "12025:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721MintableAutoId_$899_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721MintableAutoId_$899__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC721MintableAutoId_$899_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not on list\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to send klay\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063715018a61161004e578063715018a61461012f5780638da5cb5b14610146578063d3f5057314610171578063f2fde38b1461019a5761007b565b80633e56e6c314610080578063432be4d01461009c57806347ccca02146100d957806361d027b314610104575b600080fd5b61009a60048036038101906100959190610abc565b6101c3565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610a62565b61033f565b6040516100d09190610d0f565b60405180910390f35b3480156100e557600080fd5b506100ee610357565b6040516100fb9190610c54565b60405180910390f35b34801561011057600080fd5b5061011961037d565b6040516101269190610c10565b60405180910390f35b34801561013b57600080fd5b506101446103a3565b005b34801561015257600080fd5b5061015b6104f6565b6040516101689190610c10565b60405180910390f35b34801561017d57600080fd5b5061019860048036038101906101939190610abc565b61051f565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190610a35565b6105c2565b005b6000600360008481526020019081526020016000205411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610c8f565b60405180910390fd5b60005b818110156102465761023561022f610784565b8461078c565b8061023f90610e43565b905061021c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102a883600360008781526020019081526020016000205461092790919063ffffffff16565b6040516102b490610bfb565b60006040518083038185875af1925050503d80600081146102f1576040519150601f19603f3d011682016040523d82523d6000602084013e6102f6565b606091505b505090508061033a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033190610cef565b60405180910390fd5b505050565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103ab610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610527610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610ccf565b60405180910390fd5b6105be82826109a2565b5050565b6105ca610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610ccf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90610c6f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c1780876040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e9190610a8f565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b815260040161088d929190610c2b565b600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b5050505080828473ffffffffffffffffffffffffffffffffffffffff167fbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d600360008781526020019081526020016000205460405161091a9190610d0f565b60405180910390a4505050565b60008083141561093a576000905061099c565b600082846109489190610d77565b90508284826109579190610d46565b14610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610caf565b60405180910390fd5b809150505b92915050565b806003600084815260200190815260200160002081905550817f92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711826040516109ea9190610d0f565b60405180910390a25050565b600081359050610a058161100b565b92915050565b600081359050610a1a81611022565b92915050565b600081519050610a2f81611022565b92915050565b600060208284031215610a4b57610a4a610eea565b5b6000610a59848285016109f6565b91505092915050565b600060208284031215610a7857610a77610eea565b5b6000610a8684828501610a0b565b91505092915050565b600060208284031215610aa557610aa4610eea565b5b6000610ab384828501610a20565b91505092915050565b60008060408385031215610ad357610ad2610eea565b5b6000610ae185828601610a0b565b9250506020610af285828601610a0b565b9150509250929050565b610b0581610dd1565b82525050565b610b1481610e0d565b82525050565b6000610b27602683610d35565b9150610b3282610eef565b604082019050919050565b6000610b4a600b83610d35565b9150610b5582610f3e565b602082019050919050565b6000610b6d602183610d35565b9150610b7882610f67565b604082019050919050565b6000610b90602083610d35565b9150610b9b82610fb6565b602082019050919050565b6000610bb3601383610d35565b9150610bbe82610fdf565b602082019050919050565b6000610bd6600083610d2a565b9150610be182611008565b600082019050919050565b610bf581610e03565b82525050565b6000610c0682610bc9565b9150819050919050565b6000602082019050610c256000830184610afc565b92915050565b6000604082019050610c406000830185610afc565b610c4d6020830184610bec565b9392505050565b6000602082019050610c696000830184610b0b565b92915050565b60006020820190508181036000830152610c8881610b1a565b9050919050565b60006020820190508181036000830152610ca881610b3d565b9050919050565b60006020820190508181036000830152610cc881610b60565b9050919050565b60006020820190508181036000830152610ce881610b83565b9050919050565b60006020820190508181036000830152610d0881610ba6565b9050919050565b6000602082019050610d246000830184610bec565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d5182610e03565b9150610d5c83610e03565b925082610d6c57610d6b610ebb565b5b828204905092915050565b6000610d8282610e03565b9150610d8d83610e03565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610dc657610dc5610e8c565b5b828202905092915050565b6000610ddc82610de3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e1882610e1f565b9050919050565b6000610e2a82610e31565b9050919050565b6000610e3c82610de3565b9050919050565b6000610e4e82610e03565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e8157610e80610e8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f74206f6e206c697374000000000000000000000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4661696c656420746f2073656e64206b6c617900000000000000000000000000600082015250565b50565b61101481610dd1565b811461101f57600080fd5b50565b61102b81610e03565b811461103657600080fd5b5056fea264697066735822122059b33f6b8632d22e6faa1e23c1932f7398ecf506fcc6e8ae074e51923ac8542864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH2 0x235 PUSH2 0x22F PUSH2 0x784 JUMP JUMPDEST DUP5 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH2 0x23F SWAP1 PUSH2 0xE43 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A8 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x927 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP1 PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x527 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP3 DUP3 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xC6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1C178087 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xD77 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0xCAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0x100B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1A DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2F DUP2 PUSH2 0x1022 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA4B JUMPI PUSH2 0xA4A PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA59 DUP5 DUP3 DUP6 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA78 JUMPI PUSH2 0xA77 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA86 DUP5 DUP3 DUP6 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA5 JUMPI PUSH2 0xAA4 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP5 DUP3 DUP6 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAD3 JUMPI PUSH2 0xAD2 PUSH2 0xEEA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAE1 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAF2 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xB05 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB14 DUP2 PUSH2 0xE0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB27 PUSH1 0x26 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB32 DUP3 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB4A PUSH1 0xB DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB55 DUP3 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6D PUSH1 0x21 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB78 DUP3 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB90 PUSH1 0x20 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9B DUP3 PUSH2 0xFB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB3 PUSH1 0x13 DUP4 PUSH2 0xD35 JUMP JUMPDEST SWAP2 POP PUSH2 0xBBE DUP3 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBD6 PUSH1 0x0 DUP4 PUSH2 0xD2A JUMP JUMPDEST SWAP2 POP PUSH2 0xBE1 DUP3 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBF5 DUP2 PUSH2 0xE03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC06 DUP3 PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC25 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC40 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAFC JUMP JUMPDEST PUSH2 0xC4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC88 DUP2 PUSH2 0xB1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCA8 DUP2 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC8 DUP2 PUSH2 0xB60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE8 DUP2 PUSH2 0xB83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD08 DUP2 PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD24 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD51 DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5C DUP4 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xD6C JUMPI PUSH2 0xD6B PUSH2 0xEBB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD82 DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH2 0xD8D DUP4 PUSH2 0xE03 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xE8C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDC DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE18 DUP3 PUSH2 0xE1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A DUP3 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3C DUP3 PUSH2 0xDE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4E DUP3 PUSH2 0xE03 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE81 JUMPI PUSH2 0xE80 PUSH2 0xE8C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2073656E64206B6C617900000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1014 DUP2 PUSH2 0xDD1 JUMP JUMPDEST DUP2 EQ PUSH2 0x101F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0xE03 JUMP JUMPDEST DUP2 EQ PUSH2 0x1036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xB3 EXTCODEHASH PUSH12 0x8632D22E6FAA1E23C1932F73 SWAP9 0xEC CREATE2 MOD 0xFC 0xC6 0xE8 0xAE SMOD 0x4E MLOAD SWAP3 GASPRICE 0xC8 SLOAD 0x28 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "22433:1695:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23694:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22588:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22511:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22552:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8954:148;;;;;;;;;;;;;:::i;:::-;;8312:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23279:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9257:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23694:427;23825:1;23792:16;:32;23809:14;23792:32;;;;;;;;;;;;:34;23784:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;23860:9;23855:106;23879:9;23875:1;:13;23855:106;;;23910:39;23920:12;:10;:12::i;:::-;23934:14;23910:9;:39::i;:::-;23890:3;;;;:::i;:::-;;;23855:106;;;;23972:12;23990:8;;;;;;;;;;;:13;;24011:47;24048:9;24011:16;:32;24028:14;24011:32;;;;;;;;;;;;:36;;:47;;;;:::i;:::-;23990:73;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23971:92;;;24082:7;24074:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;23773:348;23694:427;;:::o;22588:51::-;;;;;;;;;;;;;;;;;:::o;22511:32::-;;;;;;;;;;;;;:::o;22552:23::-;;;;;;;;;;;;;:::o;8954:148::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9061:1:::1;9024:40;;9045:6;::::0;::::1;;;;;;;;9024:40;;;;;;;;;;;;9092:1;9075:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;8954:148::o:0;8312:79::-;8350:7;8377:6;;;;;;;;;;;8370:13;;8312:79;:::o;23279:133::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;23370:34:::1;23381:14;23397:6;23370:10;:34::i;:::-;23279:133:::0;;:::o;9257:244::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9366:1:::1;9346:22;;:8;:22;;;;9338:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;9456:8;9427:38;;9448:6;::::0;::::1;;;;;;;;9427:38;;;;;;;;;;;;9485:8;9476:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;9257:244:::0;:::o;6903:98::-;6956:7;6983:10;6976:17;;6903:98;:::o;23424:258::-;23503:15;23521:3;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23503:38;;23552:3;;;;;;;;;;;:12;;;23565:6;23573:14;23552:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23632:7;23616:14;23608:6;23604:70;;;23641:16;:32;23658:14;23641:32;;;;;;;;;;;;23604:70;;;;;;:::i;:::-;;;;;;;;23492:190;23424:258;;:::o;2380:471::-;2438:7;2688:1;2683;:6;2679:47;;;2713:1;2706:8;;;;2679:47;2738:9;2754:1;2750;:5;;;;:::i;:::-;2738:17;;2783:1;2778;2774;:5;;;;:::i;:::-;:10;2766:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:1;2835:8;;;2380:471;;;;;:::o;23086:181::-;23201:6;23166:16;:32;23183:14;23166:32;;;;;;;;;;;:41;;;;23236:14;23223:36;23252:6;23223:36;;;;;;:::i;:::-;;;;;;;;23086:181;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:143::-;354:5;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;297:143;;;;:::o;446:329::-;505:6;554:2;542:9;533:7;529:23;525:32;522:119;;;560:79;;:::i;:::-;522:119;680:1;705:53;750:7;741:6;730:9;726:22;705:53;:::i;:::-;695:63;;651:117;446:329;;;;:::o;781:::-;840:6;889:2;877:9;868:7;864:23;860:32;857:119;;;895:79;;:::i;:::-;857:119;1015:1;1040:53;1085:7;1076:6;1065:9;1061:22;1040:53;:::i;:::-;1030:63;;986:117;781:329;;;;:::o;1116:351::-;1186:6;1235:2;1223:9;1214:7;1210:23;1206:32;1203:119;;;1241:79;;:::i;:::-;1203:119;1361:1;1386:64;1442:7;1433:6;1422:9;1418:22;1386:64;:::i;:::-;1376:74;;1332:128;1116:351;;;;:::o;1473:474::-;1541:6;1549;1598:2;1586:9;1577:7;1573:23;1569:32;1566:119;;;1604:79;;:::i;:::-;1566:119;1724:1;1749:53;1794:7;1785:6;1774:9;1770:22;1749:53;:::i;:::-;1739:63;;1695:117;1851:2;1877:53;1922:7;1913:6;1902:9;1898:22;1877:53;:::i;:::-;1867:63;;1822:118;1473:474;;;;;:::o;1953:118::-;2040:24;2058:5;2040:24;:::i;:::-;2035:3;2028:37;1953:118;;:::o;2077:189::-;2193:66;2253:5;2193:66;:::i;:::-;2188:3;2181:79;2077:189;;:::o;2272:366::-;2414:3;2435:67;2499:2;2494:3;2435:67;:::i;:::-;2428:74;;2511:93;2600:3;2511:93;:::i;:::-;2629:2;2624:3;2620:12;2613:19;;2272:366;;;:::o;2644:::-;2786:3;2807:67;2871:2;2866:3;2807:67;:::i;:::-;2800:74;;2883:93;2972:3;2883:93;:::i;:::-;3001:2;2996:3;2992:12;2985:19;;2644:366;;;:::o;3016:::-;3158:3;3179:67;3243:2;3238:3;3179:67;:::i;:::-;3172:74;;3255:93;3344:3;3255:93;:::i;:::-;3373:2;3368:3;3364:12;3357:19;;3016:366;;;:::o;3388:::-;3530:3;3551:67;3615:2;3610:3;3551:67;:::i;:::-;3544:74;;3627:93;3716:3;3627:93;:::i;:::-;3745:2;3740:3;3736:12;3729:19;;3388:366;;;:::o;3760:::-;3902:3;3923:67;3987:2;3982:3;3923:67;:::i;:::-;3916:74;;3999:93;4088:3;3999:93;:::i;:::-;4117:2;4112:3;4108:12;4101:19;;3760:366;;;:::o;4132:398::-;4291:3;4312:83;4393:1;4388:3;4312:83;:::i;:::-;4305:90;;4404:93;4493:3;4404:93;:::i;:::-;4522:1;4517:3;4513:11;4506:18;;4132:398;;;:::o;4536:118::-;4623:24;4641:5;4623:24;:::i;:::-;4618:3;4611:37;4536:118;;:::o;4660:379::-;4844:3;4866:147;5009:3;4866:147;:::i;:::-;4859:154;;5030:3;5023:10;;4660:379;;;:::o;5045:222::-;5138:4;5176:2;5165:9;5161:18;5153:26;;5189:71;5257:1;5246:9;5242:17;5233:6;5189:71;:::i;:::-;5045:222;;;;:::o;5273:332::-;5394:4;5432:2;5421:9;5417:18;5409:26;;5445:71;5513:1;5502:9;5498:17;5489:6;5445:71;:::i;:::-;5526:72;5594:2;5583:9;5579:18;5570:6;5526:72;:::i;:::-;5273:332;;;;;:::o;5611:280::-;5733:4;5771:2;5760:9;5756:18;5748:26;;5784:100;5881:1;5870:9;5866:17;5857:6;5784:100;:::i;:::-;5611:280;;;;:::o;5897:419::-;6063:4;6101:2;6090:9;6086:18;6078:26;;6150:9;6144:4;6140:20;6136:1;6125:9;6121:17;6114:47;6178:131;6304:4;6178:131;:::i;:::-;6170:139;;5897:419;;;:::o;6322:::-;6488:4;6526:2;6515:9;6511:18;6503:26;;6575:9;6569:4;6565:20;6561:1;6550:9;6546:17;6539:47;6603:131;6729:4;6603:131;:::i;:::-;6595:139;;6322:419;;;:::o;6747:::-;6913:4;6951:2;6940:9;6936:18;6928:26;;7000:9;6994:4;6990:20;6986:1;6975:9;6971:17;6964:47;7028:131;7154:4;7028:131;:::i;:::-;7020:139;;6747:419;;;:::o;7172:::-;7338:4;7376:2;7365:9;7361:18;7353:26;;7425:9;7419:4;7415:20;7411:1;7400:9;7396:17;7389:47;7453:131;7579:4;7453:131;:::i;:::-;7445:139;;7172:419;;;:::o;7597:::-;7763:4;7801:2;7790:9;7786:18;7778:26;;7850:9;7844:4;7840:20;7836:1;7825:9;7821:17;7814:47;7878:131;8004:4;7878:131;:::i;:::-;7870:139;;7597:419;;;:::o;8022:222::-;8115:4;8153:2;8142:9;8138:18;8130:26;;8166:71;8234:1;8223:9;8219:17;8210:6;8166:71;:::i;:::-;8022:222;;;;:::o;8331:147::-;8432:11;8469:3;8454:18;;8331:147;;;;:::o;8484:169::-;8568:11;8602:6;8597:3;8590:19;8642:4;8637:3;8633:14;8618:29;;8484:169;;;;:::o;8659:185::-;8699:1;8716:20;8734:1;8716:20;:::i;:::-;8711:25;;8750:20;8768:1;8750:20;:::i;:::-;8745:25;;8789:1;8779:35;;8794:18;;:::i;:::-;8779:35;8836:1;8833;8829:9;8824:14;;8659:185;;;;:::o;8850:348::-;8890:7;8913:20;8931:1;8913:20;:::i;:::-;8908:25;;8947:20;8965:1;8947:20;:::i;:::-;8942:25;;9135:1;9067:66;9063:74;9060:1;9057:81;9052:1;9045:9;9038:17;9034:105;9031:131;;;9142:18;;:::i;:::-;9031:131;9190:1;9187;9183:9;9172:20;;8850:348;;;;:::o;9204:96::-;9241:7;9270:24;9288:5;9270:24;:::i;:::-;9259:35;;9204:96;;;:::o;9306:126::-;9343:7;9383:42;9376:5;9372:54;9361:65;;9306:126;;;:::o;9438:77::-;9475:7;9504:5;9493:16;;9438:77;;;:::o;9521:155::-;9600:9;9633:37;9664:5;9633:37;:::i;:::-;9620:50;;9521:155;;;:::o;9682:126::-;9732:9;9765:37;9796:5;9765:37;:::i;:::-;9752:50;;9682:126;;;:::o;9814:113::-;9864:9;9897:24;9915:5;9897:24;:::i;:::-;9884:37;;9814:113;;;:::o;9933:233::-;9972:3;9995:24;10013:5;9995:24;:::i;:::-;9986:33;;10041:66;10034:5;10031:77;10028:103;;;10111:18;;:::i;:::-;10028:103;10158:1;10151:5;10147:13;10140:20;;9933:233;;;:::o;10172:180::-;10220:77;10217:1;10210:88;10317:4;10314:1;10307:15;10341:4;10338:1;10331:15;10358:180;10406:77;10403:1;10396:88;10503:4;10500:1;10493:15;10527:4;10524:1;10517:15;10667:117;10776:1;10773;10766:12;10790:225;10930:34;10926:1;10918:6;10914:14;10907:58;10999:8;10994:2;10986:6;10982:15;10975:33;10790:225;:::o;11021:161::-;11161:13;11157:1;11149:6;11145:14;11138:37;11021:161;:::o;11188:220::-;11328:34;11324:1;11316:6;11312:14;11305:58;11397:3;11392:2;11384:6;11380:15;11373:28;11188:220;:::o;11414:182::-;11554:34;11550:1;11542:6;11538:14;11531:58;11414:182;:::o;11602:169::-;11742:21;11738:1;11730:6;11726:14;11719:45;11602:169;:::o;11777:114::-;;:::o;11897:122::-;11970:24;11988:5;11970:24;:::i;:::-;11963:5;11960:35;11950:63;;12009:1;12006;11999:12;11950:63;11897:122;:::o;12025:::-;12098:24;12116:5;12098:24;:::i;:::-;12091:5;12088:35;12078:63;;12137:1;12134;12127:12;12078:63;12025:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "841400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_commodityPrices(uint256)": "infinite",
								"nft()": "2645",
								"owner()": "2544",
								"renounceOwnership()": "30291",
								"safeBuyToken(uint256,uint256)": "infinite",
								"safeListToken(uint256,uint256)": "infinite",
								"transferOwnership(address)": "30706",
								"treasury()": "2581"
							},
							"internal": {
								"_buyToken(address,uint256)": "infinite",
								"_listToken(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8155,
									"end": 8164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8213,
									"end": 8222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8209,
									"end": 8210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8092,
									"end": 8231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22949,
									"end": 22950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22978,
									"end": 22982,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23023,
									"end": 23034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 22998,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22995,
									"end": 22998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23057,
									"end": 23066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23054,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23046,
									"end": 23054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6956,
									"end": 6963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6983,
									"end": 6993,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059b33f6b8632d22e6faa1e23c1932f7398ecf506fcc6e8ae074e51923ac8542864736f6c63430008070033",
									".code": [
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "D3F50573"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "3E56E6C3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "432BE4D0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23825,
											"end": 23826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23792,
											"end": 23808,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23809,
											"end": 23823,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23860,
											"end": 23869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23888,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23920,
											"end": 23930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23934,
											"end": 23948,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23910,
											"end": 23919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23972,
											"end": 23984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23990,
											"end": 24003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24048,
											"end": 24057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24027,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24011,
											"end": 24047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24082,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23773,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23381,
											"end": 23395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "PUSH",
											"source": 0,
											"value": "1C178087"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "PUSH",
											"source": 0,
											"value": "A1448194"
										},
										{
											"begin": 23565,
											"end": 23571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23573,
											"end": 23587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23616,
											"end": 23630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23614,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "BEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D"
										},
										{
											"begin": 23641,
											"end": 23657,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23658,
											"end": 23672,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 23492,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23201,
											"end": 23207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23183,
											"end": 23197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23236,
											"end": 23250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711"
										},
										{
											"begin": 23252,
											"end": 23258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 354,
											"end": 359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 370,
											"end": 392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 370,
											"end": 392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 446,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 533,
											"end": 540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 529,
											"end": 552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 525,
											"end": 557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 522,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 522,
											"end": 641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 522,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 522,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 750,
											"end": 757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 730,
											"end": 739,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 705,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 705,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 695,
											"end": 758,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 695,
											"end": 758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 651,
											"end": 768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 775,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 446,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 446,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 446,
											"end": 775,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 868,
											"end": 875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 864,
											"end": 887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 860,
											"end": 892,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 857,
											"end": 976,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 857,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 857,
											"end": 976,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 895,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 895,
											"end": 974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 857,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 857,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1085,
											"end": 1092,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1040,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 1110,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1241,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1203,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1442,
											"end": 1449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1422,
											"end": 1431,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1386,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1555,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1596,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1569,
											"end": 1601,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1566,
											"end": 1685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1604,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1604,
											"end": 1683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1604,
											"end": 1683,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1604,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1566,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1794,
											"end": 1801,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1749,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 1911,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1877,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1947,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1953,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1953,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2040,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2040,
											"end": 2064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2040,
											"end": 2064,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2040,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2071,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 2071,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2077,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2077,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2193,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2435,
											"end": 2502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2435,
											"end": 2502,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2435,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2600,
											"end": 2603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2511,
											"end": 2604,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2511,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2624,
											"end": 2627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2638,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2871,
											"end": 2873,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 2807,
											"end": 2874,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2807,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2807,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2972,
											"end": 2975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2883,
											"end": 2976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2883,
											"end": 2976,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2883,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 2999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 3010,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3243,
											"end": 3245,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3238,
											"end": 3241,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3179,
											"end": 3246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3179,
											"end": 3246,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3179,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3246,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3344,
											"end": 3347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3255,
											"end": 3348,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3348,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3255,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3551,
											"end": 3618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3551,
											"end": 3618,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 3551,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3716,
											"end": 3719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3627,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 3627,
											"end": 3720,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3720,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3627,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3754,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3982,
											"end": 3985,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3923,
											"end": 3990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3999,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4119,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3760,
											"end": 4126,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4291,
											"end": 4294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 4312,
											"end": 4395,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4395,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 4312,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4493,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 4404,
											"end": 4497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4404,
											"end": 4497,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 4404,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4536,
											"end": 4654,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4536,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4641,
											"end": 4646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 4623,
											"end": 4647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4647,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4623,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4536,
											"end": 4654,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4866,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 4866,
											"end": 5013,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4866,
											"end": 5013,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4866,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5030,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 5039,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5165,
											"end": 5174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5257,
											"end": 5258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5233,
											"end": 5239,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5189,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5189,
											"end": 5260,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5189,
											"end": 5260,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 5189,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5267,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5394,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5421,
											"end": 5430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5445,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 5445,
											"end": 5516,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5445,
											"end": 5516,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 5445,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5594,
											"end": 5596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5583,
											"end": 5592,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 5526,
											"end": 5598,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5526,
											"end": 5598,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5526,
											"end": 5598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5605,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5737,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5881,
											"end": 5882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5866,
											"end": 5883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5857,
											"end": 5863,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5784,
											"end": 5884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5884,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5784,
											"end": 5884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6090,
											"end": 6099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6086,
											"end": 6104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6121,
											"end": 6138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6178,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6178,
											"end": 6309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6178,
											"end": 6309,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 6178,
											"end": 6309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6170,
											"end": 6309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5897,
											"end": 6316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6488,
											"end": 6492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6515,
											"end": 6524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6569,
											"end": 6573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6585,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6729,
											"end": 6733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 6603,
											"end": 6734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6603,
											"end": 6734,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6603,
											"end": 6734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6741,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 6917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6940,
											"end": 6949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6936,
											"end": 6954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6994,
											"end": 6998,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 7010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6964,
											"end": 7011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7154,
											"end": 7158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 7028,
											"end": 7159,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7028,
											"end": 7159,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7028,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7020,
											"end": 7159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 7166,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7376,
											"end": 7378,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7365,
											"end": 7374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7353,
											"end": 7379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7425,
											"end": 7434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7415,
											"end": 7435,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7409,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7579,
											"end": 7583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7453,
											"end": 7584,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7453,
											"end": 7584,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7453,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7172,
											"end": 7591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7786,
											"end": 7804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7778,
											"end": 7804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7844,
											"end": 7848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7860,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7821,
											"end": 7838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 8004,
											"end": 8008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7878,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 8009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 8009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 8016,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8142,
											"end": 8151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8166,
											"end": 8237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8166,
											"end": 8237,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8166,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8022,
											"end": 8244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8469,
											"end": 8472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8568,
											"end": 8579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8597,
											"end": 8600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8642,
											"end": 8646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8633,
											"end": 8647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8653,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8734,
											"end": 8735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8716,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8716,
											"end": 8736,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8716,
											"end": 8736,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8716,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8711,
											"end": 8736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8768,
											"end": 8769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8750,
											"end": 8770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8770,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8745,
											"end": 8770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8789,
											"end": 8790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8779,
											"end": 8814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8794,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8814,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8779,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8836,
											"end": 8837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8838,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8824,
											"end": 8838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8844,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 8897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8931,
											"end": 8932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8913,
											"end": 8933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8965,
											"end": 8966,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 8947,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8942,
											"end": 8967,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8942,
											"end": 8967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9067,
											"end": 9133,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9063,
											"end": 9137,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9060,
											"end": 9061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9138,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9055,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9034,
											"end": 9139,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9031,
											"end": 9162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9142,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9162,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9031,
											"end": 9162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9187,
											"end": 9188,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9183,
											"end": 9192,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9198,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9241,
											"end": 9248,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9288,
											"end": 9293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9270,
											"end": 9294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9270,
											"end": 9294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9270,
											"end": 9294,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 9270,
											"end": 9294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9259,
											"end": 9294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9300,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9343,
											"end": 9350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9376,
											"end": 9381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9372,
											"end": 9426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9432,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9504,
											"end": 9509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9438,
											"end": 9515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9600,
											"end": 9609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9664,
											"end": 9669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9633,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9521,
											"end": 9676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9796,
											"end": 9801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9765,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9752,
											"end": 9802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9897,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9915,
											"end": 9920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 9897,
											"end": 9921,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9897,
											"end": 9921,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9897,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9814,
											"end": 9927,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 10013,
											"end": 10018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9995,
											"end": 10019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9995,
											"end": 10019,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9995,
											"end": 10019,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9995,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10041,
											"end": 10107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10034,
											"end": 10039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10108,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 10028,
											"end": 10131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10111,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10131,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 10028,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10158,
											"end": 10159,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10151,
											"end": 10156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10160,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9933,
											"end": 10166,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10172,
											"end": 10352,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10172,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10220,
											"end": 10297,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10217,
											"end": 10218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10317,
											"end": 10321,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10314,
											"end": 10315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10307,
											"end": 10322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10345,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10338,
											"end": 10339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10358,
											"end": 10538,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10358,
											"end": 10538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10406,
											"end": 10483,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 10507,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 10500,
											"end": 10501,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10493,
											"end": 10508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10531,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10524,
											"end": 10525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10517,
											"end": 10532,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10667,
											"end": 10784,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 10667,
											"end": 10784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10776,
											"end": 10777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 11015,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10790,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10930,
											"end": 10964,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10926,
											"end": 10927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 10928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10907,
											"end": 10965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11007,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10986,
											"end": 10992,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10982,
											"end": 10997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 11015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 11015,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11021,
											"end": 11182,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11021,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11174,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F74206F6E206C697374000000000000000000000000000000000000000000"
										},
										{
											"begin": 11157,
											"end": 11158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11155,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11188,
											"end": 11408,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 11188,
											"end": 11408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11328,
											"end": 11362,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11397,
											"end": 11400,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11392,
											"end": 11394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11384,
											"end": 11390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11408,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11414,
											"end": 11596,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 11414,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11588,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11542,
											"end": 11548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11538,
											"end": 11552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11531,
											"end": 11589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11414,
											"end": 11596,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11602,
											"end": 11771,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11602,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11763,
											"name": "PUSH",
											"source": 1,
											"value": "4661696C656420746F2073656E64206B6C617900000000000000000000000000"
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11730,
											"end": 11736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11602,
											"end": 11771,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11777,
											"end": 11891,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11777,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11777,
											"end": 11891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11897,
											"end": 12019,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11897,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11988,
											"end": 11993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 11970,
											"end": 11994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11970,
											"end": 11994,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11970,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11963,
											"end": 11968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11960,
											"end": 11995,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12009,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12007,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11999,
											"end": 12011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11950,
											"end": 12013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 12019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 12019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12098,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 12116,
											"end": 12121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12098,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 12098,
											"end": 12122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12098,
											"end": 12122,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 12098,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12091,
											"end": 12096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12123,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 12078,
											"end": 12141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12127,
											"end": 12139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12078,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 12078,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_commodityPrices(uint256)": "432be4d0",
							"nft()": "47ccca02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBuyToken(uint256,uint256)": "3e56e6c3",
							"safeListToken(uint256,uint256)": "d3f50573",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uriTemplateId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uriTemplateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_commodityPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721MintableAutoId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"safeBuyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"safeListToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":\"VendingMachine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 907,
								"contract": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721MintableAutoId)899"
							},
							{
								"astId": 909,
								"contract": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "treasury",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 913,
								"contract": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "_commodityPrices",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721MintableAutoId)899": {
								"encoding": "inplace",
								"label": "contract IERC721MintableAutoId",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol": {
				"ast": {
					"absolutePath": "atta-movies/ERC721/klaytn/ERC721VendingMachineAutoIdForKlay.sol",
					"exportedSymbols": {
						"Address": [
							662
						],
						"Context": [
							287
						],
						"IERC20": [
							469
						],
						"IERC721MintableAutoId": [
							899
						],
						"Math": [
							266
						],
						"Ownable": [
							393
						],
						"SafeERC20": [
							876
						],
						"SafeMath": [
							195
						],
						"VendingMachine": [
							1082
						]
					},
					"id": 1083,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "159:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "186:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "SafeMath",
							"nameLocation": "771:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1093:114:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1112:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "1104:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1120:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1104:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1145:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1148:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1132:46:0"
											},
											{
												"expression": {
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1198:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1191:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "787:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1035:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1047:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1058:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1050:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:0"
									},
									"scope": 195,
									"src": "1026:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1557:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1579:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1582:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1575:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1568:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1215:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:0"
									},
									"scope": 195,
									"src": "1490:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2024:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "2043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "2048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2051:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2035:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2083:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "2075:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:17:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "2105:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1634:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1938:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1950:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1942:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1961:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1978:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1964:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:50:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:9:0"
									},
									"scope": 195,
									"src": "1929:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2447:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2683:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2679:47:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2691:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2706:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2746:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "2738:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2738:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2786:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2766:56:0"
											},
											{
												"expression": {
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2835:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2129:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2389:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2401:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2412:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2404:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:9:0"
									},
									"scope": 195,
									"src": "2380:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3394:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3422:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3412:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3405:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2859:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3336:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3359:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3384:9:0"
									},
									"scope": 195,
									"src": "3327:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4050:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "4069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4076:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "4061:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4108:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4100:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4112:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "4116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4112:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4100:17:0"
											},
											{
												"expression": {
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4224:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4217:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3467:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3964:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3987:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3979:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4004:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3990:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:50:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4041:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4040:9:0"
									},
									"scope": 195,
									"src": "3955:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4765:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4787:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4793:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4783:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4776:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4241:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4707:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:9:0"
									},
									"scope": 195,
									"src": "4698:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5408:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5427:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5419:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5466:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5459:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4836:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5322:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5334:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5326:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5345:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5337:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5362:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5348:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:50:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:9:0"
									},
									"scope": 195,
									"src": "5313:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "763:4719:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "5536:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Math",
							"nameLocation": "5621:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "5767:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5798:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5785:14:0",
													"trueExpression": {
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 212,
												"nodeType": "Return",
												"src": "5778:21:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5633:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5709:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5712:22:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:0"
									},
									"scope": 266,
									"src": "5700:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "5950:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5972:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "5980:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5968:13:0",
													"trueExpression": {
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5976:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 230,
												"nodeType": "Return",
												"src": "5961:20:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5815:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:9:0"
									},
									"scope": 266,
									"src": "5883:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "6179:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 242,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "6253:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6257:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6253:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 245,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 246,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "6263:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6263:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 249,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6252:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 251,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 235,
																					"src": "6274:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6278:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6274:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 254,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 237,
																					"src": "6282:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6286:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6282:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6274:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6291:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "6273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6272:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6252:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 263,
												"nodeType": "Return",
												"src": "6245:48:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "5997:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "6117:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6133:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6144:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:9:0"
									},
									"scope": 266,
									"src": "6108:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "5613:691:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "Context",
							"nameLocation": "6888:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "6965:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6983:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6983:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 270,
												"id": 273,
												"nodeType": "Return",
												"src": "6976:17:0"
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "6912:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6955:9:0"
									},
									"scope": 287,
									"src": "6903:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7074:168:0",
										"statements": [
											{
												"expression": {
													"id": 280,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "7085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$287",
														"typeString": "contract Context"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "7085:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7226:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7226:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 279,
												"id": 284,
												"nodeType": "Return",
												"src": "7219:15:0"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7018:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7026:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7060:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7059:14:0"
									},
									"scope": 287,
									"src": "7009:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "6870:375:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 287,
										"src": "7840:7:0"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "7840:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "7304:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393,
								287
							],
							"name": "Ownable",
							"nameLocation": "7829:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 292,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "7871:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "7855:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7855:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 298,
									"name": "OwnershipTransferred",
									"nameLocation": "7892:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "7929:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7913:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "7960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7944:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:57:0"
									},
									"src": "7886:84:0"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "8092:139:0",
										"statements": [
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "8111:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "8103:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 302,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8103:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 304,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "8123:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8103:32:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "8146:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "8155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8146:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "8146:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8201:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8201:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8213:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8180:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8180:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "8175:48:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "7978:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 320,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8089:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8092:0:0"
									},
									"scope": 393,
									"src": "8077:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "8359:32:0",
										"statements": [
											{
												"expression": {
													"id": 326,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "8377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "8370:13:0"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "8239:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8321:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8326:2:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:0"
									},
									"scope": 393,
									"src": "8312:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "8505:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 333,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "8524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 334,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "8534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8534:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8524:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8548:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8516:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "8516:67:0"
											},
											{
												"id": 340,
												"nodeType": "PlaceholderStatement",
												"src": "8594:1:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8399:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 342,
									"name": "onlyOwner",
									"nameLocation": "8493:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8502:2:0"
									},
									"src": "8484:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9008:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 349,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9053:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9053:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9024:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9024:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "9019:45:0"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9075:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9084:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9084:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9075:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "9075:19:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "8611:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 345,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "8998:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8998:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "8963:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8980:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9008:0:0"
									},
									"scope": 393,
									"src": "8954:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "9327:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "9346:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9366:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9358:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9358:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9358:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9346:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9370:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9338:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "9338:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9448:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "9456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9427:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9427:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "9422:43:0"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9476:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 388,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "9485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9476:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "9476:17:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9110:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 369,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "9317:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9317:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9266:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9292:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "9284:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9283:18:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9327:0:0"
									},
									"scope": 393,
									"src": "9257:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1083,
							"src": "7811:1693:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "9567:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC20",
							"nameLocation": "9651:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "9665:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9748:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9759:2:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "9785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9784:9:0"
									},
									"scope": 469,
									"src": "9739:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "9802:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "9891:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9900:17:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9940:9:0"
									},
									"scope": 469,
									"src": "9882:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "9958:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "10188:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10205:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10224:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10216:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10196:35:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10250:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10249:6:0"
									},
									"scope": 469,
									"src": "10179:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "10264:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10549:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10567:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10558:32:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10613:9:0"
									},
									"scope": 469,
									"src": "10540:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "10631:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11301:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11317:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11308:33:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11359:6:0"
									},
									"scope": 469,
									"src": "11292:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "11374:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11693:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11714:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11730:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11722:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11705:51:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11775:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11774:6:0"
									},
									"scope": 469,
									"src": "11684:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "11789:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 459,
									"name": "Transfer",
									"nameLocation": "11964:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11989:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11973:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12011:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11995:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12023:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:57:0"
									},
									"src": "11958:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "12038:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 468,
									"name": "Approval",
									"nameLocation": "12201:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12210:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12233:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12266:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:63:0"
									},
									"src": "12195:78:0"
								}
							],
							"scope": 1083,
							"src": "9641:2635:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "12282:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "Address",
							"nameLocation": "12361:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "13029:356:0",
										"statements": [
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "13239:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "13231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"nodeType": "VariableDeclarationStatement",
												"src": "13231:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13320:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13322:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13342:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "13330:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13330:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13322:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "13342:7:0",
														"valueSize": 1
													},
													{
														"declaration": 479,
														"isOffset": false,
														"isSlot": false,
														"src": "13322:4:0",
														"valueSize": 1
													}
												],
												"id": 481,
												"nodeType": "InlineAssembly",
												"src": "13311:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "13369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13369:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 477,
												"id": 485,
												"nodeType": "Return",
												"src": "13362:15:0"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "12376:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "12972:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12991:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "12983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12982:17:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "13023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:6:0"
									},
									"scope": 662,
									"src": "12963:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "14391:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 498,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14418:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 496,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14410:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14410:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14410:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14410:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14443:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14402:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "14402:73:0"
											},
											{
												"assignments": [
													507,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14572:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "14567:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 506,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 514,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14617:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 508,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "14585:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14585:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14608:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14585:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14585:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14566:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "14639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14648:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14631:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "14631:78:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "13393:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "14329:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14355:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14339:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14339:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14338:43:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14391:0:0"
									},
									"scope": 662,
									"src": "14320:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "15567:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "15596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "15604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15610:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 531,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															538,
															558
														],
														"referencedDeclaration": 558,
														"src": "15583:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15583:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 530,
												"id": 536,
												"nodeType": "Return",
												"src": "15576:67:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "14725:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "15487:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15516:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15516:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15499:35:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15553:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15552:14:0"
									},
									"scope": 662,
									"src": "15478:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "15998:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "16039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "16047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "16056:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 550,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "16016:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16016:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 549,
												"id": 556,
												"nodeType": "Return",
												"src": "16009:60:0"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "15659:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "15890:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15911:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15903:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15932:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15919:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15919:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15952:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15938:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15902:63:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15984:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15984:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15983:14:0"
									},
									"scope": 662,
									"src": "15881:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16565:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "16605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "16613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 573,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "16619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16626:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 570,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															611
														],
														"referencedDeclaration": 611,
														"src": "16583:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 576,
												"nodeType": "Return",
												"src": "16576:94:0"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "16085:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "16461:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16491:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16499:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16499:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16526:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16482:50:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16551:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16551:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16550:14:0"
									},
									"scope": 662,
									"src": "16452:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "17075:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 595,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "17102:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 593,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17094:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17094:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "17094:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "17119:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17094:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17126:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17086:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "17086:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "17208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "17216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 606,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "17222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "17229:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 603,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "17185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17185:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 609,
												"nodeType": "Return",
												"src": "17178:64:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "16686:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "16943:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16973:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16994:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16981:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17008:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17000:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17029:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17015:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16964:78:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17061:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17060:14:0"
									},
									"scope": 662,
									"src": "16934:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "17402:835:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 626,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "17432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 625,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "17421:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17421:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17441:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17413:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "17413:60:0"
											},
											{
												"assignments": [
													632,
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17552:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17547:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17547:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17574:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17561:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17561:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "17619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 635,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "17588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17588:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 637,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17608:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17588:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17588:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17546:78:0"
											},
											{
												"condition": {
													"id": 642,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "17639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "17698:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 646,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "17784:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17784:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17784:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 656,
																"nodeType": "Block",
																"src": "18164:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 653,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "18190:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 652,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18183:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18183:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "18183:20:0"
																	}
																]
															},
															"id": 657,
															"nodeType": "IfStatement",
															"src": "17780:439:0",
															"trueBody": {
																"id": 651,
																"nodeType": "Block",
																"src": "17807:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17995:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18018:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18047:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18041:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18041:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18022:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18091:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18095:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18087:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18087:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18108:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18080:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18080:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18080:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18047:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18095:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 650,
																		"nodeType": "InlineAssembly",
																		"src": "17986:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "17635:595:0",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "17648:44:0",
													"statements": [
														{
															"expression": {
																"id": 643,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "17670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 623,
															"id": 644,
															"nodeType": "Return",
															"src": "17663:17:0"
														}
													]
												}
											}
										]
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "17267:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17298:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "17333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17357:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17343:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17289:81:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17387:14:0"
									},
									"scope": 662,
									"src": "17258:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1083,
							"src": "12353:5887:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "18308:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "SafeERC20",
							"nameLocation": "18783:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 666,
									"libraryName": {
										"id": 664,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "18806:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18800:27:0",
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18819:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 669,
									"libraryName": {
										"id": 667,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "18839:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18833:26:0",
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18851:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "18939:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "18970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 683,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "19000:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 418,
																		"src": "19000:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19000:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 686,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "19025:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 687,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "19029:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 681,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18977:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18977:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18977:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 679,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "18950:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18950:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "18950:86:0"
											}
										]
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "18876:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18896:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18889:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "18889:6:0"
													},
													"referencedDeclaration": 469,
													"src": "18889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18911:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18903:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18923:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18888:41:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18939:0:0"
									},
									"scope": 876,
									"src": "18867:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "19142:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "19173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "19203:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 450,
																		"src": "19203:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19203:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 711,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "19232:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "19238:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "19242:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19180:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19180:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19180:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "19153:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19153:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "19153:96:0"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19061:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19085:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19078:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19077:55:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19142:0:0"
									},
									"scope": 876,
									"src": "19052:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "19602:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "19896:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19905:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19896:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19895:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 738,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "19936:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 737,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19928:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 736,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19928:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 739,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19928:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 740,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "19943:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "19912:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$469",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "19912:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19912:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19955:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19912:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19911:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19895:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19972:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19887:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "19887:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "20070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 753,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "20100:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20100:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20100:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 756,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "20124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "20133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20077:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20077:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20050:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20050:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "20050:90:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "19265:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "19535:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19547:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19547:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19569:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19586:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19578:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19546:46:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:0:0"
									},
									"scope": 876,
									"src": "19526:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "20242:200:0",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "20261:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "20253:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "20320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 778,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20300:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20292:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 776,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20292:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20292:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 780,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 774,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "20276:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20276:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20276:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "20276:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20276:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20253:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "20357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 790,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "20387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20387:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20387:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 793,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 794,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "20420:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 788,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20364:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 786,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20337:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "20337:97:0"
											}
										]
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "20165:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20194:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20187:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20209:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20186:46:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20242:0:0"
									},
									"scope": 876,
									"src": "20156:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "20536:245:0",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "20555:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "20547:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "20614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20621:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 815,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20594:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 813,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20586:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20586:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 817,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20601:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 811,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "20570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20570:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20570:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "20570:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20570:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20547:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "20696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "20726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20726:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20726:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 831,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "20759:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 826,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20703:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20703:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20703:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20676:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20676:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "20676:97:0"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "20459:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20488:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20481:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20480:46:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20536:0:0"
									},
									"scope": 876,
									"src": "20450:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "21242:691:0",
										"statements": [
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21609:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "21596:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "21650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21656:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 850,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "21630:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21622:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21622:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "21622:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21622:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21596:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 857,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "21706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21706:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21706:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "21702:224:0",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "21729:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 864,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "21848:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21861:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 865,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "21861:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 867,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21860:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 862,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "21837:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "21837:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21837:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21869:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 861,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21829:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "21829:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "20789:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "21181:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21208:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21201:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 839,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "21201:6:0"
													},
													"referencedDeclaration": 469,
													"src": "21201:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21215:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21200:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21242:0:0"
									},
									"scope": 876,
									"src": "21172:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1083,
							"src": "18775:3161:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "IERC721MintableAutoId",
							"nameLocation": "21950:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1c178087",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_currentNextId",
									"nameLocation": "21988:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22002:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "22028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22027:9:0"
									},
									"scope": 899,
									"src": "21979:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "22118:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "43253955",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchMint",
									"nameLocation": "22201:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "22234:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "22215:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 883,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22215:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 884,
													"nodeType": "ArrayTypeName",
													"src": "22215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "22247:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "22239:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22214:48:0"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22271:0:0"
									},
									"scope": 899,
									"src": "22192:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "22280:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "a1448194",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "22369:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "22386:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22378:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "22399:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22391:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22377:37:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22423:0:0"
									},
									"scope": 899,
									"src": "22360:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1083,
							"src": "21940:487:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 900,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "22460:7:0"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "22460:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1082,
							"linearizedBaseContracts": [
								1082,
								393,
								287
							],
							"name": "VendingMachine",
							"nameLocation": "22442:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 904,
									"libraryName": {
										"id": 902,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "22481:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22475:27:0",
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22494:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 907,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "22540:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22511:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
										"typeString": "contract IERC721MintableAutoId"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IERC721MintableAutoId",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 899,
											"src": "22511:21:0"
										},
										"referencedDeclaration": 899,
										"src": "22511:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
											"typeString": "contract IERC721MintableAutoId"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 909,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "22567:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22552:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22552:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "432be4d0",
									"id": 913,
									"mutability": "mutable",
									"name": "_commodityPrices",
									"nameLocation": "22623:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22588:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 912,
										"keyType": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "22588:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 911,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22607:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 919,
									"name": "PriceUpdate",
									"nameLocation": "22654:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "uriTemplateId",
												"nameLocation": "22682:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "22666:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "22705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "22697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22665:46:0"
									},
									"src": "22648:64:0"
								},
								{
									"anonymous": false,
									"id": 929,
									"name": "Buy",
									"nameLocation": "22724:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "22744:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22728:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "uriTemplateId",
												"nameLocation": "22767:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22751:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22798:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22782:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "22815:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22727:94:0"
									},
									"src": "22718:104:0"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "22907:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 937,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "22926:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22949:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22941:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 938,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22941:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22941:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22926:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 943,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "22955:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 946,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "22978:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VendingMachine_$1082",
																				"typeString": "contract VendingMachine"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VendingMachine_$1082",
																				"typeString": "contract VendingMachine"
																			}
																		],
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22970:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 944,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22970:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22970:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22955:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22926:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22918:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "22918:66:0"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "22995:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
															"typeString": "contract IERC721MintableAutoId"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 954,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "23023:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 953,
															"name": "IERC721MintableAutoId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "23001:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721MintableAutoId_$899_$",
																"typeString": "type(contract IERC721MintableAutoId)"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23001:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
															"typeString": "contract IERC721MintableAutoId"
														}
													},
													"src": "22995:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
														"typeString": "contract IERC721MintableAutoId"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "22995:40:0"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 958,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "23046:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 959,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "23057:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23046:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "23046:20:0"
											}
										]
									},
									"id": 963,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "22860:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "22852:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "22890:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "22882:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22841:65:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22907:0:0"
									},
									"scope": 1082,
									"src": "22830:244:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "23155:112:0",
										"statements": [
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 970,
															"name": "_commodityPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "23166:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 972,
														"indexExpression": {
															"id": 971,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "23183:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23166:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "23201:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23166:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "23166:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 977,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "23236:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 978,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "23252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "PriceUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "23223:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23223:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "EmitStatement",
												"src": "23218:41:0"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_listToken",
									"nameLocation": "23095:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "23114:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23106:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "23138:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23130:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23105:40:0"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23155:0:0"
									},
									"scope": 1082,
									"src": "23086:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "23359:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "23381:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 993,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "23397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 991,
														"name": "_listToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "23370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23370:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "23370:34:0"
											}
										]
									},
									"functionSelector": "d3f50573",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 988,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "23349:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23349:9:0"
										}
									],
									"name": "safeListToken",
									"nameLocation": "23288:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "23310:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "23302:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "23334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "23326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23301:40:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23359:0:0"
									},
									"scope": 1082,
									"src": "23279:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "23492:190:0",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "23511:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1026,
														"src": "23503:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1006,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "23521:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
																"typeString": "contract IERC721MintableAutoId"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_currentNextId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 881,
														"src": "23521:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23521:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23503:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "23565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "23573:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1010,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "23552:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
																"typeString": "contract IERC721MintableAutoId"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "23552:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23552:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "23552:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1018,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "23608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "23616:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "23632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1021,
																"name": "_commodityPrices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "23641:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1023,
															"indexExpression": {
																"id": 1022,
																"name": "_uriTemplateId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "23658:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23641:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "23604:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23604:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "23599:75:0"
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buyToken",
									"nameLocation": "23433:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "23451:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "23443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "23467:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "23459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23442:40:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23492:0:0"
									},
									"scope": 1082,
									"src": "23424:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "23773:348:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1035,
																	"name": "_commodityPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "23792:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1037,
																"indexExpression": {
																	"id": 1036,
																	"name": "_uriTemplateId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "23809:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23792:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23825:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23792:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f6e206c697374",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23828:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															},
															"value": "Not on list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23784:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "23784:58:0"
											},
											{
												"body": {
													"id": 1059,
													"nodeType": "Block",
													"src": "23895:66:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1054,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "23920:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23920:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1056,
																		"name": "_uriTemplateId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "23934:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1053,
																	"name": "_buyToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "23910:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23910:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "23910:39:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "23875:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "23879:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23875:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1060,
												"initializationExpression": {
													"assignments": [
														1044
													],
													"declarations": [
														{
															"constant": false,
															"id": 1044,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "23868:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1060,
															"src": "23860:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1043,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1046,
													"initialValue": {
														"hexValue": "30",
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23872:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23860:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "23890:3:0",
														"subExpression": {
															"id": 1050,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "23892:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1052,
													"nodeType": "ExpressionStatement",
													"src": "23890:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23855:106:0"
											},
											{
												"assignments": [
													1062,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "23977:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1080,
														"src": "23972:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1061,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1074,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1063,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "23990:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "23990:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [
																	{
																		"id": 1069,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "24048:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1065,
																			"name": "_commodityPrices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "24011:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 1067,
																		"indexExpression": {
																			"id": 1066,
																			"name": "_uriTemplateId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "24028:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24011:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "24011:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24011:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "23990:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23990:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23971:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "24082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64206b6c6179",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24091:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
																"typeString": "literal_string \"Failed to send klay\""
															},
															"value": "Failed to send klay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
																"typeString": "literal_string \"Failed to send klay\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24074:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "24074:39:0"
											}
										]
									},
									"functionSelector": "3e56e6c3",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBuyToken",
									"nameLocation": "23703:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nameLocation": "23724:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "23716:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "23748:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "23740:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23715:43:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23773:0:0"
									},
									"scope": 1082,
									"src": "23694:427:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1083,
							"src": "22433:1695:0",
							"usedErrors": []
						}
					],
					"src": "159:23969:0"
				},
				"id": 0
			}
		}
	}
}