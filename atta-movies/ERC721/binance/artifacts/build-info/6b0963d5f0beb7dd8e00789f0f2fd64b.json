{
	"id": "6b0963d5f0beb7dd8e00789f0f2fd64b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2021-02-11\r\n*/\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/Math.sol\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC721MintableAutoId {\r\n    function _currentNextId() external view returns (uint256);      // The NFT id that you want to start with. Auto increment here.\r\n    \r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function safeBatchMint(address[] calldata _to, uint256 _uriTemplateId) external;\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function safeMint(address _to, uint256 _uriTemplateId) external;\r\n}\r\n\r\n\r\ncontract VendingMachine is Ownable {\r\n    using SafeMath for uint256;\r\n \r\n    IERC721MintableAutoId public nft;\r\n\r\n    address public treasury;\r\n    \r\n    mapping(uint256 => uint256) public _commodityPrices;\r\n\r\n    event PriceUpdate(uint256 indexed uriTemplateId, uint256 price);\r\n    event Buy(address indexed buyer, uint256 indexed uriTemplateId, uint256 indexed tokenId, uint256 price);\r\n\r\n    constructor(\r\n        address _nftAddress,\r\n        address _treasury\r\n    ) {\r\n        require(_nftAddress != address(0) && _nftAddress != address(this));\r\n        nft = IERC721MintableAutoId(_nftAddress);\r\n        treasury = _treasury;\r\n    }\r\n    \r\n    function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r\n        _commodityPrices[_uriTemplateId] = _price;\r\n        emit PriceUpdate( _uriTemplateId, _price);\r\n    }\r\n    \r\n    function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r\n        _listToken(_uriTemplateId, _price);\r\n    }\r\n    \r\n    function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r\n        uint256 tokenId = nft._currentNextId();\r\n        nft.safeMint(_buyer, _uriTemplateId);\r\n        emit Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]);\r\n    }\r\n    \r\n    function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r\n        require(_commodityPrices[_uriTemplateId]>0, \"Not on list\");\r\n\r\n        for (uint256 i = 0; i < _quantity; ++i) {\r\n            _buyToken(_msgSender(), _uriTemplateId);\r\n        }\r\n        (bool success, ) = treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\");\r\n        require(success, \"Failed to send klay\");\r\n    }    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":12353:18240  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":12353:18240  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a3612b0401cf4c4b58f508710ad3ad9d7d7cec47357575e52fa16fb881a56ecd64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3612b0401cf4c4b58f508710ad3ad9d7d7cec47357575e52fa16fb881a56ecd64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH2 0x2B04 ADD 0xCF 0x4C 0x4B PC CREATE2 ADDMOD PUSH18 0xAD3AD9D7D7CEC47357575E52FA16FB881A5 PUSH15 0xCD64736F6C63430008000033000000 ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3612b0401cf4c4b58f508710ad3ad9d7d7cec47357575e52fa16fb881a56ecd64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH2 0x2B04 ADD 0xCF 0x4C 0x4B PC CREATE2 ADDMOD PUSH18 0xAD3AD9D7D7CEC47357575E52FA16FB881A5 PUSH15 0xCD64736F6C63430008000033000000 ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3612b0401cf4c4b58f508710ad3ad9d7d7cec47357575e52fa16fb881a56ecd64736f6c63430008000033",
									".code": [
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721MintableAutoId": {
					"abi": [
						{
							"inputs": [],
							"name": "_currentNextId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_to",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								}
							],
							"name": "safeBatchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"safeBatchMint(address[],uint256)": {
								"details": "Returns the amount of tokens in existence."
							},
							"safeMint(address,uint256)": {
								"details": "Returns the amount of tokens owned by `account`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_currentNextId()": "1c178087",
							"safeBatchMint(address[],uint256)": "43253955",
							"safeMint(address,uint256)": "a1448194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_currentNextId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_to\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"}],\"name\":\"safeBatchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"safeBatchMint(address[],uint256)\":{\"details\":\"Returns the amount of tokens in existence.\"},\"safeMint(address,uint256)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"IERC721MintableAutoId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":5613:6304  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":5613:6304  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220efabe06a8d8256a84768b8f5cb8c2ab726b5256832a84186be9dd9301f27acc664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220efabe06a8d8256a84768b8f5cb8c2ab726b5256832a84186be9dd9301f27acc664736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xAB 0xE0 PUSH11 0x8D8256A84768B8F5CB8C2A 0xB7 0x26 0xB5 0x25 PUSH9 0x32A84186BE9DD9301F 0x27 0xAC 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220efabe06a8d8256a84768b8f5cb8c2ab726b5256832a84186be9dd9301f27acc664736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xAB 0xE0 PUSH11 0x8D8256A84768B8F5CB8C2A 0xB7 0x26 0xB5 0x25 PUSH9 0x32A84186BE9DD9301F 0x27 0xAC 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220efabe06a8d8256a84768b8f5cb8c2ab726b5256832a84186be9dd9301f27acc664736f6c63430008000033",
									".code": [
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":18775:21936  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":18775:21936  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ea53ca9f61294c42100203bc25deafbec02cc05fc4d7dc992c54ee503c4a22b64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ea53ca9f61294c42100203bc25deafbec02cc05fc4d7dc992c54ee503c4a22b64736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA53CA9F61294C42100203BC25DEAFBEC02CC05FC4D7DC992C54EE503C4A22B PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ea53ca9f61294c42100203bc25deafbec02cc05fc4d7dc992c54ee503c4a22b64736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xA53CA9F61294C42100203BC25DEAFBEC02CC05FC4D7DC992C54EE503C4A22B PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ea53ca9f61294c42100203bc25deafbec02cc05fc4d7dc992c54ee503c4a22b64736f6c63430008000033",
									".code": [
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":763:5482  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":763:5482  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dec907077e61e85f92ccace1483debb3ec1d9b7be475bbed6b4c5242a6ae19e864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dec907077e61e85f92ccace1483debb3ec1d9b7be475bbed6b4c5242a6ae19e864736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xC9 SMOD SMOD PUSH31 0x61E85F92CCACE1483DEBB3EC1D9B7BE475BBED6B4C5242A6AE19E864736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dec907077e61e85f92ccace1483debb3ec1d9b7be475bbed6b4c5242a6ae19e864736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE 0xC9 SMOD SMOD PUSH31 0x61E85F92CCACE1483DEBB3EC1D9B7BE475BBED6B4C5242A6AE19E864736F6C PUSH4 0x43000800 STOP CALLER ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dec907077e61e85f92ccace1483debb3ec1d9b7be475bbed6b4c5242a6ae19e864736f6c63430008000033",
									".code": [
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VendingMachine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "uriTemplateId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "uriTemplateId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PriceUpdate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_commodityPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721MintableAutoId",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "safeBuyToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_uriTemplateId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "safeListToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22830:23074  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8103:8120  address msgSender */\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8123:8135  _msgSender() */\n  tag_7\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8123:8133  _msgSender */\n  shl(0x20, tag_8)\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8123:8135  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8103:8135  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8155:8164  msgSender */\n  dup1\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8146:8152  _owner */\n  0x00\n  dup1\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8146:8164  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8213:8222  msgSender */\n  dup1\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8209:8210  0 */\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8077:8231  constructor () {\r... */\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22949:22950  0 */\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22926:22951  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22926:22937  _nftAddress */\n  dup3\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22926:22951  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22926:22983  _nftAddress != address(0) && _nftAddress != address(this) */\n  dup1\n  iszero\n  tag_10\n  jumpi\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22978:22982  this */\n  address\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22955:22983  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22955:22966  _nftAddress */\n  dup3\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22955:22983  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22926:22983  _nftAddress != address(0) && _nftAddress != address(this) */\ntag_10:\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22918:22984  require(_nftAddress != address(0) && _nftAddress != address(this)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23023:23034  _nftAddress */\n  dup2\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22995:22998  nft */\n  0x01\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22995:23035  nft = IERC721MintableAutoId(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23057:23066  _treasury */\n  dup1\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23046:23054  treasury */\n  0x02\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23046:23066  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22830:23074  constructor(\r... */\n  pop\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n  jump(tag_12)\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\ntag_8:\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6956:6963  address */\n  0x00\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6983:6993  msg.sender */\n  caller\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6976:6993  return msg.sender */\n  swap1\n  pop\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_15:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_17\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_18\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:596   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:262   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":308:309   */\n  0x00\n    /* \"#utility.yul\":305:306   */\n  dup1\n    /* \"#utility.yul\":298:310   */\n  revert\n    /* \"#utility.yul\":260:262   */\ntag_20:\n    /* \"#utility.yul\":351:352   */\n  0x00\n    /* \"#utility.yul\":376:440   */\n  tag_21\n    /* \"#utility.yul\":432:439   */\n  dup6\n    /* \"#utility.yul\":423:429   */\n  dup3\n    /* \"#utility.yul\":412:421   */\n  dup7\n    /* \"#utility.yul\":408:430   */\n  add\n    /* \"#utility.yul\":376:440   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":366:440   */\n  swap3\n  pop\n    /* \"#utility.yul\":322:450   */\n  pop\n    /* \"#utility.yul\":489:491   */\n  0x20\n    /* \"#utility.yul\":515:579   */\n  tag_22\n    /* \"#utility.yul\":571:578   */\n  dup6\n    /* \"#utility.yul\":562:568   */\n  dup3\n    /* \"#utility.yul\":551:560   */\n  dup7\n    /* \"#utility.yul\":547:569   */\n  add\n    /* \"#utility.yul\":515:579   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":505:579   */\n  swap2\n  pop\n    /* \"#utility.yul\":460:589   */\n  pop\n    /* \"#utility.yul\":250:596   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":602:698   */\ntag_23:\n  0x00\n    /* \"#utility.yul\":668:692   */\n  tag_25\n    /* \"#utility.yul\":686:691   */\n  dup3\n    /* \"#utility.yul\":668:692   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":657:692   */\n  swap1\n  pop\n    /* \"#utility.yul\":647:698   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":704:830   */\ntag_26:\n  0x00\n    /* \"#utility.yul\":781:823   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":774:779   */\n  dup3\n    /* \"#utility.yul\":770:824   */\n  and\n    /* \"#utility.yul\":759:824   */\n  swap1\n  pop\n    /* \"#utility.yul\":749:830   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":836:958   */\ntag_18:\n    /* \"#utility.yul\":909:933   */\n  tag_29\n    /* \"#utility.yul\":927:932   */\n  dup2\n    /* \"#utility.yul\":909:933   */\n  tag_23\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":902:907   */\n  dup2\n    /* \"#utility.yul\":899:934   */\n  eq\n    /* \"#utility.yul\":889:891   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":945:946   */\n  dup1\n    /* \"#utility.yul\":938:950   */\n  revert\n    /* \"#utility.yul\":889:891   */\ntag_30:\n    /* \"#utility.yul\":879:958   */\n  pop\n  jump\t// out\n    /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22433:24128  contract VendingMachine is Ownable {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd3f50573\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x3e56e6c3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x432be4d0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n    tag_2:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22588:22639  mapping(uint256 => uint256) public _commodityPrices */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22511:22543  IERC721MintableAutoId public nft */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22552:22575  address public treasury */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n    tag_14:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23825:23826  0 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23792:23808  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23792:23824  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23809:23823  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23792:23824  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23792:23826  _commodityPrices[_uriTemplateId]>0 */\n      gt\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23784:23842  require(_commodityPrices[_uriTemplateId]>0, \"Not on list\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23860:23869  uint256 i */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n    tag_52:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23879:23888  _quantity */\n      dup2\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23875:23876  i */\n      dup2\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23875:23888  i < _quantity */\n      lt\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n      iszero\n      tag_53\n      jumpi\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23910:23949  _buyToken(_msgSender(), _uriTemplateId) */\n      tag_55\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23920:23932  _msgSender() */\n      tag_56\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23920:23930  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23920:23932  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23934:23948  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23910:23919  _buyToken */\n      tag_58\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23910:23949  _buyToken(_msgSender(), _uriTemplateId) */\n      jump\t// in\n    tag_55:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23890:23893  ++i */\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23855:23961  for (uint256 i = 0; i < _quantity; ++i) {\r... */\n      jump(tag_52)\n    tag_53:\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23972:23984  bool success */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23990:23998  treasury */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23990:24003  treasury.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24058  _commodityPrices[_uriTemplateId].mul(_quantity) */\n      tag_61\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24048:24057  _quantity */\n      dup4\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24027  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24043  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24028:24042  _uriTemplateId */\n      dup8\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24043  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24047  _commodityPrices[_uriTemplateId].mul */\n      tag_62\n      swap1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24011:24058  _commodityPrices[_uriTemplateId].mul(_quantity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23990:24063  treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\") */\n      mload(0x40)\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_67\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_66)\n    tag_67:\n      0x60\n      swap2\n      pop\n    tag_66:\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23971:24063  (bool success, ) = treasury.call{value: _commodityPrices[_uriTemplateId].mul(_quantity)}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24082:24089  success */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":24074:24113  require(success, \"Failed to send klay\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23694:24121  function safeBuyToken(uint256 _uriTemplateId, uint256 _quantity) public payable{\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22588:22639  mapping(uint256 => uint256) public _commodityPrices */\n    tag_19:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22511:22543  IERC721MintableAutoId public nft */\n    tag_24:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":22552:22575  address public treasury */\n    tag_29:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_34:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_72\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9061:9062  0 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9045:9051  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9092:9093  0 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9075:9081  _owner */\n      dup1\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9075:9094  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_37:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8350:8357  address */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8377:8383  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8370:8383  return _owner */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8312:8391  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n    tag_42:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_79\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_75\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23370:23404  _listToken(_uriTemplateId, _price) */\n      tag_83\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23381:23395  _uriTemplateId */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23397:23403  _price */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23370:23380  _listToken */\n      tag_84\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23370:23404  _listToken(_uriTemplateId, _price) */\n      jump\t// in\n    tag_83:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23279:23412  function safeListToken(uint256 _uriTemplateId, uint256 _price) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_47:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      tag_86\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8544  _msgSender */\n      tag_57\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_75\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9366:9367  0 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9346:9354  newOwner */\n      dup2\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9338:9411  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9456:9464  newOwner */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9448:9454  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9485:9493  newOwner */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9476:9482  _owner */\n      0x00\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9476:9493  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_57:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6956:6963  address */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6983:6993  msg.sender */\n      caller\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6976:6993  return msg.sender */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23424:23682  function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r... */\n    tag_58:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23503:23518  uint256 tokenId */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23521:23524  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23521:23539  nft._currentNextId */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1c178087\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23521:23541  nft._currentNextId() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23503:23541  uint256 tokenId = nft._currentNextId() */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23552:23555  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23552:23564  nft.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa1448194\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23565:23571  _buyer */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23573:23587  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23552:23588  nft.safeMint(_buyer, _uriTemplateId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23632:23639  tokenId */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23616:23630  _uriTemplateId */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23608:23614  _buyer */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23604:23674  Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23641:23657  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23641:23673  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23658:23672  _uriTemplateId */\n      dup8\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23641:23673  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23604:23674  Buy(_buyer, _uriTemplateId, tokenId, _commodityPrices[_uriTemplateId]) */\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23424:23682  function _buyToken(address _buyer, uint256 _uriTemplateId) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_62:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2438:2445  uint256 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2688:2689  0 */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2683:2684  a */\n      dup4\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2683:2689  a == 0 */\n      eq\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2679:2726  if (a == 0) {\r... */\n      iszero\n      tag_107\n      jumpi\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2713:2714  0 */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2706:2714  return 0 */\n      swap1\n      pop\n      jump(tag_106)\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2679:2726  if (a == 0) {\r... */\n    tag_107:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2738:2747  uint256 c */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2754:2755  b */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2750:2751  a */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2750:2755  a * b */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2738:2755  uint256 c = a * b */\n      swap1\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2783:2784  b */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2778:2779  a */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2774:2775  c */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2774:2779  c / a */\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2774:2784  c / a == b */\n      eq\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2766:2822  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2842:2843  c */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2835:2843  return c */\n      swap2\n      pop\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_106:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23086:23267  function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r... */\n    tag_84:\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23201:23207  _price */\n      dup1\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23166:23182  _commodityPrices */\n      0x03\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23166:23198  _commodityPrices[_uriTemplateId] */\n      0x00\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23183:23197  _uriTemplateId */\n      dup5\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23166:23198  _commodityPrices[_uriTemplateId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23166:23207  _commodityPrices[_uriTemplateId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23236:23250  _uriTemplateId */\n      dup2\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23223:23259  PriceUpdate( _uriTemplateId, _price) */\n      0x92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23252:23258  _price */\n      dup3\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23223:23259  PriceUpdate( _uriTemplateId, _price) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":23086:23267  function _listToken(uint256 _uriTemplateId, uint256 _price) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_118:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_120\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_122:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_124\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:440   */\n    tag_126:\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup2\n        /* \"#utility.yul\":379:392   */\n      mload\n        /* \"#utility.yul\":370:392   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:434   */\n      tag_128\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":401:434   */\n      tag_125\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":360:440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":446:708   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":554:556   */\n      0x20\n        /* \"#utility.yul\":542:551   */\n      dup3\n        /* \"#utility.yul\":533:540   */\n      dup5\n        /* \"#utility.yul\":529:552   */\n      sub\n        /* \"#utility.yul\":525:557   */\n      slt\n        /* \"#utility.yul\":522:524   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":522:524   */\n    tag_130:\n        /* \"#utility.yul\":613:614   */\n      0x00\n        /* \"#utility.yul\":638:691   */\n      tag_131\n        /* \"#utility.yul\":683:690   */\n      dup5\n        /* \"#utility.yul\":674:680   */\n      dup3\n        /* \"#utility.yul\":663:672   */\n      dup6\n        /* \"#utility.yul\":659:681   */\n      add\n        /* \"#utility.yul\":638:691   */\n      tag_118\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":628:691   */\n      swap2\n      pop\n        /* \"#utility.yul\":584:701   */\n      pop\n        /* \"#utility.yul\":512:708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:976   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":822:824   */\n      0x20\n        /* \"#utility.yul\":810:819   */\n      dup3\n        /* \"#utility.yul\":801:808   */\n      dup5\n        /* \"#utility.yul\":797:820   */\n      sub\n        /* \"#utility.yul\":793:825   */\n      slt\n        /* \"#utility.yul\":790:792   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":838:839   */\n      0x00\n        /* \"#utility.yul\":835:836   */\n      dup1\n        /* \"#utility.yul\":828:840   */\n      revert\n        /* \"#utility.yul\":790:792   */\n    tag_133:\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":906:959   */\n      tag_134\n        /* \"#utility.yul\":951:958   */\n      dup5\n        /* \"#utility.yul\":942:948   */\n      dup3\n        /* \"#utility.yul\":931:940   */\n      dup6\n        /* \"#utility.yul\":927:949   */\n      add\n        /* \"#utility.yul\":906:959   */\n      tag_122\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":896:959   */\n      swap2\n      pop\n        /* \"#utility.yul\":852:969   */\n      pop\n        /* \"#utility.yul\":780:976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":982:1266   */\n    tag_99:\n      0x00\n        /* \"#utility.yul\":1101:1103   */\n      0x20\n        /* \"#utility.yul\":1089:1098   */\n      dup3\n        /* \"#utility.yul\":1080:1087   */\n      dup5\n        /* \"#utility.yul\":1076:1099   */\n      sub\n        /* \"#utility.yul\":1072:1104   */\n      slt\n        /* \"#utility.yul\":1069:1071   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1117:1118   */\n      0x00\n        /* \"#utility.yul\":1114:1115   */\n      dup1\n        /* \"#utility.yul\":1107:1119   */\n      revert\n        /* \"#utility.yul\":1069:1071   */\n    tag_136:\n        /* \"#utility.yul\":1160:1161   */\n      0x00\n        /* \"#utility.yul\":1185:1249   */\n      tag_137\n        /* \"#utility.yul\":1241:1248   */\n      dup5\n        /* \"#utility.yul\":1232:1238   */\n      dup3\n        /* \"#utility.yul\":1221:1230   */\n      dup6\n        /* \"#utility.yul\":1217:1239   */\n      add\n        /* \"#utility.yul\":1185:1249   */\n      tag_126\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1175:1249   */\n      swap2\n      pop\n        /* \"#utility.yul\":1131:1259   */\n      pop\n        /* \"#utility.yul\":1059:1266   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1679   */\n    tag_13:\n      0x00\n      dup1\n        /* \"#utility.yul\":1397:1399   */\n      0x40\n        /* \"#utility.yul\":1385:1394   */\n      dup4\n        /* \"#utility.yul\":1376:1383   */\n      dup6\n        /* \"#utility.yul\":1372:1395   */\n      sub\n        /* \"#utility.yul\":1368:1400   */\n      slt\n        /* \"#utility.yul\":1365:1367   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":1413:1414   */\n      0x00\n        /* \"#utility.yul\":1410:1411   */\n      dup1\n        /* \"#utility.yul\":1403:1415   */\n      revert\n        /* \"#utility.yul\":1365:1367   */\n    tag_139:\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1481:1534   */\n      tag_140\n        /* \"#utility.yul\":1526:1533   */\n      dup6\n        /* \"#utility.yul\":1517:1523   */\n      dup3\n        /* \"#utility.yul\":1506:1515   */\n      dup7\n        /* \"#utility.yul\":1502:1524   */\n      add\n        /* \"#utility.yul\":1481:1534   */\n      tag_122\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1471:1534   */\n      swap3\n      pop\n        /* \"#utility.yul\":1427:1544   */\n      pop\n        /* \"#utility.yul\":1583:1585   */\n      0x20\n        /* \"#utility.yul\":1609:1662   */\n      tag_141\n        /* \"#utility.yul\":1654:1661   */\n      dup6\n        /* \"#utility.yul\":1645:1651   */\n      dup3\n        /* \"#utility.yul\":1634:1643   */\n      dup7\n        /* \"#utility.yul\":1630:1652   */\n      add\n        /* \"#utility.yul\":1609:1662   */\n      tag_122\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1599:1662   */\n      swap2\n      pop\n        /* \"#utility.yul\":1554:1672   */\n      pop\n        /* \"#utility.yul\":1355:1679   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1685:1803   */\n    tag_142:\n        /* \"#utility.yul\":1772:1796   */\n      tag_144\n        /* \"#utility.yul\":1790:1795   */\n      dup2\n        /* \"#utility.yul\":1772:1796   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1767:1770   */\n      dup3\n        /* \"#utility.yul\":1760:1797   */\n      mstore\n        /* \"#utility.yul\":1750:1803   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1809:1998   */\n    tag_146:\n        /* \"#utility.yul\":1925:1991   */\n      tag_148\n        /* \"#utility.yul\":1985:1990   */\n      dup2\n        /* \"#utility.yul\":1925:1991   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1920:1923   */\n      dup3\n        /* \"#utility.yul\":1913:1992   */\n      mstore\n        /* \"#utility.yul\":1903:1998   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2004:2374   */\n    tag_150:\n      0x00\n        /* \"#utility.yul\":2167:2234   */\n      tag_152\n        /* \"#utility.yul\":2231:2233   */\n      0x26\n        /* \"#utility.yul\":2226:2229   */\n      dup4\n        /* \"#utility.yul\":2167:2234   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2160:2234   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2298   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":2260:2261   */\n      0x00\n        /* \"#utility.yul\":2255:2258   */\n      dup4\n        /* \"#utility.yul\":2251:2262   */\n      add\n        /* \"#utility.yul\":2244:2299   */\n      mstore\n        /* \"#utility.yul\":2330:2338   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2320:2323   */\n      dup4\n        /* \"#utility.yul\":2316:2328   */\n      add\n        /* \"#utility.yul\":2309:2339   */\n      mstore\n        /* \"#utility.yul\":2365:2367   */\n      0x40\n        /* \"#utility.yul\":2360:2363   */\n      dup3\n        /* \"#utility.yul\":2356:2368   */\n      add\n        /* \"#utility.yul\":2349:2368   */\n      swap1\n      pop\n        /* \"#utility.yul\":2150:2374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2380:2689   */\n    tag_154:\n      0x00\n        /* \"#utility.yul\":2543:2610   */\n      tag_156\n        /* \"#utility.yul\":2607:2609   */\n      0x0b\n        /* \"#utility.yul\":2602:2605   */\n      dup4\n        /* \"#utility.yul\":2543:2610   */\n      tag_153\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":2536:2610   */\n      swap2\n      pop\n        /* \"#utility.yul\":2640:2653   */\n      0x4e6f74206f6e206c697374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2631:2634   */\n      dup4\n        /* \"#utility.yul\":2627:2638   */\n      add\n        /* \"#utility.yul\":2620:2654   */\n      mstore\n        /* \"#utility.yul\":2680:2682   */\n      0x20\n        /* \"#utility.yul\":2675:2678   */\n      dup3\n        /* \"#utility.yul\":2671:2683   */\n      add\n        /* \"#utility.yul\":2664:2683   */\n      swap1\n      pop\n        /* \"#utility.yul\":2526:2689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2695:3060   */\n    tag_157:\n      0x00\n        /* \"#utility.yul\":2858:2925   */\n      tag_159\n        /* \"#utility.yul\":2922:2924   */\n      0x21\n        /* \"#utility.yul\":2917:2920   */\n      dup4\n        /* \"#utility.yul\":2858:2925   */\n      tag_153\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2851:2925   */\n      swap2\n      pop\n        /* \"#utility.yul\":2955:2989   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2946:2949   */\n      dup4\n        /* \"#utility.yul\":2942:2953   */\n      add\n        /* \"#utility.yul\":2935:2990   */\n      mstore\n        /* \"#utility.yul\":3021:3024   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3016:3018   */\n      0x20\n        /* \"#utility.yul\":3011:3014   */\n      dup4\n        /* \"#utility.yul\":3007:3019   */\n      add\n        /* \"#utility.yul\":3000:3025   */\n      mstore\n        /* \"#utility.yul\":3051:3053   */\n      0x40\n        /* \"#utility.yul\":3046:3049   */\n      dup3\n        /* \"#utility.yul\":3042:3054   */\n      add\n        /* \"#utility.yul\":3035:3054   */\n      swap1\n      pop\n        /* \"#utility.yul\":2841:3060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3396   */\n    tag_160:\n      0x00\n        /* \"#utility.yul\":3229:3296   */\n      tag_162\n        /* \"#utility.yul\":3293:3295   */\n      0x20\n        /* \"#utility.yul\":3288:3291   */\n      dup4\n        /* \"#utility.yul\":3229:3296   */\n      tag_153\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3222:3296   */\n      swap2\n      pop\n        /* \"#utility.yul\":3326:3360   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3317:3320   */\n      dup4\n        /* \"#utility.yul\":3313:3324   */\n      add\n        /* \"#utility.yul\":3306:3361   */\n      mstore\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3382:3385   */\n      dup3\n        /* \"#utility.yul\":3378:3390   */\n      add\n        /* \"#utility.yul\":3371:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3212:3396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3719   */\n    tag_163:\n      0x00\n        /* \"#utility.yul\":3565:3632   */\n      tag_165\n        /* \"#utility.yul\":3629:3631   */\n      0x13\n        /* \"#utility.yul\":3624:3627   */\n      dup4\n        /* \"#utility.yul\":3565:3632   */\n      tag_153\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3558:3632   */\n      swap2\n      pop\n        /* \"#utility.yul\":3662:3683   */\n      0x4661696c656420746f2073656e64206b6c617900000000000000000000000000\n        /* \"#utility.yul\":3658:3659   */\n      0x00\n        /* \"#utility.yul\":3653:3656   */\n      dup4\n        /* \"#utility.yul\":3649:3660   */\n      add\n        /* \"#utility.yul\":3642:3684   */\n      mstore\n        /* \"#utility.yul\":3710:3712   */\n      0x20\n        /* \"#utility.yul\":3705:3708   */\n      dup3\n        /* \"#utility.yul\":3701:3713   */\n      add\n        /* \"#utility.yul\":3694:3713   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3725:4022   */\n    tag_166:\n      0x00\n        /* \"#utility.yul\":3905:3988   */\n      tag_168\n        /* \"#utility.yul\":3986:3987   */\n      0x00\n        /* \"#utility.yul\":3981:3984   */\n      dup4\n        /* \"#utility.yul\":3905:3988   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3898:3988   */\n      swap2\n      pop\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4009:4012   */\n      dup3\n        /* \"#utility.yul\":4005:4016   */\n      add\n        /* \"#utility.yul\":3998:4016   */\n      swap1\n      pop\n        /* \"#utility.yul\":3888:4022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4028:4146   */\n    tag_170:\n        /* \"#utility.yul\":4115:4139   */\n      tag_172\n        /* \"#utility.yul\":4133:4138   */\n      dup2\n        /* \"#utility.yul\":4115:4139   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4110:4113   */\n      dup3\n        /* \"#utility.yul\":4103:4140   */\n      mstore\n        /* \"#utility.yul\":4093:4146   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4531   */\n    tag_64:\n      0x00\n        /* \"#utility.yul\":4358:4505   */\n      tag_175\n        /* \"#utility.yul\":4501:4504   */\n      dup3\n        /* \"#utility.yul\":4358:4505   */\n      tag_166\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":4351:4505   */\n      swap2\n      pop\n        /* \"#utility.yul\":4522:4525   */\n      dup2\n        /* \"#utility.yul\":4515:4525   */\n      swap1\n      pop\n        /* \"#utility.yul\":4340:4531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4537:4759   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":4668:4670   */\n      0x20\n        /* \"#utility.yul\":4657:4666   */\n      dup3\n        /* \"#utility.yul\":4653:4671   */\n      add\n        /* \"#utility.yul\":4645:4671   */\n      swap1\n      pop\n        /* \"#utility.yul\":4681:4752   */\n      tag_177\n        /* \"#utility.yul\":4749:4750   */\n      0x00\n        /* \"#utility.yul\":4738:4747   */\n      dup4\n        /* \"#utility.yul\":4734:4751   */\n      add\n        /* \"#utility.yul\":4725:4731   */\n      dup5\n        /* \"#utility.yul\":4681:4752   */\n      tag_142\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":4635:4759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4765:5097   */\n    tag_101:\n      0x00\n        /* \"#utility.yul\":4924:4926   */\n      0x40\n        /* \"#utility.yul\":4913:4922   */\n      dup3\n        /* \"#utility.yul\":4909:4927   */\n      add\n        /* \"#utility.yul\":4901:4927   */\n      swap1\n      pop\n        /* \"#utility.yul\":4937:5008   */\n      tag_179\n        /* \"#utility.yul\":5005:5006   */\n      0x00\n        /* \"#utility.yul\":4994:5003   */\n      dup4\n        /* \"#utility.yul\":4990:5007   */\n      add\n        /* \"#utility.yul\":4981:4987   */\n      dup6\n        /* \"#utility.yul\":4937:5008   */\n      tag_142\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":5018:5090   */\n      tag_180\n        /* \"#utility.yul\":5086:5088   */\n      0x20\n        /* \"#utility.yul\":5075:5084   */\n      dup4\n        /* \"#utility.yul\":5071:5089   */\n      add\n        /* \"#utility.yul\":5062:5068   */\n      dup5\n        /* \"#utility.yul\":5018:5090   */\n      tag_170\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":4891:5097   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5103:5383   */\n    tag_26:\n      0x00\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup3\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5266   */\n      swap1\n      pop\n        /* \"#utility.yul\":5276:5376   */\n      tag_182\n        /* \"#utility.yul\":5373:5374   */\n      0x00\n        /* \"#utility.yul\":5362:5371   */\n      dup4\n        /* \"#utility.yul\":5358:5375   */\n      add\n        /* \"#utility.yul\":5349:5355   */\n      dup5\n        /* \"#utility.yul\":5276:5376   */\n      tag_146\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":5230:5383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5389:5808   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":5593:5595   */\n      0x20\n        /* \"#utility.yul\":5582:5591   */\n      dup3\n        /* \"#utility.yul\":5578:5596   */\n      add\n        /* \"#utility.yul\":5570:5596   */\n      swap1\n      pop\n        /* \"#utility.yul\":5642:5651   */\n      dup2\n        /* \"#utility.yul\":5636:5640   */\n      dup2\n        /* \"#utility.yul\":5632:5652   */\n      sub\n        /* \"#utility.yul\":5628:5629   */\n      0x00\n        /* \"#utility.yul\":5617:5626   */\n      dup4\n        /* \"#utility.yul\":5613:5630   */\n      add\n        /* \"#utility.yul\":5606:5653   */\n      mstore\n        /* \"#utility.yul\":5670:5801   */\n      tag_184\n        /* \"#utility.yul\":5796:5800   */\n      dup2\n        /* \"#utility.yul\":5670:5801   */\n      tag_150\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5662:5801   */\n      swap1\n      pop\n        /* \"#utility.yul\":5560:5808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5814:6233   */\n    tag_51:\n      0x00\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"#utility.yul\":6007:6016   */\n      dup3\n        /* \"#utility.yul\":6003:6021   */\n      add\n        /* \"#utility.yul\":5995:6021   */\n      swap1\n      pop\n        /* \"#utility.yul\":6067:6076   */\n      dup2\n        /* \"#utility.yul\":6061:6065   */\n      dup2\n        /* \"#utility.yul\":6057:6077   */\n      sub\n        /* \"#utility.yul\":6053:6054   */\n      0x00\n        /* \"#utility.yul\":6042:6051   */\n      dup4\n        /* \"#utility.yul\":6038:6055   */\n      add\n        /* \"#utility.yul\":6031:6078   */\n      mstore\n        /* \"#utility.yul\":6095:6226   */\n      tag_186\n        /* \"#utility.yul\":6221:6225   */\n      dup2\n        /* \"#utility.yul\":6095:6226   */\n      tag_154\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":6087:6226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5985:6233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6239:6658   */\n    tag_114:\n      0x00\n        /* \"#utility.yul\":6443:6445   */\n      0x20\n        /* \"#utility.yul\":6432:6441   */\n      dup3\n        /* \"#utility.yul\":6428:6446   */\n      add\n        /* \"#utility.yul\":6420:6446   */\n      swap1\n      pop\n        /* \"#utility.yul\":6492:6501   */\n      dup2\n        /* \"#utility.yul\":6486:6490   */\n      dup2\n        /* \"#utility.yul\":6482:6502   */\n      sub\n        /* \"#utility.yul\":6478:6479   */\n      0x00\n        /* \"#utility.yul\":6467:6476   */\n      dup4\n        /* \"#utility.yul\":6463:6480   */\n      add\n        /* \"#utility.yul\":6456:6503   */\n      mstore\n        /* \"#utility.yul\":6520:6651   */\n      tag_188\n        /* \"#utility.yul\":6646:6650   */\n      dup2\n        /* \"#utility.yul\":6520:6651   */\n      tag_157\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":6512:6651   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6664:7083   */\n    tag_75:\n      0x00\n        /* \"#utility.yul\":6868:6870   */\n      0x20\n        /* \"#utility.yul\":6857:6866   */\n      dup3\n        /* \"#utility.yul\":6853:6871   */\n      add\n        /* \"#utility.yul\":6845:6871   */\n      swap1\n      pop\n        /* \"#utility.yul\":6917:6926   */\n      dup2\n        /* \"#utility.yul\":6911:6915   */\n      dup2\n        /* \"#utility.yul\":6907:6927   */\n      sub\n        /* \"#utility.yul\":6903:6904   */\n      0x00\n        /* \"#utility.yul\":6892:6901   */\n      dup4\n        /* \"#utility.yul\":6888:6905   */\n      add\n        /* \"#utility.yul\":6881:6928   */\n      mstore\n        /* \"#utility.yul\":6945:7076   */\n      tag_190\n        /* \"#utility.yul\":7071:7075   */\n      dup2\n        /* \"#utility.yul\":6945:7076   */\n      tag_160\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6937:7076   */\n      swap1\n      pop\n        /* \"#utility.yul\":6835:7083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7089:7508   */\n    tag_70:\n      0x00\n        /* \"#utility.yul\":7293:7295   */\n      0x20\n        /* \"#utility.yul\":7282:7291   */\n      dup3\n        /* \"#utility.yul\":7278:7296   */\n      add\n        /* \"#utility.yul\":7270:7296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7351   */\n      dup2\n        /* \"#utility.yul\":7336:7340   */\n      dup2\n        /* \"#utility.yul\":7332:7352   */\n      sub\n        /* \"#utility.yul\":7328:7329   */\n      0x00\n        /* \"#utility.yul\":7317:7326   */\n      dup4\n        /* \"#utility.yul\":7313:7330   */\n      add\n        /* \"#utility.yul\":7306:7353   */\n      mstore\n        /* \"#utility.yul\":7370:7501   */\n      tag_192\n        /* \"#utility.yul\":7496:7500   */\n      dup2\n        /* \"#utility.yul\":7370:7501   */\n      tag_163\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":7362:7501   */\n      swap1\n      pop\n        /* \"#utility.yul\":7260:7508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7514:7736   */\n    tag_21:\n      0x00\n        /* \"#utility.yul\":7645:7647   */\n      0x20\n        /* \"#utility.yul\":7634:7643   */\n      dup3\n        /* \"#utility.yul\":7630:7648   */\n      add\n        /* \"#utility.yul\":7622:7648   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:7729   */\n      tag_194\n        /* \"#utility.yul\":7726:7727   */\n      0x00\n        /* \"#utility.yul\":7715:7724   */\n      dup4\n        /* \"#utility.yul\":7711:7728   */\n      add\n        /* \"#utility.yul\":7702:7708   */\n      dup5\n        /* \"#utility.yul\":7658:7729   */\n      tag_170\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":7612:7736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7742:7889   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":7880:7883   */\n      dup2\n        /* \"#utility.yul\":7865:7883   */\n      swap1\n      pop\n        /* \"#utility.yul\":7855:7889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7895:8064   */\n    tag_153:\n      0x00\n        /* \"#utility.yul\":8013:8019   */\n      dup3\n        /* \"#utility.yul\":8008:8011   */\n      dup3\n        /* \"#utility.yul\":8001:8020   */\n      mstore\n        /* \"#utility.yul\":8053:8057   */\n      0x20\n        /* \"#utility.yul\":8048:8051   */\n      dup3\n        /* \"#utility.yul\":8044:8058   */\n      add\n        /* \"#utility.yul\":8029:8058   */\n      swap1\n      pop\n        /* \"#utility.yul\":7991:8064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8070:8255   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":8127:8147   */\n      tag_198\n        /* \"#utility.yul\":8145:8146   */\n      dup3\n        /* \"#utility.yul\":8127:8147   */\n      tag_173\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":8122:8147   */\n      swap2\n      pop\n        /* \"#utility.yul\":8161:8181   */\n      tag_199\n        /* \"#utility.yul\":8179:8180   */\n      dup4\n        /* \"#utility.yul\":8161:8181   */\n      tag_173\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":8156:8181   */\n      swap3\n      pop\n        /* \"#utility.yul\":8200:8201   */\n      dup3\n        /* \"#utility.yul\":8190:8192   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":8205:8223   */\n      tag_201\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8190:8192   */\n    tag_200:\n        /* \"#utility.yul\":8247:8248   */\n      dup3\n        /* \"#utility.yul\":8244:8245   */\n      dup3\n        /* \"#utility.yul\":8240:8249   */\n      div\n        /* \"#utility.yul\":8235:8249   */\n      swap1\n      pop\n        /* \"#utility.yul\":8112:8255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8261:8609   */\n    tag_109:\n      0x00\n        /* \"#utility.yul\":8324:8344   */\n      tag_204\n        /* \"#utility.yul\":8342:8343   */\n      dup3\n        /* \"#utility.yul\":8324:8344   */\n      tag_173\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8319:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8358:8378   */\n      tag_205\n        /* \"#utility.yul\":8376:8377   */\n      dup4\n        /* \"#utility.yul\":8358:8378   */\n      tag_173\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8353:8378   */\n      swap3\n      pop\n        /* \"#utility.yul\":8546:8547   */\n      dup2\n        /* \"#utility.yul\":8478:8544   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8474:8548   */\n      div\n        /* \"#utility.yul\":8471:8472   */\n      dup4\n        /* \"#utility.yul\":8468:8549   */\n      gt\n        /* \"#utility.yul\":8463:8464   */\n      dup3\n        /* \"#utility.yul\":8456:8465   */\n      iszero\n        /* \"#utility.yul\":8449:8466   */\n      iszero\n        /* \"#utility.yul\":8445:8550   */\n      and\n        /* \"#utility.yul\":8442:8444   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8553:8571   */\n      tag_207\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8442:8444   */\n    tag_206:\n        /* \"#utility.yul\":8601:8602   */\n      dup3\n        /* \"#utility.yul\":8598:8599   */\n      dup3\n        /* \"#utility.yul\":8594:8603   */\n      mul\n        /* \"#utility.yul\":8583:8603   */\n      swap1\n      pop\n        /* \"#utility.yul\":8309:8609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8615:8711   */\n    tag_145:\n      0x00\n        /* \"#utility.yul\":8681:8705   */\n      tag_210\n        /* \"#utility.yul\":8699:8704   */\n      dup3\n        /* \"#utility.yul\":8681:8705   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8670:8705   */\n      swap1\n      pop\n        /* \"#utility.yul\":8660:8711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8717:8843   */\n    tag_211:\n      0x00\n        /* \"#utility.yul\":8794:8836   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8787:8792   */\n      dup3\n        /* \"#utility.yul\":8783:8837   */\n      and\n        /* \"#utility.yul\":8772:8837   */\n      swap1\n      pop\n        /* \"#utility.yul\":8762:8843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8849:8926   */\n    tag_173:\n      0x00\n        /* \"#utility.yul\":8915:8920   */\n      dup2\n        /* \"#utility.yul\":8904:8920   */\n      swap1\n      pop\n        /* \"#utility.yul\":8894:8926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8932:9116   */\n    tag_149:\n      0x00\n        /* \"#utility.yul\":9044:9110   */\n      tag_215\n        /* \"#utility.yul\":9104:9109   */\n      dup3\n        /* \"#utility.yul\":9044:9110   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":9031:9110   */\n      swap1\n      pop\n        /* \"#utility.yul\":9021:9116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9122:9264   */\n    tag_216:\n      0x00\n        /* \"#utility.yul\":9234:9258   */\n      tag_218\n        /* \"#utility.yul\":9252:9257   */\n      dup3\n        /* \"#utility.yul\":9234:9258   */\n      tag_211\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9221:9258   */\n      swap1\n      pop\n        /* \"#utility.yul\":9211:9264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9270:9503   */\n    tag_60:\n      0x00\n        /* \"#utility.yul\":9332:9356   */\n      tag_220\n        /* \"#utility.yul\":9350:9355   */\n      dup3\n        /* \"#utility.yul\":9332:9356   */\n      tag_173\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9323:9356   */\n      swap2\n      pop\n        /* \"#utility.yul\":9378:9444   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9371:9376   */\n      dup3\n        /* \"#utility.yul\":9368:9445   */\n      eq\n        /* \"#utility.yul\":9365:9367   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":9448:9466   */\n      tag_222\n      tag_208\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":9365:9367   */\n    tag_221:\n        /* \"#utility.yul\":9495:9496   */\n      0x01\n        /* \"#utility.yul\":9488:9493   */\n      dup3\n        /* \"#utility.yul\":9484:9497   */\n      add\n        /* \"#utility.yul\":9477:9497   */\n      swap1\n      pop\n        /* \"#utility.yul\":9313:9503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9509:9689   */\n    tag_208:\n        /* \"#utility.yul\":9557:9634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9554:9555   */\n      0x00\n        /* \"#utility.yul\":9547:9635   */\n      mstore\n        /* \"#utility.yul\":9654:9658   */\n      0x11\n        /* \"#utility.yul\":9651:9652   */\n      0x04\n        /* \"#utility.yul\":9644:9659   */\n      mstore\n        /* \"#utility.yul\":9678:9682   */\n      0x24\n        /* \"#utility.yul\":9675:9676   */\n      0x00\n        /* \"#utility.yul\":9668:9683   */\n      revert\n        /* \"#utility.yul\":9695:9875   */\n    tag_202:\n        /* \"#utility.yul\":9743:9820   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9733:9821   */\n      mstore\n        /* \"#utility.yul\":9840:9844   */\n      0x12\n        /* \"#utility.yul\":9837:9838   */\n      0x04\n        /* \"#utility.yul\":9830:9845   */\n      mstore\n        /* \"#utility.yul\":9864:9868   */\n      0x24\n        /* \"#utility.yul\":9861:9862   */\n      0x00\n        /* \"#utility.yul\":9854:9869   */\n      revert\n        /* \"#utility.yul\":9881:10003   */\n    tag_121:\n        /* \"#utility.yul\":9954:9978   */\n      tag_226\n        /* \"#utility.yul\":9972:9977   */\n      dup2\n        /* \"#utility.yul\":9954:9978   */\n      tag_145\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":9947:9952   */\n      dup2\n        /* \"#utility.yul\":9944:9979   */\n      eq\n        /* \"#utility.yul\":9934:9936   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":9993:9994   */\n      0x00\n        /* \"#utility.yul\":9990:9991   */\n      dup1\n        /* \"#utility.yul\":9983:9995   */\n      revert\n        /* \"#utility.yul\":9934:9936   */\n    tag_227:\n        /* \"#utility.yul\":9924:10003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10009:10131   */\n    tag_125:\n        /* \"#utility.yul\":10082:10106   */\n      tag_229\n        /* \"#utility.yul\":10100:10105   */\n      dup2\n        /* \"#utility.yul\":10082:10106   */\n      tag_173\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":10075:10080   */\n      dup2\n        /* \"#utility.yul\":10072:10107   */\n      eq\n        /* \"#utility.yul\":10062:10064   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":10121:10122   */\n      0x00\n        /* \"#utility.yul\":10118:10119   */\n      dup1\n        /* \"#utility.yul\":10111:10123   */\n      revert\n        /* \"#utility.yul\":10062:10064   */\n    tag_230:\n        /* \"#utility.yul\":10052:10131   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204cc75617d27565396fd6cd173676c19cea29c257561e3825fc96b8161df38b0864736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:961:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:346:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "298:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:1"
															},
															"nodeType": "YulIf",
															"src": "260:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "322:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "337:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "351:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "341:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "366:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "412:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "423:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "408:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "408:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "432:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "376:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "376:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "366:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "460:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "475:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "489:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "479:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "505:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "551:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "562:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "547:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "547:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "515:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "515:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "505:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:1",
														"type": ""
													}
												],
												"src": "156:440:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "657:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "686:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "668:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "657:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "639:7:1",
														"type": ""
													}
												],
												"src": "602:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "749:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "759:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "774:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "759:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "731:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "741:7:1",
														"type": ""
													}
												],
												"src": "704:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "936:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "945:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "948:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "938:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "938:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "902:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "927:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "909:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "909:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "899:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:43:1"
															},
															"nodeType": "YulIf",
															"src": "889:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:1",
														"type": ""
													}
												],
												"src": "836:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620012a3380380620012a3833981810160405281019062000037919062000204565b600062000049620001e560201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156200015157503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b6200015b57600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000293565b600033905090565b600081519050620001fe8162000279565b92915050565b600080604083850312156200021857600080fd5b60006200022885828601620001ed565b92505060206200023b85828601620001ed565b9150509250929050565b6000620002528262000259565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002848162000245565b81146200029057600080fd5b50565b61100080620002a36000396000f3fe60806040526004361061007b5760003560e01c8063715018a61161004e578063715018a61461012f5780638da5cb5b14610146578063d3f5057314610171578063f2fde38b1461019a5761007b565b80633e56e6c314610080578063432be4d01461009c57806347ccca02146100d957806361d027b314610104575b600080fd5b61009a60048036038101906100959190610ab0565b6101c3565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610a5e565b61033f565b6040516100d09190610dd3565b60405180910390f35b3480156100e557600080fd5b506100ee610357565b6040516100fb9190610d18565b60405180910390f35b34801561011057600080fd5b5061011961037d565b6040516101269190610cd4565b60405180910390f35b34801561013b57600080fd5b506101446103a3565b005b34801561015257600080fd5b5061015b6104f6565b6040516101689190610cd4565b60405180910390f35b34801561017d57600080fd5b5061019860048036038101906101939190610ab0565b61051f565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190610a35565b6105c2565b005b6000600360008481526020019081526020016000205411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610d53565b60405180910390fd5b60005b818110156102465761023561022f610784565b8461078c565b8061023f90610ef5565b905061021c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102a883600360008781526020019081526020016000205461092790919063ffffffff16565b6040516102b490610cbf565b60006040518083038185875af1925050503d80600081146102f1576040519150601f19603f3d011682016040523d82523d6000602084013e6102f6565b606091505b505090508061033a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033190610db3565b60405180910390fd5b505050565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103ab610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610d93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610527610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610d93565b60405180910390fd5b6105be82826109a2565b5050565b6105ca610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610d93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90610d33565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c1780876040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e9190610a87565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b815260040161088d929190610cef565b600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b5050505080828473ffffffffffffffffffffffffffffffffffffffff167fbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d600360008781526020019081526020016000205460405161091a9190610dd3565b60405180910390a4505050565b60008083141561093a576000905061099c565b600082846109489190610e3b565b90508284826109579190610e0a565b14610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610d73565b60405180910390fd5b809150505b92915050565b806003600084815260200190815260200160002081905550817f92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711826040516109ea9190610dd3565b60405180910390a25050565b600081359050610a0581610f9c565b92915050565b600081359050610a1a81610fb3565b92915050565b600081519050610a2f81610fb3565b92915050565b600060208284031215610a4757600080fd5b6000610a55848285016109f6565b91505092915050565b600060208284031215610a7057600080fd5b6000610a7e84828501610a0b565b91505092915050565b600060208284031215610a9957600080fd5b6000610aa784828501610a20565b91505092915050565b60008060408385031215610ac357600080fd5b6000610ad185828601610a0b565b9250506020610ae285828601610a0b565b9150509250929050565b610af581610e95565b82525050565b610b0481610ed1565b82525050565b6000610b17602683610df9565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b7d600b83610df9565b91507f4e6f74206f6e206c6973740000000000000000000000000000000000000000006000830152602082019050919050565b6000610bbd602183610df9565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c23602083610df9565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610c63601383610df9565b91507f4661696c656420746f2073656e64206b6c6179000000000000000000000000006000830152602082019050919050565b6000610ca3600083610dee565b9150600082019050919050565b610cb981610ec7565b82525050565b6000610cca82610c96565b9150819050919050565b6000602082019050610ce96000830184610aec565b92915050565b6000604082019050610d046000830185610aec565b610d116020830184610cb0565b9392505050565b6000602082019050610d2d6000830184610afb565b92915050565b60006020820190508181036000830152610d4c81610b0a565b9050919050565b60006020820190508181036000830152610d6c81610b70565b9050919050565b60006020820190508181036000830152610d8c81610bb0565b9050919050565b60006020820190508181036000830152610dac81610c16565b9050919050565b60006020820190508181036000830152610dcc81610c56565b9050919050565b6000602082019050610de86000830184610cb0565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610e1582610ec7565b9150610e2083610ec7565b925082610e3057610e2f610f6d565b5b828204905092915050565b6000610e4682610ec7565b9150610e5183610ec7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8a57610e89610f3e565b5b828202905092915050565b6000610ea082610ea7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610edc82610ee3565b9050919050565b6000610eee82610ea7565b9050919050565b6000610f0082610ec7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3357610f32610f3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610fa581610e95565b8114610fb057600080fd5b50565b610fbc81610ec7565b8114610fc757600080fd5b5056fea26469706673582212204cc75617d27565396fd6cd173676c19cea29c257561e3825fc96b8161df38b0864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x12A3 CODESIZE SUB DUP1 PUSH3 0x12A3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x204 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49 PUSH3 0x1E5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x151 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x293 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FE DUP2 PUSH3 0x279 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x228 DUP6 DUP3 DUP7 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x1ED JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x252 DUP3 PUSH3 0x259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x284 DUP2 PUSH3 0x245 JUMP JUMPDEST DUP2 EQ PUSH3 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1000 DUP1 PUSH3 0x2A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH2 0x235 PUSH2 0x22F PUSH2 0x784 JUMP JUMPDEST DUP5 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH2 0x23F SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A8 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x927 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x527 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP3 DUP3 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1C178087 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0xF9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1A DUP2 PUSH2 0xFB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2F DUP2 PUSH2 0xFB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA55 DUP5 DUP3 DUP6 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP5 DUP3 DUP6 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA7 DUP5 DUP3 DUP6 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD1 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE2 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF5 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xED1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB17 PUSH1 0x26 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH1 0xB DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD PUSH1 0x21 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x20 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC63 PUSH1 0x13 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4661696C656420746F2073656E64206B6C617900000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x0 DUP4 PUSH2 0xDEE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB9 DUP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA DUP3 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4C DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6C DUP2 PUSH2 0xB70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8C DUP2 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAC DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCC DUP2 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE15 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE20 DUP4 PUSH2 0xEC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE30 JUMPI PUSH2 0xE2F PUSH2 0xF6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE51 DUP4 PUSH2 0xEC7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE8A JUMPI PUSH2 0xE89 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA0 DUP3 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDC DUP3 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF00 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP2 EQ PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFBC DUP2 PUSH2 0xEC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xC7 JUMP OR 0xD2 PUSH22 0x65396FD6CD173676C19CEA29C257561E3825FC96B816 SAR RETURN DUP12 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "22433:1695:0:-:0;;;22830:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8103:17;8123:12;:10;;;:12;;:::i;:::-;8103:32;;8155:9;8146:6;;:18;;;;;;;;;;;;;;;;;;8213:9;8180:43;;8209:1;8180:43;;;;;;;;;;;;8077:154;22949:1;22926:25;;:11;:25;;;;:57;;;;;22978:4;22955:28;;:11;:28;;;;22926:57;22918:66;;;;;;23023:11;22995:3;;:40;;;;;;;;;;;;;;;;;;23057:9;23046:8;;:20;;;;;;;;;;;;;;;;;;22830:244;;22433:1695;;6903:98;6956:7;6983:10;6976:17;;6903:98;:::o;7:143:1:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:440::-;;;292:2;280:9;271:7;267:23;263:32;260:2;;;308:1;305;298:12;260:2;351:1;376:64;432:7;423:6;412:9;408:22;376:64;:::i;:::-;366:74;;322:128;489:2;515:64;571:7;562:6;551:9;547:22;515:64;:::i;:::-;505:74;;460:129;250:346;;;;;:::o;602:96::-;;668:24;686:5;668:24;:::i;:::-;657:35;;647:51;;;:::o;704:126::-;;781:42;774:5;770:54;759:65;;749:81;;;:::o;836:122::-;909:24;927:5;909:24;:::i;:::-;902:5;899:35;889:2;;948:1;945;938:12;889:2;879:79;:::o;22433:1695:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10134:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:1",
														"type": ""
													}
												],
												"src": "152:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "360:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "370:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "385:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "379:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "370:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "401:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "401:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "338:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "346:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "354:5:1",
														"type": ""
													}
												],
												"src": "297:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "512:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "570:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "554:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:32:1"
															},
															"nodeType": "YulIf",
															"src": "522:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "584:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "599:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "603:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "628:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "663:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "674:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "659:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "659:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "683:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "638:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "638:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "628:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "482:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "493:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "505:6:1",
														"type": ""
													}
												],
												"src": "446:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "780:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "826:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "835:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "838:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "828:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "828:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "801:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "797:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "822:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "793:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:32:1"
															},
															"nodeType": "YulIf",
															"src": "790:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "852:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "867:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "871:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "896:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "931:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "942:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "927:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "927:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "951:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "906:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "750:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "761:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:1",
														"type": ""
													}
												],
												"src": "714:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1059:207:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1105:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1114:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1117:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1107:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1107:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1080:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1089:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1076:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1072:32:1"
															},
															"nodeType": "YulIf",
															"src": "1069:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1131:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1146:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1160:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1150:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1175:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1221:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1232:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1217:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1217:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1241:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1185:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1185:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1175:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1029:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1040:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1052:6:1",
														"type": ""
													}
												],
												"src": "982:284:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1355:324:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1401:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1410:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1413:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1403:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1403:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1403:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1376:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1385:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1372:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:32:1"
															},
															"nodeType": "YulIf",
															"src": "1365:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1427:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1442:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1456:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1446:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1471:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1506:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1517:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1502:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1502:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1526:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1481:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1471:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1554:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1569:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1583:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1573:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1599:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1634:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1645:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1630:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1630:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1654:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1609:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1609:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1599:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1317:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1328:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1340:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1348:6:1",
														"type": ""
													}
												],
												"src": "1272:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1750:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1767:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1790:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1772:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1772:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1760:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1738:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1745:3:1",
														"type": ""
													}
												],
												"src": "1685:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1903:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1920:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1985:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1925:59:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1925:66:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1913:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1913:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1913:79:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1891:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1898:3:1",
														"type": ""
													}
												],
												"src": "1809:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:224:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2160:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2226:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2167:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2255:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2260:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2264:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2244:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2320:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2325:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2316:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2316:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2330:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2309:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2349:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2360:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2365:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2356:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2349:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2138:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2146:3:1",
														"type": ""
													}
												],
												"src": "2004:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2526:163:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2536:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2602:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2543:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2631:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2636:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2640:13:1",
																		"type": "",
																		"value": "Not on list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2664:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2675:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2680:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2671:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2514:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2522:3:1",
														"type": ""
													}
												],
												"src": "2380:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2841:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2851:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2917:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2858:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2946:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2942:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2955:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3011:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3021:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3000:25:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3035:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3046:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3051:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3042:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3035:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2829:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2837:3:1",
														"type": ""
													}
												],
												"src": "2695:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3212:184:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3222:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3288:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3229:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3317:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3322:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3313:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3326:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3306:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3306:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3371:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3382:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3371:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3200:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3208:3:1",
														"type": ""
													}
												],
												"src": "3066:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:171:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3558:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3624:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3565:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3558:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3653:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3658:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3649:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3662:21:1",
																		"type": "",
																		"value": "Failed to send klay"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3642:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3642:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3694:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3705:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3710:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3694:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3536:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3544:3:1",
														"type": ""
													}
												],
												"src": "3402:317:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:134:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3898:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3981:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3986:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3905:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:83:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3998:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4009:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4014:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4005:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3998:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3876:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3884:3:1",
														"type": ""
													}
												],
												"src": "3725:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4093:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4110:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4133:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4115:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4115:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4081:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4088:3:1",
														"type": ""
													}
												],
												"src": "4028:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4340:191:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4351:154:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4501:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4358:141:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:147:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4351:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4515:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4522:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4515:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4327:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4336:3:1",
														"type": ""
													}
												],
												"src": "4152:379:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4635:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4645:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4657:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4653:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4653:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4645:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4749:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4681:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4681:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4607:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4619:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4630:4:1",
														"type": ""
													}
												],
												"src": "4537:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4901:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4913:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4924:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4909:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4901:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4981:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5005:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4990:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4937:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4937:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5062:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5086:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5071:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5018:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5018:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5018:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4855:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4867:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4875:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4886:4:1",
														"type": ""
													}
												],
												"src": "4765:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5230:153:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5240:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5248:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5240:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5349:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5362:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5373:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5358:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5276:72:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:100:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5276:100:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721MintableAutoId_$899__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5202:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5214:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5225:4:1",
														"type": ""
													}
												],
												"src": "5103:280:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5560:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5570:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5582:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5578:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5570:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5628:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5613:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5636:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5642:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5632:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5606:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5662:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5670:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5670:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5662:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5540:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5555:4:1",
														"type": ""
													}
												],
												"src": "5389:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5985:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5995:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6007:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6018:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6003:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6003:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5995:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6042:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6053:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6038:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6038:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6061:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6067:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6057:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6031:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6031:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6087:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6095:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6095:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6087:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5965:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5980:4:1",
														"type": ""
													}
												],
												"src": "5814:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6410:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6420:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6432:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6443:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6420:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6478:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6463:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6486:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6482:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6456:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6512:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6646:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6520:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6512:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6390:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6405:4:1",
														"type": ""
													}
												],
												"src": "6239:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6835:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6845:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6857:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6868:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6853:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6845:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6903:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6888:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6911:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6917:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6907:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6881:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6937:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7071:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6945:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6945:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6937:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6815:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6830:4:1",
														"type": ""
													}
												],
												"src": "6664:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7260:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7270:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7282:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7270:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7328:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7313:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7336:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7342:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7332:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7332:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7306:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7306:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7362:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7496:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7370:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7362:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7240:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7255:4:1",
														"type": ""
													}
												],
												"src": "7089:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7612:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7622:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7622:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7702:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7711:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7658:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7658:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7584:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7596:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7607:4:1",
														"type": ""
													}
												],
												"src": "7514:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7865:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7880:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7865:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7827:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7843:11:1",
														"type": ""
													}
												],
												"src": "7742:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7991:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8008:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8013:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8001:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8001:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8001:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8029:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8048:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8053:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8044:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8029:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7963:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7968:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7979:11:1",
														"type": ""
													}
												],
												"src": "7895:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8112:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8122:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8145:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8127:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8122:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8156:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8179:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8161:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8161:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8156:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8203:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8205:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8205:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8205:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8200:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8193:9:1"
															},
															"nodeType": "YulIf",
															"src": "8190:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8235:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8244:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8247:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8240:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8235:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8101:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8104:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8110:1:1",
														"type": ""
													}
												],
												"src": "8070:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8309:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8319:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8342:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8324:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8319:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8353:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8376:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8358:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8353:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8463:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8456:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8456:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8449:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8449:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8471:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8478:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8546:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8474:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8474:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8468:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8445:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:105:1"
															},
															"nodeType": "YulIf",
															"src": "8442:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8583:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8598:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8601:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8583:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8292:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8295:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8301:7:1",
														"type": ""
													}
												],
												"src": "8261:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8660:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8670:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8699:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8681:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8670:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8642:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8652:7:1",
														"type": ""
													}
												],
												"src": "8615:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8762:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8772:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8787:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8794:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8783:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8772:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8744:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8754:7:1",
														"type": ""
													}
												],
												"src": "8717:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8894:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8904:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8915:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8904:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8876:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8886:7:1",
														"type": ""
													}
												],
												"src": "8849:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9021:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9031:79:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9104:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9044:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9044:66:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9031:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9001:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9011:9:1",
														"type": ""
													}
												],
												"src": "8932:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9221:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9252:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9234:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9221:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721MintableAutoId_$899_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9191:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9201:9:1",
														"type": ""
													}
												],
												"src": "9122:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9323:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9350:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9332:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9332:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9323:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9446:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9448:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9448:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9448:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9371:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9378:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9368:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9368:77:1"
															},
															"nodeType": "YulIf",
															"src": "9365:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9477:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9488:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9495:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9299:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9309:3:1",
														"type": ""
													}
												],
												"src": "9270:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9537:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9554:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9557:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9547:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9547:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9651:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9654:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9644:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9644:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9675:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9678:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9668:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9668:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9509:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9723:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9743:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9733:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9837:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9840:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9830:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9830:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9861:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9864:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9854:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9854:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9695:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9924:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9981:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9990:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9993:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9983:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9983:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9983:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9947:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9972:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9954:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9954:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9944:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9944:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:43:1"
															},
															"nodeType": "YulIf",
															"src": "9934:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9917:5:1",
														"type": ""
													}
												],
												"src": "9881:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10052:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10109:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10118:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10121:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10111:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10111:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10111:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10075:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10100:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10082:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10082:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10072:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:43:1"
															},
															"nodeType": "YulIf",
															"src": "10062:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10045:5:1",
														"type": ""
													}
												],
												"src": "10009:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721MintableAutoId_$899_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(pos, 32), \"ddress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n\n        mstore(add(pos, 0), \"Not on list\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n\n        mstore(add(pos, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(pos, 32), \"w\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n\n        mstore(add(pos, 0), \"Failed to send klay\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721MintableAutoId_$899__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721MintableAutoId_$899_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC721MintableAutoId_$899_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC721MintableAutoId_$899_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721MintableAutoId_$899_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c8063715018a61161004e578063715018a61461012f5780638da5cb5b14610146578063d3f5057314610171578063f2fde38b1461019a5761007b565b80633e56e6c314610080578063432be4d01461009c57806347ccca02146100d957806361d027b314610104575b600080fd5b61009a60048036038101906100959190610ab0565b6101c3565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610a5e565b61033f565b6040516100d09190610dd3565b60405180910390f35b3480156100e557600080fd5b506100ee610357565b6040516100fb9190610d18565b60405180910390f35b34801561011057600080fd5b5061011961037d565b6040516101269190610cd4565b60405180910390f35b34801561013b57600080fd5b506101446103a3565b005b34801561015257600080fd5b5061015b6104f6565b6040516101689190610cd4565b60405180910390f35b34801561017d57600080fd5b5061019860048036038101906101939190610ab0565b61051f565b005b3480156101a657600080fd5b506101c160048036038101906101bc9190610a35565b6105c2565b005b6000600360008481526020019081526020016000205411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090610d53565b60405180910390fd5b60005b818110156102465761023561022f610784565b8461078c565b8061023f90610ef5565b905061021c565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166102a883600360008781526020019081526020016000205461092790919063ffffffff16565b6040516102b490610cbf565b60006040518083038185875af1925050503d80600081146102f1576040519150601f19603f3d011682016040523d82523d6000602084013e6102f6565b606091505b505090508061033a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033190610db3565b60405180910390fd5b505050565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103ab610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90610d93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610527610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90610d93565b60405180910390fd5b6105be82826109a2565b5050565b6105ca610784565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610657576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064e90610d93565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90610d33565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c1780876040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f657600080fd5b505afa15801561080a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082e9190610a87565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819484846040518363ffffffff1660e01b815260040161088d929190610cef565b600060405180830381600087803b1580156108a757600080fd5b505af11580156108bb573d6000803e3d6000fd5b5050505080828473ffffffffffffffffffffffffffffffffffffffff167fbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d600360008781526020019081526020016000205460405161091a9190610dd3565b60405180910390a4505050565b60008083141561093a576000905061099c565b600082846109489190610e3b565b90508284826109579190610e0a565b14610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90610d73565b60405180910390fd5b809150505b92915050565b806003600084815260200190815260200160002081905550817f92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711826040516109ea9190610dd3565b60405180910390a25050565b600081359050610a0581610f9c565b92915050565b600081359050610a1a81610fb3565b92915050565b600081519050610a2f81610fb3565b92915050565b600060208284031215610a4757600080fd5b6000610a55848285016109f6565b91505092915050565b600060208284031215610a7057600080fd5b6000610a7e84828501610a0b565b91505092915050565b600060208284031215610a9957600080fd5b6000610aa784828501610a20565b91505092915050565b60008060408385031215610ac357600080fd5b6000610ad185828601610a0b565b9250506020610ae285828601610a0b565b9150509250929050565b610af581610e95565b82525050565b610b0481610ed1565b82525050565b6000610b17602683610df9565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610b7d600b83610df9565b91507f4e6f74206f6e206c6973740000000000000000000000000000000000000000006000830152602082019050919050565b6000610bbd602183610df9565b91507f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008301527f77000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610c23602083610df9565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610c63601383610df9565b91507f4661696c656420746f2073656e64206b6c6179000000000000000000000000006000830152602082019050919050565b6000610ca3600083610dee565b9150600082019050919050565b610cb981610ec7565b82525050565b6000610cca82610c96565b9150819050919050565b6000602082019050610ce96000830184610aec565b92915050565b6000604082019050610d046000830185610aec565b610d116020830184610cb0565b9392505050565b6000602082019050610d2d6000830184610afb565b92915050565b60006020820190508181036000830152610d4c81610b0a565b9050919050565b60006020820190508181036000830152610d6c81610b70565b9050919050565b60006020820190508181036000830152610d8c81610bb0565b9050919050565b60006020820190508181036000830152610dac81610c16565b9050919050565b60006020820190508181036000830152610dcc81610c56565b9050919050565b6000602082019050610de86000830184610cb0565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610e1582610ec7565b9150610e2083610ec7565b925082610e3057610e2f610f6d565b5b828204905092915050565b6000610e4682610ec7565b9150610e5183610ec7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8a57610e89610f3e565b5b828202905092915050565b6000610ea082610ea7565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610edc82610ee3565b9050919050565b6000610eee82610ea7565b9050919050565b6000610f0082610ec7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3357610f32610f3e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610fa581610e95565b8114610fb057600080fd5b50565b610fbc81610ec7565b8114610fc757600080fd5b5056fea26469706673582212204cc75617d27565396fd6cd173676c19cea29c257561e3825fc96b8161df38b0864736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19A JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x95 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xA5E JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEE PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x119 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15B PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x51F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xA35 JUMP JUMPDEST PUSH2 0x5C2 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH2 0x235 PUSH2 0x22F PUSH2 0x784 JUMP JUMPDEST DUP5 PUSH2 0x78C JUMP JUMPDEST DUP1 PUSH2 0x23F SWAP1 PUSH2 0xEF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A8 DUP4 PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x927 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP1 PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP1 PUSH2 0xDB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x527 PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AB SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP3 DUP3 PUSH2 0x9A2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5CA PUSH2 0x784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64E SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1C178087 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0xA87 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP3 SWAP2 SWAP1 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D PUSH1 0x3 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0xE3B JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST EQ PUSH2 0x997 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98E SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA05 DUP2 PUSH2 0xF9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA1A DUP2 PUSH2 0xFB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2F DUP2 PUSH2 0xFB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA55 DUP5 DUP3 DUP6 ADD PUSH2 0x9F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA7E DUP5 DUP3 DUP6 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAA7 DUP5 DUP3 DUP6 ADD PUSH2 0xA20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAD1 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAE2 DUP6 DUP3 DUP7 ADD PUSH2 0xA0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF5 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0xED1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB17 PUSH1 0x26 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH1 0xB DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD PUSH1 0x21 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC23 PUSH1 0x20 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC63 PUSH1 0x13 DUP4 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 POP PUSH32 0x4661696C656420746F2073656E64206B6C617900000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA3 PUSH1 0x0 DUP4 PUSH2 0xDEE JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCB9 DUP2 PUSH2 0xEC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCA DUP3 PUSH2 0xC96 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xD11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD2D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAFB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD4C DUP2 PUSH2 0xB0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD6C DUP2 PUSH2 0xB70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD8C DUP2 PUSH2 0xBB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDAC DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDCC DUP2 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE15 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE20 DUP4 PUSH2 0xEC7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE30 JUMPI PUSH2 0xE2F PUSH2 0xF6D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH2 0xE51 DUP4 PUSH2 0xEC7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE8A JUMPI PUSH2 0xE89 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA0 DUP3 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEDC DUP3 PUSH2 0xEE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEEE DUP3 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF00 DUP3 PUSH2 0xEC7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xF33 JUMPI PUSH2 0xF32 PUSH2 0xF3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xE95 JUMP JUMPDEST DUP2 EQ PUSH2 0xFB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFBC DUP2 PUSH2 0xEC7 JUMP JUMPDEST DUP2 EQ PUSH2 0xFC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xC7 JUMP OR 0xD2 PUSH22 0x65396FD6CD173676C19CEA29C257561E3825FC96B816 SAR RETURN DUP12 ADDMOD PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "22433:1695:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23694:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22588:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22511:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22552:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8954:148;;;;;;;;;;;;;:::i;:::-;;8312:79;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23279:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9257:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;23694:427;23825:1;23792:16;:32;23809:14;23792:32;;;;;;;;;;;;:34;23784:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;23860:9;23855:106;23879:9;23875:1;:13;23855:106;;;23910:39;23920:12;:10;:12::i;:::-;23934:14;23910:9;:39::i;:::-;23890:3;;;;:::i;:::-;;;23855:106;;;;23972:12;23990:8;;;;;;;;;;;:13;;24011:47;24048:9;24011:16;:32;24028:14;24011:32;;;;;;;;;;;;:36;;:47;;;;:::i;:::-;23990:73;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23971:92;;;24082:7;24074:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;23694:427;;;:::o;22588:51::-;;;;;;;;;;;;;;;;;:::o;22511:32::-;;;;;;;;;;;;;:::o;22552:23::-;;;;;;;;;;;;;:::o;8954:148::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9061:1:::1;9024:40;;9045:6;::::0;::::1;;;;;;;;9024:40;;;;;;;;;;;;9092:1;9075:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;8954:148::o:0;8312:79::-;8350:7;8377:6;;;;;;;;;;;8370:13;;8312:79;:::o;23279:133::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;23370:34:::1;23381:14;23397:6;23370:10;:34::i;:::-;23279:133:::0;;:::o;9257:244::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9366:1:::1;9346:22;;:8;:22;;;;9338:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;9456:8;9427:38;;9448:6;::::0;::::1;;;;;;;;9427:38;;;;;;;;;;;;9485:8;9476:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;9257:244:::0;:::o;6903:98::-;6956:7;6983:10;6976:17;;6903:98;:::o;23424:258::-;23503:15;23521:3;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23503:38;;23552:3;;;;;;;;;;;:12;;;23565:6;23573:14;23552:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23632:7;23616:14;23608:6;23604:70;;;23641:16;:32;23658:14;23641:32;;;;;;;;;;;;23604:70;;;;;;:::i;:::-;;;;;;;;23424:258;;;:::o;2380:471::-;2438:7;2688:1;2683;:6;2679:47;;;2713:1;2706:8;;;;2679:47;2738:9;2754:1;2750;:5;;;;:::i;:::-;2738:17;;2783:1;2778;2774;:5;;;;:::i;:::-;:10;2766:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:1;2835:8;;;2380:471;;;;;:::o;23086:181::-;23201:6;23166:16;:32;23183:14;23166:32;;;;;;;;;;;:41;;;;23236:14;23223:36;23252:6;23223:36;;;;;;:::i;:::-;;;;;;;;23086:181;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:262::-;;554:2;542:9;533:7;529:23;525:32;522:2;;;570:1;567;560:12;522:2;613:1;638:53;683:7;674:6;663:9;659:22;638:53;:::i;:::-;628:63;;584:117;512:196;;;;:::o;714:262::-;;822:2;810:9;801:7;797:23;793:32;790:2;;;838:1;835;828:12;790:2;881:1;906:53;951:7;942:6;931:9;927:22;906:53;:::i;:::-;896:63;;852:117;780:196;;;;:::o;982:284::-;;1101:2;1089:9;1080:7;1076:23;1072:32;1069:2;;;1117:1;1114;1107:12;1069:2;1160:1;1185:64;1241:7;1232:6;1221:9;1217:22;1185:64;:::i;:::-;1175:74;;1131:128;1059:207;;;;:::o;1272:407::-;;;1397:2;1385:9;1376:7;1372:23;1368:32;1365:2;;;1413:1;1410;1403:12;1365:2;1456:1;1481:53;1526:7;1517:6;1506:9;1502:22;1481:53;:::i;:::-;1471:63;;1427:117;1583:2;1609:53;1654:7;1645:6;1634:9;1630:22;1609:53;:::i;:::-;1599:63;;1554:118;1355:324;;;;;:::o;1685:118::-;1772:24;1790:5;1772:24;:::i;:::-;1767:3;1760:37;1750:53;;:::o;1809:189::-;1925:66;1985:5;1925:66;:::i;:::-;1920:3;1913:79;1903:95;;:::o;2004:370::-;;2167:67;2231:2;2226:3;2167:67;:::i;:::-;2160:74;;2264:34;2260:1;2255:3;2251:11;2244:55;2330:8;2325:2;2320:3;2316:12;2309:30;2365:2;2360:3;2356:12;2349:19;;2150:224;;;:::o;2380:309::-;;2543:67;2607:2;2602:3;2543:67;:::i;:::-;2536:74;;2640:13;2636:1;2631:3;2627:11;2620:34;2680:2;2675:3;2671:12;2664:19;;2526:163;;;:::o;2695:365::-;;2858:67;2922:2;2917:3;2858:67;:::i;:::-;2851:74;;2955:34;2951:1;2946:3;2942:11;2935:55;3021:3;3016:2;3011:3;3007:12;3000:25;3051:2;3046:3;3042:12;3035:19;;2841:219;;;:::o;3066:330::-;;3229:67;3293:2;3288:3;3229:67;:::i;:::-;3222:74;;3326:34;3322:1;3317:3;3313:11;3306:55;3387:2;3382:3;3378:12;3371:19;;3212:184;;;:::o;3402:317::-;;3565:67;3629:2;3624:3;3565:67;:::i;:::-;3558:74;;3662:21;3658:1;3653:3;3649:11;3642:42;3710:2;3705:3;3701:12;3694:19;;3548:171;;;:::o;3725:297::-;;3905:83;3986:1;3981:3;3905:83;:::i;:::-;3898:90;;4014:1;4009:3;4005:11;3998:18;;3888:134;;;:::o;4028:118::-;4115:24;4133:5;4115:24;:::i;:::-;4110:3;4103:37;4093:53;;:::o;4152:379::-;;4358:147;4501:3;4358:147;:::i;:::-;4351:154;;4522:3;4515:10;;4340:191;;;:::o;4537:222::-;;4668:2;4657:9;4653:18;4645:26;;4681:71;4749:1;4738:9;4734:17;4725:6;4681:71;:::i;:::-;4635:124;;;;:::o;4765:332::-;;4924:2;4913:9;4909:18;4901:26;;4937:71;5005:1;4994:9;4990:17;4981:6;4937:71;:::i;:::-;5018:72;5086:2;5075:9;5071:18;5062:6;5018:72;:::i;:::-;4891:206;;;;;:::o;5103:280::-;;5263:2;5252:9;5248:18;5240:26;;5276:100;5373:1;5362:9;5358:17;5349:6;5276:100;:::i;:::-;5230:153;;;;:::o;5389:419::-;;5593:2;5582:9;5578:18;5570:26;;5642:9;5636:4;5632:20;5628:1;5617:9;5613:17;5606:47;5670:131;5796:4;5670:131;:::i;:::-;5662:139;;5560:248;;;:::o;5814:419::-;;6018:2;6007:9;6003:18;5995:26;;6067:9;6061:4;6057:20;6053:1;6042:9;6038:17;6031:47;6095:131;6221:4;6095:131;:::i;:::-;6087:139;;5985:248;;;:::o;6239:419::-;;6443:2;6432:9;6428:18;6420:26;;6492:9;6486:4;6482:20;6478:1;6467:9;6463:17;6456:47;6520:131;6646:4;6520:131;:::i;:::-;6512:139;;6410:248;;;:::o;6664:419::-;;6868:2;6857:9;6853:18;6845:26;;6917:9;6911:4;6907:20;6903:1;6892:9;6888:17;6881:47;6945:131;7071:4;6945:131;:::i;:::-;6937:139;;6835:248;;;:::o;7089:419::-;;7293:2;7282:9;7278:18;7270:26;;7342:9;7336:4;7332:20;7328:1;7317:9;7313:17;7306:47;7370:131;7496:4;7370:131;:::i;:::-;7362:139;;7260:248;;;:::o;7514:222::-;;7645:2;7634:9;7630:18;7622:26;;7658:71;7726:1;7715:9;7711:17;7702:6;7658:71;:::i;:::-;7612:124;;;;:::o;7742:147::-;;7880:3;7865:18;;7855:34;;;;:::o;7895:169::-;;8013:6;8008:3;8001:19;8053:4;8048:3;8044:14;8029:29;;7991:73;;;;:::o;8070:185::-;;8127:20;8145:1;8127:20;:::i;:::-;8122:25;;8161:20;8179:1;8161:20;:::i;:::-;8156:25;;8200:1;8190:2;;8205:18;;:::i;:::-;8190:2;8247:1;8244;8240:9;8235:14;;8112:143;;;;:::o;8261:348::-;;8324:20;8342:1;8324:20;:::i;:::-;8319:25;;8358:20;8376:1;8358:20;:::i;:::-;8353:25;;8546:1;8478:66;8474:74;8471:1;8468:81;8463:1;8456:9;8449:17;8445:105;8442:2;;;8553:18;;:::i;:::-;8442:2;8601:1;8598;8594:9;8583:20;;8309:300;;;;:::o;8615:96::-;;8681:24;8699:5;8681:24;:::i;:::-;8670:35;;8660:51;;;:::o;8717:126::-;;8794:42;8787:5;8783:54;8772:65;;8762:81;;;:::o;8849:77::-;;8915:5;8904:16;;8894:32;;;:::o;8932:184::-;;9044:66;9104:5;9044:66;:::i;:::-;9031:79;;9021:95;;;:::o;9122:142::-;;9234:24;9252:5;9234:24;:::i;:::-;9221:37;;9211:53;;;:::o;9270:233::-;;9332:24;9350:5;9332:24;:::i;:::-;9323:33;;9378:66;9371:5;9368:77;9365:2;;;9448:18;;:::i;:::-;9365:2;9495:1;9488:5;9484:13;9477:20;;9313:190;;;:::o;9509:180::-;9557:77;9554:1;9547:88;9654:4;9651:1;9644:15;9678:4;9675:1;9668:15;9695:180;9743:77;9740:1;9733:88;9840:4;9837:1;9830:15;9864:4;9861:1;9854:15;9881:122;9954:24;9972:5;9954:24;:::i;:::-;9947:5;9944:35;9934:2;;9993:1;9990;9983:12;9934:2;9924:79;:::o;10009:122::-;10082:24;10100:5;10082:24;:::i;:::-;10075:5;10072:35;10062:2;;10121:1;10118;10111:12;10062:2;10052:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "819200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_commodityPrices(uint256)": "infinite",
								"nft()": "1302",
								"owner()": "1244",
								"renounceOwnership()": "24291",
								"safeBuyToken(uint256,uint256)": "infinite",
								"safeListToken(uint256,uint256)": "infinite",
								"transferOwnership(address)": "24706",
								"treasury()": "1281"
							},
							"internal": {
								"_buyToken(address,uint256)": "infinite",
								"_listToken(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8155,
									"end": 8164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8213,
									"end": 8222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8209,
									"end": 8210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8077,
									"end": 8231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22949,
									"end": 22950,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22951,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22978,
									"end": 22982,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22955,
									"end": 22983,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22926,
									"end": 22983,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22918,
									"end": 22984,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23023,
									"end": 23034,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 22998,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22995,
									"end": 22998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22995,
									"end": 23035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23057,
									"end": 23066,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23054,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23046,
									"end": 23054,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23046,
									"end": 23066,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22830,
									"end": 23074,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6956,
									"end": 6963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6983,
									"end": 6993,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 156,
									"end": 596,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 596,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 308,
									"end": 309,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 298,
									"end": 310,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 260,
									"end": 262,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 260,
									"end": 262,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 432,
									"end": 439,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 423,
									"end": 429,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 412,
									"end": 421,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 408,
									"end": 430,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 376,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 376,
									"end": 440,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 366,
									"end": 440,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 366,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 322,
									"end": 450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 489,
									"end": 491,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 571,
									"end": 578,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 562,
									"end": 568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 551,
									"end": 560,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 547,
									"end": 569,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 515,
									"end": 579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 515,
									"end": 579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 505,
									"end": 579,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 505,
									"end": 579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 460,
									"end": 589,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 596,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 602,
									"end": 698,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 602,
									"end": 698,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 698,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 686,
									"end": 691,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 692,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 692,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 698,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 647,
									"end": 698,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 698,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 698,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 704,
									"end": 830,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 704,
									"end": 830,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 704,
									"end": 830,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 823,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 774,
									"end": 779,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 770,
									"end": 824,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 759,
									"end": 824,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 759,
									"end": 824,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 749,
									"end": 830,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 749,
									"end": 830,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 749,
									"end": 830,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 749,
									"end": 830,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 836,
									"end": 958,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 836,
									"end": 958,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 909,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 927,
									"end": 932,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 909,
									"end": 933,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 909,
									"end": 933,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 902,
									"end": 907,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 899,
									"end": 934,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 889,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 889,
									"end": 891,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 945,
									"end": 946,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 938,
									"end": 950,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 889,
									"end": 891,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 889,
									"end": 891,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 879,
									"end": 958,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 879,
									"end": 958,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22433,
									"end": 24128,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cc75617d27565396fd6cd173676c19cea29c257561e3825fc96b8161df38b0864736f6c63430008000033",
									".code": [
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "D3F50573"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "3E56E6C3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "432BE4D0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22433,
											"end": 24128,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23825,
											"end": 23826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23792,
											"end": 23808,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23809,
											"end": 23823,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23824,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23792,
											"end": 23826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23784,
											"end": 23842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23860,
											"end": 23869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23875,
											"end": 23888,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23920,
											"end": 23930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 23920,
											"end": 23932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23934,
											"end": 23948,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23910,
											"end": 23919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 23910,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23890,
											"end": 23893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23855,
											"end": 23961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23972,
											"end": 23984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23990,
											"end": 23998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24003,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23990,
											"end": 24003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24048,
											"end": 24057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24027,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24043,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24011,
											"end": 24047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24011,
											"end": 24058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23990,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23971,
											"end": 24063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24082,
											"end": 24089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24074,
											"end": 24113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23694,
											"end": 24121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22588,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22511,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22552,
											"end": 22575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23381,
											"end": 23395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23397,
											"end": 23403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23370,
											"end": 23380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23279,
											"end": 23412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23539,
											"name": "PUSH",
											"source": 0,
											"value": "1C178087"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23521,
											"end": 23541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23503,
											"end": 23541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23564,
											"name": "PUSH",
											"source": 0,
											"value": "A1448194"
										},
										{
											"begin": 23565,
											"end": 23571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23573,
											"end": 23587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23552,
											"end": 23588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23616,
											"end": 23630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23608,
											"end": 23614,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "BEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D"
										},
										{
											"begin": 23641,
											"end": 23657,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23658,
											"end": 23672,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23641,
											"end": 23673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23604,
											"end": 23674,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23424,
											"end": 23682,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23201,
											"end": 23207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23182,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23183,
											"end": 23197,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23166,
											"end": 23198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23166,
											"end": 23207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23236,
											"end": 23250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711"
										},
										{
											"begin": 23252,
											"end": 23258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23223,
											"end": 23259,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23086,
											"end": 23267,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 297,
											"end": 440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 370,
											"end": 392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 370,
											"end": 392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 360,
											"end": 440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 360,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 708,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 446,
											"end": 708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 446,
											"end": 708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 533,
											"end": 540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 529,
											"end": 552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 525,
											"end": 557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 522,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 683,
											"end": 690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 663,
											"end": 672,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 659,
											"end": 681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 638,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 638,
											"end": 691,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 691,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 638,
											"end": 691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 628,
											"end": 691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 701,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 708,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 512,
											"end": 708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 512,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 512,
											"end": 708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 714,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 714,
											"end": 976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 808,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 797,
											"end": 820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 793,
											"end": 825,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 838,
											"end": 839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 835,
											"end": 836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 828,
											"end": 840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 931,
											"end": 940,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 927,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 906,
											"end": 959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 959,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 906,
											"end": 959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 896,
											"end": 959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 852,
											"end": 969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 780,
											"end": 976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 780,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 780,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 982,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 982,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1089,
											"end": 1098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1087,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1099,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1104,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1241,
											"end": 1248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1239,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1185,
											"end": 1249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1249,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1185,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1266,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1679,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1272,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1397,
											"end": 1399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1395,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1400,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1415,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1526,
											"end": 1533,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1506,
											"end": 1515,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1502,
											"end": 1524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1481,
											"end": 1534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1534,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1481,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1427,
											"end": 1544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1609,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1652,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1609,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1609,
											"end": 1662,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1609,
											"end": 1662,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1609,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1662,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1679,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1685,
											"end": 1803,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1685,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1772,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1750,
											"end": 1803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1809,
											"end": 1998,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1809,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1925,
											"end": 1991,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 1991,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1925,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1998,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1998,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2374,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2004,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2226,
											"end": 2229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2167,
											"end": 2234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2167,
											"end": 2234,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2167,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2298,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 2260,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2258,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2338,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2360,
											"end": 2363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2356,
											"end": 2368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 2380,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2607,
											"end": 2609,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2602,
											"end": 2605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2543,
											"end": 2610,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2610,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2543,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F74206F6E206C697374000000000000000000000000000000000000000000"
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2620,
											"end": 2654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2526,
											"end": 2689,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2695,
											"end": 3060,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2695,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2695,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2917,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2858,
											"end": 2925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2858,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2989,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2953,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2935,
											"end": 2990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3016,
											"end": 3018,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3046,
											"end": 3049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 3060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3066,
											"end": 3396,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3066,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3293,
											"end": 3295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3288,
											"end": 3291,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3229,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3296,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3396,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3402,
											"end": 3719,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3402,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3629,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3624,
											"end": 3627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 3565,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "4661696C656420746F2073656E64206B6C617900000000000000000000000000"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3712,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3705,
											"end": 3708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3719,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3725,
											"end": 4022,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3725,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3725,
											"end": 4022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3905,
											"end": 3988,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3905,
											"end": 3988,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3905,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 4022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4028,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4133,
											"end": 4138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4115,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4152,
											"end": 4531,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4152,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4501,
											"end": 4504,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4358,
											"end": 4505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4358,
											"end": 4505,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4358,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4537,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4645,
											"end": 4671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4681,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4759,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4765,
											"end": 5097,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4765,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 5097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4926,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 4927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 5005,
											"end": 5006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4937,
											"end": 5008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4937,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 4937,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5086,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5075,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5068,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5018,
											"end": 5090,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5090,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 5018,
											"end": 5090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 5097,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5103,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5103,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5373,
											"end": 5374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5371,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5276,
											"end": 5376,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5276,
											"end": 5376,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 5276,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5383,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5383,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5389,
											"end": 5808,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 5389,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5389,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5652,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5628,
											"end": 5629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5630,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5670,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5670,
											"end": 5801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5670,
											"end": 5801,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 5670,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5808,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5808,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5814,
											"end": 6233,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5814,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5814,
											"end": 6233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6057,
											"end": 6077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6054,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6051,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6031,
											"end": 6078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6095,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6095,
											"end": 6226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6095,
											"end": 6226,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6095,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 6233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 6233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 6233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 6233,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6239,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6239,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6445,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6428,
											"end": 6446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6492,
											"end": 6501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6486,
											"end": 6490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6502,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6456,
											"end": 6503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 6520,
											"end": 6651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6520,
											"end": 6651,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6520,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6658,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6410,
											"end": 6658,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6664,
											"end": 7083,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6664,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 7083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6870,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6857,
											"end": 6866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6917,
											"end": 6926,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6881,
											"end": 6928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7071,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6945,
											"end": 7076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 7076,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6945,
											"end": 7076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6835,
											"end": 7083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7313,
											"end": 7330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7306,
											"end": 7353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7496,
											"end": 7500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7370,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7726,
											"end": 7727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7658,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7736,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7742,
											"end": 7889,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7742,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7889,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7895,
											"end": 8064,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 7895,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 8064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8013,
											"end": 8019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8008,
											"end": 8011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8001,
											"end": 8020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8044,
											"end": 8058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8064,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7991,
											"end": 8064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8070,
											"end": 8255,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8070,
											"end": 8255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8145,
											"end": 8146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8127,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8122,
											"end": 8147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8161,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8181,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8190,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8245,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8255,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8255,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8261,
											"end": 8609,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8261,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8342,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8319,
											"end": 8344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8319,
											"end": 8344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8474,
											"end": 8548,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8468,
											"end": 8549,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8449,
											"end": 8466,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8445,
											"end": 8550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8553,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8583,
											"end": 8603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8583,
											"end": 8603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8609,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8609,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8615,
											"end": 8711,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 8615,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8699,
											"end": 8704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8681,
											"end": 8705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8681,
											"end": 8705,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8681,
											"end": 8705,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8681,
											"end": 8705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8670,
											"end": 8705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8670,
											"end": 8705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8660,
											"end": 8711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8717,
											"end": 8843,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8717,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8717,
											"end": 8843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8794,
											"end": 8836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8787,
											"end": 8792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8772,
											"end": 8837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8762,
											"end": 8843,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8849,
											"end": 8926,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 8849,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8904,
											"end": 8920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8904,
											"end": 8920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8894,
											"end": 8926,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8932,
											"end": 9116,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8932,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8932,
											"end": 9116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9104,
											"end": 9109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9044,
											"end": 9110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9044,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 9044,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9021,
											"end": 9116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9122,
											"end": 9264,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9122,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9252,
											"end": 9257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9221,
											"end": 9258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9211,
											"end": 9264,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9270,
											"end": 9503,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9270,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9270,
											"end": 9503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9332,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9350,
											"end": 9355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9332,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9332,
											"end": 9356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9332,
											"end": 9356,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 9332,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9323,
											"end": 9356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9378,
											"end": 9444,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9371,
											"end": 9376,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9445,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 9365,
											"end": 9367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9495,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9488,
											"end": 9493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9484,
											"end": 9497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9477,
											"end": 9497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9477,
											"end": 9497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9313,
											"end": 9503,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9509,
											"end": 9689,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 9509,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9557,
											"end": 9634,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9547,
											"end": 9635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9658,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9651,
											"end": 9652,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9644,
											"end": 9659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9682,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9675,
											"end": 9676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9683,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9875,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9695,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9820,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9840,
											"end": 9844,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9830,
											"end": 9845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9861,
											"end": 9862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9881,
											"end": 10003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9972,
											"end": 9977,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 9954,
											"end": 9978,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9954,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 9954,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9979,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9934,
											"end": 9936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9934,
											"end": 9936,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9993,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9990,
											"end": 9991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9934,
											"end": 9936,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9934,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 10003,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9924,
											"end": 10003,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10009,
											"end": 10131,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10009,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10100,
											"end": 10105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 10082,
											"end": 10106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10082,
											"end": 10106,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10082,
											"end": 10106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10107,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10123,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10062,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_commodityPrices(uint256)": "432be4d0",
							"nft()": "47ccca02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBuyToken(uint256,uint256)": "3e56e6c3",
							"safeListToken(uint256,uint256)": "d3f50573",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uriTemplateId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uriTemplateId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_commodityPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721MintableAutoId\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"safeBuyToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_uriTemplateId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"safeListToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":\"VendingMachine\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol\":{\"keccak256\":\"0x7723f31464e917d3329be5d766939618fdcf54650ed035acb1801d99e88d1907\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c615e1c4324fee11dd8c6a7f24ff67fe07fed57b81368d0819baedd9e2f461f\",\"dweb:/ipfs/QmWgjnKLUZtgEvLNGo7hR2FP8VJ7QTtQgVEUGVurMeGiLL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 907,
								"contract": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721MintableAutoId)899"
							},
							{
								"astId": 909,
								"contract": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "treasury",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 913,
								"contract": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol:VendingMachine",
								"label": "_commodityPrices",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721MintableAutoId)899": {
								"encoding": "inplace",
								"label": "contract IERC721MintableAutoId",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol": {
				"ast": {
					"absolutePath": "atta-movies/ERC721/binance/ERC721VendingMachineAutoIdForKlay.sol",
					"exportedSymbols": {
						"Address": [
							662
						],
						"Context": [
							287
						],
						"IERC20": [
							469
						],
						"IERC721MintableAutoId": [
							899
						],
						"Math": [
							266
						],
						"Ownable": [
							393
						],
						"SafeERC20": [
							876
						],
						"SafeMath": [
							195
						],
						"VendingMachine": [
							1082
						]
					},
					"id": 1083,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "159:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "186:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1093:114:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "1104:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1120:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1104:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1145:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1148:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1132:46:0"
											},
											{
												"expression": {
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1198:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1191:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "787:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1050:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:0"
									},
									"scope": 195,
									"src": "1026:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1557:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1579:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1582:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1575:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1568:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1215:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:0"
									},
									"scope": 195,
									"src": "1490:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2024:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "2043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "2048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2051:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2035:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "2075:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:17:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "2105:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1634:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1942:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1964:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:50:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:9:0"
									},
									"scope": 195,
									"src": "1929:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2447:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2683:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2679:47:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2691:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2706:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "2738:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2738:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2786:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2766:56:0"
											},
											{
												"expression": {
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2835:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2129:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2404:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:9:0"
									},
									"scope": 195,
									"src": "2380:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3394:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3422:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3412:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3405:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2859:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3384:9:0"
									},
									"scope": 195,
									"src": "3327:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4050:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "4069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4076:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "4061:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4100:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4112:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "4116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4112:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4100:17:0"
											},
											{
												"expression": {
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4224:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4217:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3467:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3979:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3990:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:50:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4041:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4040:9:0"
									},
									"scope": 195,
									"src": "3955:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4765:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4787:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4793:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4783:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4776:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4241:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:9:0"
									},
									"scope": 195,
									"src": "4698:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5408:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5427:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5419:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5466:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5459:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4836:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5326:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5337:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5348:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:50:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:9:0"
									},
									"scope": 195,
									"src": "5313:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "763:4719:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "5536:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "5767:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5798:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5785:14:0",
													"trueExpression": {
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 212,
												"nodeType": "Return",
												"src": "5778:21:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5633:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5712:22:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:0"
									},
									"scope": 266,
									"src": "5700:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "5950:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5972:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "5980:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5968:13:0",
													"trueExpression": {
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5976:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 230,
												"nodeType": "Return",
												"src": "5961:20:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5815:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:9:0"
									},
									"scope": 266,
									"src": "5883:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "6179:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 242,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "6253:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6257:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6253:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 245,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 246,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "6263:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6263:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 249,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6252:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 251,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 235,
																					"src": "6274:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6278:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6274:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 254,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 237,
																					"src": "6282:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6286:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6282:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6274:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6291:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "6273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6272:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6252:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 263,
												"nodeType": "Return",
												"src": "6245:48:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "5997:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:9:0"
									},
									"scope": 266,
									"src": "6108:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "5613:691:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "6965:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6983:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6983:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 270,
												"id": 273,
												"nodeType": "Return",
												"src": "6976:17:0"
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6955:9:0"
									},
									"scope": 287,
									"src": "6903:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7074:168:0",
										"statements": [
											{
												"expression": {
													"id": 280,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "7085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$287",
														"typeString": "contract Context"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "7085:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7226:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7226:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 279,
												"id": 284,
												"nodeType": "Return",
												"src": "7219:15:0"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7026:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7060:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7059:14:0"
									},
									"scope": 287,
									"src": "7009:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1083,
							"src": "6870:375:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 287,
										"src": "7840:7:0"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "7840:7:0"
								}
							],
							"contractDependencies": [
								287
							],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "7304:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393,
								287
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 292,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "7855:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7855:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 298,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7913:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7944:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:57:0"
									},
									"src": "7886:84:0"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "8092:139:0",
										"statements": [
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "8103:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 302,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8103:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 304,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "8123:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8103:32:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "8146:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "8155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8146:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "8146:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8201:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8201:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8213:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8180:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8180:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "8175:48:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "7978:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 320,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8089:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8092:0:0"
									},
									"scope": 393,
									"src": "8077:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "8359:32:0",
										"statements": [
											{
												"expression": {
													"id": 326,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "8377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "8370:13:0"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "8239:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8326:2:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:0"
									},
									"scope": 393,
									"src": "8312:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "8505:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 333,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "8524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 334,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "8534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8534:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8524:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8548:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8516:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "8516:67:0"
											},
											{
												"id": 340,
												"nodeType": "PlaceholderStatement",
												"src": "8594:1:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8399:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 342,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8502:2:0"
									},
									"src": "8484:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9008:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 349,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9053:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9053:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9024:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9024:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "9019:45:0"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9075:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9084:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9084:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9075:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "9075:19:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "8611:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 346,
											"modifierName": {
												"id": 345,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "8998:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8998:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8980:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9008:0:0"
									},
									"scope": 393,
									"src": "8954:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "9327:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "9346:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9366:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9358:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9358:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9358:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9346:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9370:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9338:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "9338:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9448:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "9456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9427:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9427:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "9422:43:0"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9476:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 388,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "9485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9476:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "9476:17:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9110:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"modifierName": {
												"id": 369,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "9317:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9317:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "9284:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9283:18:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9327:0:0"
									},
									"scope": 393,
									"src": "9257:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1083,
							"src": "7811:1693:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "9567:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "9665:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9759:2:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "9785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9784:9:0"
									},
									"scope": 469,
									"src": "9739:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "9802:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9900:17:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9940:9:0"
									},
									"scope": 469,
									"src": "9882:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "9958:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10216:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10196:35:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10250:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10249:6:0"
									},
									"scope": 469,
									"src": "10179:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "10264:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10558:32:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10613:9:0"
									},
									"scope": 469,
									"src": "10540:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "10631:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11308:33:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11359:6:0"
									},
									"scope": 469,
									"src": "11292:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "11374:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11722:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11705:51:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11775:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11774:6:0"
									},
									"scope": 469,
									"src": "11684:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "11789:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 459,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11973:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11995:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:57:0"
									},
									"src": "11958:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "12038:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 468,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12210:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12233:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:63:0"
									},
									"src": "12195:78:0"
								}
							],
							"scope": 1083,
							"src": "9641:2635:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "12282:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "13029:356:0",
										"statements": [
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "13231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"nodeType": "VariableDeclarationStatement",
												"src": "13231:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13320:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13322:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13342:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "13330:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13330:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13322:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "13342:7:0",
														"valueSize": 1
													},
													{
														"declaration": 479,
														"isOffset": false,
														"isSlot": false,
														"src": "13322:4:0",
														"valueSize": 1
													}
												],
												"id": 481,
												"nodeType": "InlineAssembly",
												"src": "13311:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "13369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13369:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 477,
												"id": 485,
												"nodeType": "Return",
												"src": "13362:15:0"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "12376:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "12983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12982:17:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "13023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:6:0"
									},
									"scope": 662,
									"src": "12963:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "14391:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 498,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14418:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 496,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14410:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14410:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14410:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14410:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14443:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14402:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "14402:73:0"
											},
											{
												"assignments": [
													507,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "14567:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 506,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 514,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14617:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 508,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "14585:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14585:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14608:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14585:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14585:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14566:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "14639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14648:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14631:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "14631:78:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "13393:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14339:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14339:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14338:43:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14391:0:0"
									},
									"scope": 662,
									"src": "14320:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "15567:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "15596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "15604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15610:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 531,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															538,
															558
														],
														"referencedDeclaration": 558,
														"src": "15583:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15583:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 530,
												"id": 536,
												"nodeType": "Return",
												"src": "15576:67:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "14725:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15516:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15516:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15499:35:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15553:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15552:14:0"
									},
									"scope": 662,
									"src": "15478:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "15998:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "16039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "16047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "16056:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 550,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "16016:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16016:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 549,
												"id": 556,
												"nodeType": "Return",
												"src": "16009:60:0"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "15659:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15903:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15919:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15919:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15938:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15902:63:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15984:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15984:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15983:14:0"
									},
									"scope": 662,
									"src": "15881:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16565:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "16605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "16613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 573,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "16619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16626:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 570,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															611
														],
														"referencedDeclaration": 611,
														"src": "16583:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 576,
												"nodeType": "Return",
												"src": "16576:94:0"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "16085:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16499:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16499:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16482:50:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16551:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16551:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16550:14:0"
									},
									"scope": 662,
									"src": "16452:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "17075:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 595,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "17102:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 593,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17094:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17094:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "17094:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "17119:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17094:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17126:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17086:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "17086:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "17208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "17216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 606,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "17222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "17229:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 603,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "17185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17185:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 609,
												"nodeType": "Return",
												"src": "17178:64:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "16686:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16981:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17000:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17015:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16964:78:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17061:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17060:14:0"
									},
									"scope": 662,
									"src": "16934:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "17402:835:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 626,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "17432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 625,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "17421:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17421:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17441:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17413:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "17413:60:0"
											},
											{
												"assignments": [
													632,
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17547:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17547:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17561:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17561:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "17619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 635,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "17588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17588:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 637,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17608:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17588:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17588:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17546:78:0"
											},
											{
												"condition": {
													"id": 642,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "17639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "17698:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 646,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "17784:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17784:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17784:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 656,
																"nodeType": "Block",
																"src": "18164:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 653,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "18190:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 652,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18183:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18183:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "18183:20:0"
																	}
																]
															},
															"id": 657,
															"nodeType": "IfStatement",
															"src": "17780:439:0",
															"trueBody": {
																"id": 651,
																"nodeType": "Block",
																"src": "17807:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17995:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18018:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18047:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18041:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18041:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18022:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18091:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18095:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18087:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18087:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18108:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18080:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18080:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18080:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18047:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18095:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 650,
																		"nodeType": "InlineAssembly",
																		"src": "17986:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "17635:595:0",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "17648:44:0",
													"statements": [
														{
															"expression": {
																"id": 643,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "17670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 623,
															"id": 644,
															"nodeType": "Return",
															"src": "17663:17:0"
														}
													]
												}
											}
										]
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "weiValue",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17343:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17289:81:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17387:14:0"
									},
									"scope": 662,
									"src": "17258:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1083,
							"src": "12353:5887:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "18308:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 666,
									"libraryName": {
										"id": 664,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "18806:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18800:27:0",
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18819:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 669,
									"libraryName": {
										"id": 667,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "18839:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18833:26:0",
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18851:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "18939:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "18970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 683,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "19000:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 418,
																		"src": "19000:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19000:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 686,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "19025:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 687,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "19029:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 681,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18977:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18977:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18977:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 679,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "18950:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18950:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "18950:86:0"
											}
										]
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18889:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "18889:6:0"
													},
													"referencedDeclaration": 469,
													"src": "18889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18903:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18888:41:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18939:0:0"
									},
									"scope": 876,
									"src": "18867:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "19142:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "19173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "19203:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 450,
																		"src": "19203:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19203:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 711,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "19232:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "19238:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "19242:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19180:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19180:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19180:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "19153:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19153:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "19153:96:0"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19078:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19077:55:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19142:0:0"
									},
									"scope": 876,
									"src": "19052:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "19602:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "19896:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19905:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19896:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19895:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 738,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "19936:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 737,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19928:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 736,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19928:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 739,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19928:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 740,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "19943:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "19912:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$469",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "19912:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19912:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19955:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19912:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19911:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19895:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19972:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19887:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "19887:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "20070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 753,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "20100:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20100:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20100:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 756,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "20124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "20133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20077:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20077:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20050:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20050:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "20050:90:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "19265:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19547:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19547:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19578:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19546:46:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:0:0"
									},
									"scope": 876,
									"src": "19526:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "20242:200:0",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "20253:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "20320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 778,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20300:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20292:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 776,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20292:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20292:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 780,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 774,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "20276:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20276:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20276:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "20276:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20276:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20253:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "20357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 790,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "20387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20387:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20387:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 793,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 794,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "20420:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 788,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20364:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 786,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20337:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "20337:97:0"
											}
										]
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20187:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20186:46:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20242:0:0"
									},
									"scope": 876,
									"src": "20156:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "20536:245:0",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "20547:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "20614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20621:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 815,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20594:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 813,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20586:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20586:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 817,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20601:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 811,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "20570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20570:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20570:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "20570:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20570:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20547:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "20696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "20726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20726:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20726:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 831,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "20759:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 826,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20703:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20703:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20703:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20676:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20676:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "20676:97:0"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20481:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20480:46:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20536:0:0"
									},
									"scope": 876,
									"src": "20450:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "21242:691:0",
										"statements": [
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "21596:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "21650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21656:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 850,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "21630:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21622:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21622:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "21622:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21622:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21596:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 857,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "21706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21706:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21706:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "21702:224:0",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "21729:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 864,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "21848:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21861:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 865,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "21861:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 867,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21860:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 862,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "21837:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "21837:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21837:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21869:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 861,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21829:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "21829:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "20789:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21201:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 839,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "21201:6:0"
													},
													"referencedDeclaration": 469,
													"src": "21201:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21215:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21200:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21242:0:0"
									},
									"scope": 876,
									"src": "21172:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1083,
							"src": "18775:3161:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "IERC721MintableAutoId",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1c178087",
									"id": 881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_currentNextId",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22002:2:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "22028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22027:9:0"
									},
									"scope": 899,
									"src": "21979:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "22118:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "43253955",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchMint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "22215:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 883,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "22215:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 884,
													"nodeType": "ArrayTypeName",
													"src": "22215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "22239:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22214:48:0"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22271:0:0"
									},
									"scope": 899,
									"src": "22192:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "22280:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "a1448194",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22378:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22391:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22377:37:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22423:0:0"
									},
									"scope": 899,
									"src": "22360:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1083,
							"src": "21940:487:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 900,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "22460:7:0"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "22460:7:0"
								}
							],
							"contractDependencies": [
								287,
								393
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1082,
							"linearizedBaseContracts": [
								1082,
								393,
								287
							],
							"name": "VendingMachine",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 904,
									"libraryName": {
										"id": 902,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "22481:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22475:27:0",
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22494:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 907,
									"mutability": "mutable",
									"name": "nft",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22511:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
										"typeString": "contract IERC721MintableAutoId"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IERC721MintableAutoId",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 899,
											"src": "22511:21:0"
										},
										"referencedDeclaration": 899,
										"src": "22511:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
											"typeString": "contract IERC721MintableAutoId"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 909,
									"mutability": "mutable",
									"name": "treasury",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22552:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22552:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "432be4d0",
									"id": 913,
									"mutability": "mutable",
									"name": "_commodityPrices",
									"nodeType": "VariableDeclaration",
									"scope": 1082,
									"src": "22588:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 912,
										"keyType": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "22588:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 911,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22607:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 919,
									"name": "PriceUpdate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "22666:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "22697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22665:46:0"
									},
									"src": "22648:64:0"
								},
								{
									"anonymous": false,
									"id": 929,
									"name": "Buy",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22728:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22751:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22782:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "22807:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22727:94:0"
									},
									"src": "22718:104:0"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "22907:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 937,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "22926:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22949:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22941:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 938,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22941:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22941:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22926:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 943,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "22955:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 946,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "22978:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VendingMachine_$1082",
																				"typeString": "contract VendingMachine"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VendingMachine_$1082",
																				"typeString": "contract VendingMachine"
																			}
																		],
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22970:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 944,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22970:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22970:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22955:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22926:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 936,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22918:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "22918:66:0"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "22995:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
															"typeString": "contract IERC721MintableAutoId"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 954,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "23023:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 953,
															"name": "IERC721MintableAutoId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "23001:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721MintableAutoId_$899_$",
																"typeString": "type(contract IERC721MintableAutoId)"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23001:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
															"typeString": "contract IERC721MintableAutoId"
														}
													},
													"src": "22995:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
														"typeString": "contract IERC721MintableAutoId"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "22995:40:0"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 958,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "23046:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 959,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "23057:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23046:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "23046:20:0"
											}
										]
									},
									"id": 963,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "22852:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_treasury",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "22882:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22841:65:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22907:0:0"
									},
									"scope": 1082,
									"src": "22830:244:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "23155:112:0",
										"statements": [
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 970,
															"name": "_commodityPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "23166:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 972,
														"indexExpression": {
															"id": 971,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "23183:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23166:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "23201:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23166:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "23166:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 977,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "23236:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 978,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "23252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "PriceUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "23223:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23223:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "EmitStatement",
												"src": "23218:41:0"
											}
										]
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_listToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23106:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23106:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_price",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "23130:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23105:40:0"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23155:0:0"
									},
									"scope": 1082,
									"src": "23086:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "23359:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 992,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "23381:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 993,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "23397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 991,
														"name": "_listToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "23370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23370:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "23370:34:0"
											}
										]
									},
									"functionSelector": "d3f50573",
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 989,
											"modifierName": {
												"id": 988,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "23349:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23349:9:0"
										}
									],
									"name": "safeListToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "23302:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_price",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "23326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23301:40:0"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23359:0:0"
									},
									"scope": 1082,
									"src": "23279:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "23492:190:0",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "tokenId",
														"nodeType": "VariableDeclaration",
														"scope": 1026,
														"src": "23503:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1006,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "23521:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
																"typeString": "contract IERC721MintableAutoId"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_currentNextId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 881,
														"src": "23521:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23521:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23503:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1013,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "23565:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "23573:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1010,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "23552:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721MintableAutoId_$899",
																"typeString": "contract IERC721MintableAutoId"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "23552:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23552:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "23552:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1018,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "23608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "_uriTemplateId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "23616:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "23632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1021,
																"name": "_commodityPrices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "23641:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1023,
															"indexExpression": {
																"id": 1022,
																"name": "_uriTemplateId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "23658:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23641:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "23604:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23604:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "EmitStatement",
												"src": "23599:75:0"
											}
										]
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buyToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "_buyer",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "23443:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "23459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23442:40:0"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23492:0:0"
									},
									"scope": 1082,
									"src": "23424:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "23773:348:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1035,
																	"name": "_commodityPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "23792:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1037,
																"indexExpression": {
																	"id": 1036,
																	"name": "_uriTemplateId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "23809:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23792:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23825:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23792:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f6e206c697374",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23828:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															},
															"value": "Not on list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23784:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "23784:58:0"
											},
											{
												"body": {
													"id": 1059,
													"nodeType": "Block",
													"src": "23895:66:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1054,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 275,
																			"src": "23920:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23920:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1056,
																		"name": "_uriTemplateId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "23934:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1053,
																	"name": "_buyToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "23910:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23910:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "23910:39:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "23875:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "_quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "23879:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23875:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1060,
												"initializationExpression": {
													"assignments": [
														1044
													],
													"declarations": [
														{
															"constant": false,
															"id": 1044,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1060,
															"src": "23860:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1043,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "23860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1046,
													"initialValue": {
														"hexValue": "30",
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23872:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "23860:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "23890:3:0",
														"subExpression": {
															"id": 1050,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "23892:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1052,
													"nodeType": "ExpressionStatement",
													"src": "23890:3:0"
												},
												"nodeType": "ForStatement",
												"src": "23855:106:0"
											},
											{
												"assignments": [
													1062,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1080,
														"src": "23972:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1061,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "23972:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1074,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1063,
																"name": "treasury",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "23990:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "23990:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"arguments": [
																	{
																		"id": 1069,
																		"name": "_quantity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1031,
																		"src": "24048:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1065,
																			"name": "_commodityPrices",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "24011:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 1067,
																		"indexExpression": {
																			"id": 1066,
																			"name": "_uriTemplateId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "24028:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "24011:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 108,
																	"src": "24011:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24011:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "23990:69:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23990:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23971:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1076,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "24082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64206b6c6179",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24091:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
																"typeString": "literal_string \"Failed to send klay\""
															},
															"value": "Failed to send klay"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba1cb942a54c5cb6210bbf61ea3b13bf809a2d59c40ab02f54dd8183be3b418f",
																"typeString": "literal_string \"Failed to send klay\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24074:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "24074:39:0"
											}
										]
									},
									"functionSelector": "3e56e6c3",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBuyToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_uriTemplateId",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "23716:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_quantity",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "23740:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23715:43:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23773:0:0"
									},
									"scope": 1082,
									"src": "23694:427:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1083,
							"src": "22433:1695:0"
						}
					],
					"src": "159:23969:0"
				},
				"id": 0
			}
		}
	}
}