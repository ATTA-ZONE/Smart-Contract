{
	"id": "9617ec11061b5c9c2fc706b6b3b2ceda",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"atta-movies/ERC1155/ERC1155VendingMachine.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2021-02-11\r\n*/\r\n\r\n// File: @openzeppelin/contracts/math/SafeMath.sol\r\n\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction overflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/math/Math.sol\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/GSN/Context.sol\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/access/Ownable.sol\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor () {\r\n        address msgSender = _msgSender();\r\n        _owner = msgSender;\r\n        emit OwnershipTransferred(address(0), msgSender);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        emit OwnershipTransferred(_owner, address(0));\r\n        _owner = address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        emit OwnershipTransferred(_owner, newOwner);\r\n        _owner = newOwner;\r\n    }\r\n}\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies in extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\r\n        (bool success, ) = recipient.call{ value: amount }(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain`call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n      return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r\n        return _functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        return _functionCallWithValue(target, data, value, errorMessage);\r\n    }\r\n\r\n    function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        // solhint-disable-next-line avoid-low-level-calls\r\n        (bool success, bytes memory returndata) = target.call{ value: weiValue }(data);\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n// File: @openzeppelin/contracts/token/ERC20/SafeERC20.sol\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using SafeMath for uint256;\r\n    using Address for address;\r\n\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        // solhint-disable-next-line max-line-length\r\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) { // Return data is optional\r\n            // solhint-disable-next-line max-line-length\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n\r\ninterface IERC1155Mintable {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function safeBatchMint(address _to, uint256[] calldata _id, uint256[] calldata _quantities) external;\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function safeMint(address _to, uint256 _id, uint256 _quantities) external;\r\n}\r\n\r\n\r\ncontract VendingMachine is Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n \r\n    IERC1155Mintable public nft;\r\n    IERC20 public quoteErc20;\r\n\r\n    address public treasury;\r\n    \r\n    mapping(uint256 => uint256) public _commodityPrices;\r\n\r\n    event PriceUpdate(uint256 indexed tokenId, uint256 price);\r\n    event Buy(address indexed buyer, uint256 indexed tokenId, uint256 quantity, uint256 price);\r\n\r\n    constructor(\r\n        address _nftAddress,\r\n        address _quoteErc20Address,\r\n        address _treasury\r\n    ) {\r\n        require(_nftAddress != address(0) && _nftAddress != address(this));\r\n        require(_quoteErc20Address != address(0) && _quoteErc20Address != address(this));\r\n        nft = IERC1155Mintable(_nftAddress);\r\n        quoteErc20 = IERC20(_quoteErc20Address);\r\n        treasury = _treasury;\r\n    }\r\n    \r\n    function _listToken(uint256 _tokenId, uint256 _price) internal {\r\n        _commodityPrices[_tokenId] = _price;\r\n        emit PriceUpdate( _tokenId, _price);\r\n    }\r\n    \r\n    function safeListToken(uint256 _tokenId, uint256 _price) public onlyOwner {\r\n        _listToken(_tokenId, _price);\r\n    }\r\n    \r\n    function _buyToken(address _buyer, uint256 _tokenId, uint256 _quantity) internal {\r\n        nft.safeMint(_buyer, _tokenId, _quantity);\r\n        quoteErc20.safeTransferFrom(_buyer, treasury, _commodityPrices[_tokenId].mul(_quantity));\r\n        \r\n        emit Buy(_buyer, _tokenId, _quantity, _commodityPrices[_tokenId]);\r\n    }\r\n    \r\n    function safeBuyToken(uint256 _tokenId, uint256 _quantity) public {\r\n        require(_commodityPrices[_tokenId]>0, \"Not on list\");\r\n        _buyToken(_msgSender(), _tokenId, _quantity);\r\n    }\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"atta-movies/ERC1155/ERC1155VendingMachine.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":12353:18240  library Address {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":12353:18240  library Address {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208c9afe8c2a497ab3b20f2c2bf70ec6a3243261bc6fdca3e801b6d29753b19a4264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c9afe8c2a497ab3b20f2c2bf70ec6a3243261bc6fdca3e801b6d29753b19a4264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP11 INVALID DUP13 0x2A 0x49 PUSH27 0xB3B20F2C2BF70EC6A3243261BC6FDCA3E801B6D29753B19A426473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208c9afe8c2a497ab3b20f2c2bf70ec6a3243261bc6fdca3e801b6d29753b19a4264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 SWAP11 INVALID DUP13 0x2A 0x49 PUSH27 0xB3B20F2C2BF70EC6A3243261BC6FDCA3E801B6D29753B19A426473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "12353:5887:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12353,
									"end": 18240,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c9afe8c2a497ab3b20f2c2bf70ec6a3243261bc6fdca3e801b6d29753b19a4264736f6c63430008070033",
									".code": [
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12353,
											"end": 18240,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Mintable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_id",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_quantities",
									"type": "uint256[]"
								}
							],
							"name": "safeBatchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_quantities",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"safeBatchMint(address,uint256[],uint256[])": {
								"details": "Returns the amount of tokens in existence."
							},
							"safeMint(address,uint256,uint256)": {
								"details": "Returns the amount of tokens owned by `account`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeBatchMint(address,uint256[],uint256[])": "509c191d",
							"safeMint(address,uint256,uint256)": "24eeedf6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_id\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_quantities\",\"type\":\"uint256[]\"}],\"name\":\"safeBatchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantities\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"safeBatchMint(address,uint256[],uint256[])\":{\"details\":\"Returns the amount of tokens in existence.\"},\"safeMint(address,uint256,uint256)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"IERC1155Mintable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":5613:6304  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":5613:6304  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a58999de18f701dc800521133afd48abfd9c942a632c0ea9c447d27876c7441764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a58999de18f701dc800521133afd48abfd9c942a632c0ea9c447d27876c7441764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP10 SWAP10 0xDE XOR 0xF7 ADD 0xDC DUP1 SDIV 0x21 SGT GASPRICE REVERT BASEFEE 0xAB REVERT SWAP13 SWAP5 0x2A PUSH4 0x2C0EA9C4 SELFBALANCE 0xD2 PUSH25 0x76C7441764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a58999de18f701dc800521133afd48abfd9c942a632c0ea9c447d27876c7441764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 DUP10 SWAP10 0xDE XOR 0xF7 ADD 0xDC DUP1 SDIV 0x21 SGT GASPRICE REVERT BASEFEE 0xAB REVERT SWAP13 SWAP5 0x2A PUSH4 0x2C0EA9C4 SELFBALANCE 0xD2 PUSH25 0x76C7441764736F6C6343000807003300000000000000000000 ",
							"sourceMap": "5613:691:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5613,
									"end": 6304,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a58999de18f701dc800521133afd48abfd9c942a632c0ea9c447d27876c7441764736f6c63430008070033",
									".code": [
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5613,
											"end": 6304,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18775:21936  library SafeERC20 {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18775:21936  library SafeERC20 {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c1b5756775f25717a9f0fe87df2f00bed6d91ae5abfa58504acc435c7085a9a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c1b5756775f25717a9f0fe87df2f00bed6d91ae5abfa58504acc435c7085a9a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SHL JUMPI JUMP PUSH24 0x5F25717A9F0FE87DF2F00BED6D91AE5ABFA58504ACC435C7 ADDMOD GAS SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c1b5756775f25717a9f0fe87df2f00bed6d91ae5abfa58504acc435c7085a9a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SHL JUMPI JUMP PUSH24 0x5F25717A9F0FE87DF2F00BED6D91AE5ABFA58504ACC435C7 ADDMOD GAS SWAP11 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "18775:3161:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18775,
									"end": 21936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c1b5756775f25717a9f0fe87df2f00bed6d91ae5abfa58504acc435c7085a9a64736f6c63430008070033",
									".code": [
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18775,
											"end": 21936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":763:5482  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":763:5482  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220373f90a5754a60f28c5e200fe2a0f6038aab5ae6418d7496ee467676aeb9e5b264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220373f90a5754a60f28c5e200fe2a0f6038aab5ae6418d7496ee467676aeb9e5b264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODEHASH SWAP1 0xA5 PUSH22 0x4A60F28C5E200FE2A0F6038AAB5AE6418D7496EE4676 PUSH23 0xAEB9E5B264736F6C634300080700330000000000000000 ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220373f90a5754a60f28c5e200fe2a0f6038aab5ae6418d7496ee467676aeb9e5b264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY EXTCODEHASH SWAP1 0xA5 PUSH22 0x4A60F28C5E200FE2A0F6038AAB5AE6418D7496EE4676 PUSH23 0xAEB9E5B264736F6C634300080700330000000000000000 ",
							"sourceMap": "763:4719:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 763,
									"end": 5482,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220373f90a5754a60f28c5e200fe2a0f6038aab5ae6418d7496ee467676aeb9e5b264736f6c63430008070033",
									".code": [
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 5482,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VendingMachine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_quoteErc20Address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "PriceUpdate",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_commodityPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC1155Mintable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quoteErc20",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_quantity",
									"type": "uint256"
								}
							],
							"name": "safeBuyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "safeListToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22320:24033  contract VendingMachine is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22757:23174  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8103:8120  address msgSender */\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8123:8135  _msgSender() */\n  tag_7\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8123:8133  _msgSender */\n  shl(0x20, tag_8)\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8123:8135  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8103:8135  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8155:8164  msgSender */\n  dup1\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8146:8152  _owner */\n  0x00\n  dup1\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8146:8164  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8213:8222  msgSender */\n  dup1\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8209:8210  0 */\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8180:8223  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8092:8231  {\r... */\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22913:22914  0 */\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22890:22915  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22890:22901  _nftAddress */\n  dup4\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22890:22915  _nftAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22890:22947  _nftAddress != address(0) && _nftAddress != address(this) */\n  dup1\n  iszero\n  tag_10\n  jumpi\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22942:22946  this */\n  address\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22919:22947  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22919:22930  _nftAddress */\n  dup4\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22919:22947  _nftAddress != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22890:22947  _nftAddress != address(0) && _nftAddress != address(this) */\ntag_10:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22882:22948  require(_nftAddress != address(0) && _nftAddress != address(this)) */\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22997:22998  0 */\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22967:22999  _quoteErc20Address != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22967:22985  _quoteErc20Address */\n  dup3\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22967:22999  _quoteErc20Address != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22967:23038  _quoteErc20Address != address(0) && _quoteErc20Address != address(this) */\n  dup1\n  iszero\n  tag_12\n  jumpi\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23033:23037  this */\n  address\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23003:23038  _quoteErc20Address != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23003:23021  _quoteErc20Address */\n  dup3\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23003:23038  _quoteErc20Address != address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22967:23038  _quoteErc20Address != address(0) && _quoteErc20Address != address(this) */\ntag_12:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22959:23039  require(_quoteErc20Address != address(0) && _quoteErc20Address != address(this)) */\n  tag_13\n  jumpi\n  0x00\n  dup1\n  revert\ntag_13:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23073:23084  _nftAddress */\n  dup3\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23050:23053  nft */\n  0x01\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23050:23085  nft = IERC1155Mintable(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23116:23134  _quoteErc20Address */\n  dup2\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23096:23106  quoteErc20 */\n  0x02\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23096:23135  quoteErc20 = IERC20(_quoteErc20Address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23157:23166  _treasury */\n  dup1\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23146:23154  treasury */\n  0x03\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23146:23166  treasury = _treasury */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22757:23174  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22320:24033  contract VendingMachine is Ownable {\r... */\n  jump(tag_14)\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\ntag_8:\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6956:6963  address */\n  0x00\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6983:6993  msg.sender */\n  caller\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6976:6993  return msg.sender */\n  swap1\n  pop\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_17:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_19\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:819   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:396   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":315:394   */\n  tag_23\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":277:396   */\ntag_22:\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":460:524   */\n  tag_25\n    /* \"#utility.yul\":516:523   */\n  dup7\n    /* \"#utility.yul\":507:513   */\n  dup3\n    /* \"#utility.yul\":496:505   */\n  dup8\n    /* \"#utility.yul\":492:514   */\n  add\n    /* \"#utility.yul\":460:524   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":450:524   */\n  swap4\n  pop\n    /* \"#utility.yul\":406:534   */\n  pop\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":599:663   */\n  tag_26\n    /* \"#utility.yul\":655:662   */\n  dup7\n    /* \"#utility.yul\":646:652   */\n  dup3\n    /* \"#utility.yul\":635:644   */\n  dup8\n    /* \"#utility.yul\":631:653   */\n  add\n    /* \"#utility.yul\":599:663   */\n  tag_17\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":589:663   */\n  swap3\n  pop\n    /* \"#utility.yul\":544:673   */\n  pop\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":738:802   */\n  tag_27\n    /* \"#utility.yul\":794:801   */\n  dup7\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":774:783   */\n  dup8\n    /* \"#utility.yul\":770:792   */\n  add\n    /* \"#utility.yul\":738:802   */\n  tag_17\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":728:802   */\n  swap2\n  pop\n    /* \"#utility.yul\":683:812   */\n  pop\n    /* \"#utility.yul\":156:819   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":906:1002   */\ntag_30:\n    /* \"#utility.yul\":943:950   */\n  0x00\n    /* \"#utility.yul\":972:996   */\n  tag_32\n    /* \"#utility.yul\":990:995   */\n  dup3\n    /* \"#utility.yul\":972:996   */\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":961:996   */\n  swap1\n  pop\n    /* \"#utility.yul\":906:1002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1008:1134   */\ntag_33:\n    /* \"#utility.yul\":1045:1052   */\n  0x00\n    /* \"#utility.yul\":1085:1127   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1078:1083   */\n  dup3\n    /* \"#utility.yul\":1074:1128   */\n  and\n    /* \"#utility.yul\":1063:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1008:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1263:1380   */\ntag_24:\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1386:1508   */\ntag_20:\n    /* \"#utility.yul\":1459:1483   */\n  tag_39\n    /* \"#utility.yul\":1477:1482   */\n  dup2\n    /* \"#utility.yul\":1459:1483   */\n  tag_30\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1452:1457   */\n  dup2\n    /* \"#utility.yul\":1449:1484   */\n  eq\n    /* \"#utility.yul\":1439:1502   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1495:1496   */\n  dup1\n    /* \"#utility.yul\":1488:1500   */\n  revert\n    /* \"#utility.yul\":1439:1502   */\ntag_40:\n    /* \"#utility.yul\":1386:1508   */\n  pop\n  jump\t// out\n    /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22320:24033  contract VendingMachine is Ownable {\r... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22320:24033  contract VendingMachine is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x61d027b3\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd3f50573\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x170d542c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e56e6c3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x432be4d0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22465:22489  IERC20 public quoteErc20 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23832:24024  function safeBuyToken(uint256 _tokenId, uint256 _quantity) public {\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22534:22585  mapping(uint256 => uint256) public _commodityPrices */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22431:22458  IERC1155Mintable public nft */\n    tag_6:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22498:22521  address public treasury */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23361:23482  function safeListToken(uint256 _tokenId, uint256 _price) public onlyOwner {\r... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22465:22489  IERC20 public quoteErc20 */\n    tag_14:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23832:24024  function safeBuyToken(uint256 _tokenId, uint256 _quantity) public {\r... */\n    tag_20:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23944:23945  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23917:23933  _commodityPrices */\n      0x04\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23917:23943  _commodityPrices[_tokenId] */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23934:23942  _tokenId */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23917:23943  _commodityPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23917:23945  _commodityPrices[_tokenId]>0 */\n      gt\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23909:23961  require(_commodityPrices[_tokenId]>0, \"Not on list\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23972:24016  _buyToken(_msgSender(), _tokenId, _quantity) */\n      tag_51\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23982:23994  _msgSender() */\n      tag_52\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23982:23992  _msgSender */\n      tag_53\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23982:23994  _msgSender() */\n      jump\t// in\n    tag_52:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23996:24004  _tokenId */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":24006:24015  _quantity */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23972:23981  _buyToken */\n      tag_54\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23972:24016  _buyToken(_msgSender(), _tokenId, _quantity) */\n      jump\t// in\n    tag_51:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23832:24024  function safeBuyToken(uint256 _tokenId, uint256 _quantity) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22534:22585  mapping(uint256 => uint256) public _commodityPrices */\n    tag_24:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22431:22458  IERC1155Mintable public nft */\n    tag_28:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":22498:22521  address public treasury */\n    tag_32:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n    tag_36:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      tag_56\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8544  _msgSender */\n      tag_53\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9061:9062  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9045:9051  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9024:9064  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9092:9093  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9075:9081  _owner */\n      dup1\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9075:9094  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8954:9102  function renounceOwnership() public virtual onlyOwner {\r... */\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8312:8391  function owner() public view returns (address) {\r... */\n    tag_38:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8350:8357  address */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8377:8383  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8370:8383  return _owner */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8312:8391  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23361:23482  function safeListToken(uint256 _tokenId, uint256 _price) public onlyOwner {\r... */\n    tag_42:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      tag_63\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8544  _msgSender */\n      tag_53\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_63:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_59\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23446:23474  _listToken(_tokenId, _price) */\n      tag_67\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23457:23465  _tokenId */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23467:23473  _price */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23446:23456  _listToken */\n      tag_68\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23446:23474  _listToken(_tokenId, _price) */\n      jump\t// in\n    tag_67:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23361:23482  function safeListToken(uint256 _tokenId, uint256 _price) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n    tag_46:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      tag_70\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8544  _msgSender */\n      tag_53\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8534:8546  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8530  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8524:8546  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":8516:8583  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_59\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9366:9367  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9346:9354  newOwner */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9346:9368  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9338:9411  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9456:9464  newOwner */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9448:9454  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9427:9465  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9485:9493  newOwner */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9476:9482  _owner */\n      0x00\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9476:9493  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":9257:9501  function transferOwnership(address newOwner) public virtual onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_53:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6956:6963  address */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6983:6993  msg.sender */\n      caller\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6976:6993  return msg.sender */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":6903:7001  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23494:23820  function _buyToken(address _buyer, uint256 _tokenId, uint256 _quantity) internal {\r... */\n    tag_54:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23586:23589  nft */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23586:23598  nft.safeMint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24eeedf6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23599:23605  _buyer */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23607:23615  _tokenId */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23617:23626  _quantity */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23586:23627  nft.safeMint(_buyer, _tokenId, _quantity) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23638:23726  quoteErc20.safeTransferFrom(_buyer, treasury, _commodityPrices[_tokenId].mul(_quantity)) */\n      tag_84\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23666:23672  _buyer */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23674:23682  treasury */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23725  _commodityPrices[_tokenId].mul(_quantity) */\n      tag_85\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23715:23724  _quantity */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23700  _commodityPrices */\n      0x04\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23710  _commodityPrices[_tokenId] */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23701:23709  _tokenId */\n      dup9\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23710  _commodityPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23714  _commodityPrices[_tokenId].mul */\n      tag_86\n      swap1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23684:23725  _commodityPrices[_tokenId].mul(_quantity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23638:23648  quoteErc20 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23638:23665  quoteErc20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_87\n      swap1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23638:23726  quoteErc20.safeTransferFrom(_buyer, treasury, _commodityPrices[_tokenId].mul(_quantity)) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_84:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23764:23772  _tokenId */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23756:23762  _buyer */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23752:23812  Buy(_buyer, _tokenId, _quantity, _commodityPrices[_tokenId]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23774:23783  _quantity */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23785:23801  _commodityPrices */\n      0x04\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23785:23811  _commodityPrices[_tokenId] */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23802:23810  _tokenId */\n      dup8\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23785:23811  _commodityPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23752:23812  Buy(_buyer, _tokenId, _quantity, _commodityPrices[_tokenId]) */\n      mload(0x40)\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23494:23820  function _buyToken(address _buyer, uint256 _tokenId, uint256 _quantity) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23186:23349  function _listToken(uint256 _tokenId, uint256 _price) internal {\r... */\n    tag_68:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23289:23295  _price */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23260:23276  _commodityPrices */\n      0x04\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23260:23286  _commodityPrices[_tokenId] */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23277:23285  _tokenId */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23260:23286  _commodityPrices[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23260:23295  _commodityPrices[_tokenId] = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23324:23332  _tokenId */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23311:23341  PriceUpdate( _tokenId, _price) */\n      0x92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23334:23340  _price */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23311:23341  PriceUpdate( _tokenId, _price) */\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":23186:23349  function _listToken(uint256 _tokenId, uint256 _price) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_86:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2438:2445  uint256 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2688:2689  0 */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2683:2684  a */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2683:2689  a == 0 */\n      eq\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2679:2726  if (a == 0) {\r... */\n      iszero\n      tag_93\n      jumpi\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2713:2714  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2706:2714  return 0 */\n      swap1\n      pop\n      jump(tag_92)\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2679:2726  if (a == 0) {\r... */\n    tag_93:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2738:2747  uint256 c */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2754:2755  b */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2750:2751  a */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2750:2755  a * b */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2738:2755  uint256 c = a * b */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2783:2784  b */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2778:2779  a */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2774:2775  c */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2774:2779  c / a */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2774:2784  c / a == b */\n      eq\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2766:2822  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2842:2843  c */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2835:2843  return c */\n      swap2\n      pop\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":2380:2851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_92:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19052:19257  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n    tag_87:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19153:19249  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_102\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19173:19178  token */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19203:19230  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19232:19236  from */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19238:19240  to */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19242:19247  value */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19180:19248  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_103\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19153:19172  _callOptionalReturn */\n      tag_105\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19153:19249  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_102:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":19052:19257  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21172:21933  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n    tag_105:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21596:21619  bytes memory returndata */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21622:21691  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_107\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21650:21654  data */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21622:21691  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21630:21635  token */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21622:21649  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_108\n      swap1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21622:21691  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21596:21691  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21726:21727  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21706:21716  returndata */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21706:21723  returndata.length */\n      mload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21706:21727  returndata.length > 0 */\n      gt\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21702:21926  if (returndata.length > 0) { // Return data is optional\r... */\n      iszero\n      tag_109\n      jumpi\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21848:21858  returndata */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21837:21867  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21829:21914  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21702:21926  if (returndata.length > 0) { // Return data is optional\r... */\n    tag_109:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21242:21933  {\r... */\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":21172:21933  function _callOptionalReturn(IERC20 token, bytes memory data) private {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":15881:16077  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n    tag_108:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":15984:15996  bytes memory */\n      0x60\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16016:16069  _functionCallWithValue(target, data, 0, errorMessage) */\n      tag_116\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16039:16045  target */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16047:16051  data */\n      dup5\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16053:16054  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16056:16068  errorMessage */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16016:16038  _functionCallWithValue */\n      tag_117\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16016:16069  _functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_116:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":16009:16069  return _functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":15881:16077  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17258:18237  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_117:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17388:17400  bytes memory */\n      0x60\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17421:17439  isContract(target) */\n      tag_119\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17432:17438  target */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17421:17431  isContract */\n      tag_120\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17421:17439  isContract(target) */\n      jump\t// in\n    tag_119:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17413:17473  require(isContract(target), \"Address: call to non-contract\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17547:17559  bool success */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17561:17584  bytes memory returndata */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17588:17594  target */\n      dup7\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17588:17599  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17608:17616  weiValue */\n      dup6\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17619:17623  data */\n      dup8\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17588:17624  target.call{ value: weiValue }(data) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_128\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_127)\n    tag_128:\n      0x60\n      swap2\n      pop\n    tag_127:\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17546:17624  (bool success, bytes memory returndata) = target.call{ value: weiValue }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17639:17646  success */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17635:18230  if (success) {\r... */\n      iszero\n      tag_129\n      jumpi\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17670:17680  returndata */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17663:17680  return returndata */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_118)\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17635:18230  if (success) {\r... */\n    tag_129:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17804:17805  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17784:17794  returndata */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17784:17801  returndata.length */\n      mload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17784:17805  returndata.length > 0 */\n      gt\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17780:18219  if (returndata.length > 0) {\r... */\n      iszero\n      tag_131\n      jumpi\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18047:18057  returndata */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18041:18058  mload(returndata) */\n      mload\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18108:18123  returndata_size */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18095:18105  returndata */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18091:18093  32 */\n      0x20\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18087:18106  add(32, returndata) */\n      add\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18080:18124  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17780:18219  if (returndata.length > 0) {\r... */\n    tag_131:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18190:18202  errorMessage */\n      dup4\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":18183:18203  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":17258:18237  function _functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage) private returns (bytes memory) {\r... */\n    tag_118:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":12963:13385  function isContract(address account) internal view returns (bool) {\r... */\n    tag_120:\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13023:13027  bool */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13231:13243  uint256 size */\n      dup1\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13342:13349  account */\n      dup3\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13330:13350  extcodesize(account) */\n      extcodesize\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13322:13350  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13376:13377  0 */\n      0x00\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13369:13373  size */\n      dup2\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13369:13377  size > 0 */\n      gt\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":13362:13377  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"atta-movies/ERC1155/ERC1155VendingMachine.sol\":12963:13385  function isContract(address account) internal view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_137:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_139\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_141:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_143\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_145:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_147\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_45:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":516:635   */\n    tag_150:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_153\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1120   */\n    tag_111:\n        /* \"#utility.yul\":842:848   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x20\n        /* \"#utility.yul\":879:888   */\n      dup3\n        /* \"#utility.yul\":870:877   */\n      dup5\n        /* \"#utility.yul\":866:889   */\n      sub\n        /* \"#utility.yul\":862:894   */\n      slt\n        /* \"#utility.yul\":859:978   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":897:976   */\n      tag_156\n      tag_152\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":859:978   */\n    tag_155:\n        /* \"#utility.yul\":1017:1018   */\n      0x00\n        /* \"#utility.yul\":1042:1103   */\n      tag_157\n        /* \"#utility.yul\":1095:1102   */\n      dup5\n        /* \"#utility.yul\":1086:1092   */\n      dup3\n        /* \"#utility.yul\":1075:1084   */\n      dup6\n        /* \"#utility.yul\":1071:1093   */\n      add\n        /* \"#utility.yul\":1042:1103   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1032:1103   */\n      swap2\n      pop\n        /* \"#utility.yul\":988:1113   */\n      pop\n        /* \"#utility.yul\":775:1120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1455   */\n    tag_23:\n        /* \"#utility.yul\":1185:1191   */\n      0x00\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1222:1231   */\n      dup3\n        /* \"#utility.yul\":1213:1220   */\n      dup5\n        /* \"#utility.yul\":1209:1232   */\n      sub\n        /* \"#utility.yul\":1205:1237   */\n      slt\n        /* \"#utility.yul\":1202:1321   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1240:1319   */\n      tag_160\n      tag_152\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1202:1321   */\n    tag_159:\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1385:1438   */\n      tag_161\n        /* \"#utility.yul\":1430:1437   */\n      dup5\n        /* \"#utility.yul\":1421:1427   */\n      dup3\n        /* \"#utility.yul\":1410:1419   */\n      dup6\n        /* \"#utility.yul\":1406:1428   */\n      add\n        /* \"#utility.yul\":1385:1438   */\n      tag_145\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1375:1438   */\n      swap2\n      pop\n        /* \"#utility.yul\":1331:1448   */\n      pop\n        /* \"#utility.yul\":1126:1455   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1461:1935   */\n    tag_19:\n        /* \"#utility.yul\":1529:1535   */\n      0x00\n        /* \"#utility.yul\":1537:1543   */\n      dup1\n        /* \"#utility.yul\":1586:1588   */\n      0x40\n        /* \"#utility.yul\":1574:1583   */\n      dup4\n        /* \"#utility.yul\":1565:1572   */\n      dup6\n        /* \"#utility.yul\":1561:1584   */\n      sub\n        /* \"#utility.yul\":1557:1589   */\n      slt\n        /* \"#utility.yul\":1554:1673   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1592:1671   */\n      tag_164\n      tag_152\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1554:1673   */\n    tag_163:\n        /* \"#utility.yul\":1712:1713   */\n      0x00\n        /* \"#utility.yul\":1737:1790   */\n      tag_165\n        /* \"#utility.yul\":1782:1789   */\n      dup6\n        /* \"#utility.yul\":1773:1779   */\n      dup3\n        /* \"#utility.yul\":1762:1771   */\n      dup7\n        /* \"#utility.yul\":1758:1780   */\n      add\n        /* \"#utility.yul\":1737:1790   */\n      tag_145\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1727:1790   */\n      swap3\n      pop\n        /* \"#utility.yul\":1683:1800   */\n      pop\n        /* \"#utility.yul\":1839:1841   */\n      0x20\n        /* \"#utility.yul\":1865:1918   */\n      tag_166\n        /* \"#utility.yul\":1910:1917   */\n      dup6\n        /* \"#utility.yul\":1901:1907   */\n      dup3\n        /* \"#utility.yul\":1890:1899   */\n      dup7\n        /* \"#utility.yul\":1886:1908   */\n      add\n        /* \"#utility.yul\":1865:1918   */\n      tag_145\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1855:1918   */\n      swap2\n      pop\n        /* \"#utility.yul\":1810:1928   */\n      pop\n        /* \"#utility.yul\":1461:1935   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2059   */\n    tag_167:\n        /* \"#utility.yul\":2028:2052   */\n      tag_169\n        /* \"#utility.yul\":2046:2051   */\n      dup2\n        /* \"#utility.yul\":2028:2052   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2023:2026   */\n      dup3\n        /* \"#utility.yul\":2016:2053   */\n      mstore\n        /* \"#utility.yul\":1941:2059   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2065:2438   */\n    tag_171:\n        /* \"#utility.yul\":2169:2172   */\n      0x00\n        /* \"#utility.yul\":2197:2235   */\n      tag_173\n        /* \"#utility.yul\":2229:2234   */\n      dup3\n        /* \"#utility.yul\":2197:2235   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2251:2339   */\n      tag_175\n        /* \"#utility.yul\":2332:2338   */\n      dup2\n        /* \"#utility.yul\":2327:2330   */\n      dup6\n        /* \"#utility.yul\":2251:2339   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2244:2339   */\n      swap4\n      pop\n        /* \"#utility.yul\":2348:2400   */\n      tag_177\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2381:2385   */\n      0x20\n        /* \"#utility.yul\":2374:2379   */\n      dup7\n        /* \"#utility.yul\":2370:2386   */\n      add\n        /* \"#utility.yul\":2348:2400   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2425:2431   */\n      dup1\n        /* \"#utility.yul\":2420:2423   */\n      dup5\n        /* \"#utility.yul\":2416:2432   */\n      add\n        /* \"#utility.yul\":2409:2432   */\n      swap2\n      pop\n        /* \"#utility.yul\":2173:2438   */\n      pop\n        /* \"#utility.yul\":2065:2438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2444:2623   */\n    tag_179:\n        /* \"#utility.yul\":2555:2616   */\n      tag_181\n        /* \"#utility.yul\":2610:2615   */\n      dup2\n        /* \"#utility.yul\":2555:2616   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2550:2553   */\n      dup3\n        /* \"#utility.yul\":2543:2617   */\n      mstore\n        /* \"#utility.yul\":2444:2623   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2629:2788   */\n    tag_183:\n        /* \"#utility.yul\":2730:2781   */\n      tag_185\n        /* \"#utility.yul\":2775:2780   */\n      dup2\n        /* \"#utility.yul\":2730:2781   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2725:2728   */\n      dup3\n        /* \"#utility.yul\":2718:2782   */\n      mstore\n        /* \"#utility.yul\":2629:2788   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:3158   */\n    tag_187:\n        /* \"#utility.yul\":2882:2885   */\n      0x00\n        /* \"#utility.yul\":2910:2949   */\n      tag_189\n        /* \"#utility.yul\":2943:2948   */\n      dup3\n        /* \"#utility.yul\":2910:2949   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2965:3036   */\n      tag_191\n        /* \"#utility.yul\":3029:3035   */\n      dup2\n        /* \"#utility.yul\":3024:3027   */\n      dup6\n        /* \"#utility.yul\":2965:3036   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2958:3036   */\n      swap4\n      pop\n        /* \"#utility.yul\":3045:3097   */\n      tag_193\n        /* \"#utility.yul\":3090:3096   */\n      dup2\n        /* \"#utility.yul\":3085:3088   */\n      dup6\n        /* \"#utility.yul\":3078:3082   */\n      0x20\n        /* \"#utility.yul\":3071:3076   */\n      dup7\n        /* \"#utility.yul\":3067:3083   */\n      add\n        /* \"#utility.yul\":3045:3097   */\n      tag_178\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3122:3151   */\n      tag_194\n        /* \"#utility.yul\":3144:3150   */\n      dup2\n        /* \"#utility.yul\":3122:3151   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3117:3120   */\n      dup5\n        /* \"#utility.yul\":3113:3152   */\n      add\n        /* \"#utility.yul\":3106:3152   */\n      swap2\n      pop\n        /* \"#utility.yul\":2886:3158   */\n      pop\n        /* \"#utility.yul\":2794:3158   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3164:3530   */\n    tag_196:\n        /* \"#utility.yul\":3306:3309   */\n      0x00\n        /* \"#utility.yul\":3327:3394   */\n      tag_198\n        /* \"#utility.yul\":3391:3393   */\n      0x26\n        /* \"#utility.yul\":3386:3389   */\n      dup4\n        /* \"#utility.yul\":3327:3394   */\n      tag_192\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3320:3394   */\n      swap2\n      pop\n        /* \"#utility.yul\":3403:3496   */\n      tag_199\n        /* \"#utility.yul\":3492:3495   */\n      dup3\n        /* \"#utility.yul\":3403:3496   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3521:3523   */\n      0x40\n        /* \"#utility.yul\":3516:3519   */\n      dup3\n        /* \"#utility.yul\":3512:3524   */\n      add\n        /* \"#utility.yul\":3505:3524   */\n      swap1\n      pop\n        /* \"#utility.yul\":3164:3530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3536:3902   */\n    tag_201:\n        /* \"#utility.yul\":3678:3681   */\n      0x00\n        /* \"#utility.yul\":3699:3766   */\n      tag_203\n        /* \"#utility.yul\":3763:3765   */\n      0x0b\n        /* \"#utility.yul\":3758:3761   */\n      dup4\n        /* \"#utility.yul\":3699:3766   */\n      tag_192\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3692:3766   */\n      swap2\n      pop\n        /* \"#utility.yul\":3775:3868   */\n      tag_204\n        /* \"#utility.yul\":3864:3867   */\n      dup3\n        /* \"#utility.yul\":3775:3868   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3893:3895   */\n      0x20\n        /* \"#utility.yul\":3888:3891   */\n      dup3\n        /* \"#utility.yul\":3884:3896   */\n      add\n        /* \"#utility.yul\":3877:3896   */\n      swap1\n      pop\n        /* \"#utility.yul\":3536:3902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4274   */\n    tag_206:\n        /* \"#utility.yul\":4050:4053   */\n      0x00\n        /* \"#utility.yul\":4071:4138   */\n      tag_208\n        /* \"#utility.yul\":4135:4137   */\n      0x21\n        /* \"#utility.yul\":4130:4133   */\n      dup4\n        /* \"#utility.yul\":4071:4138   */\n      tag_192\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4064:4138   */\n      swap2\n      pop\n        /* \"#utility.yul\":4147:4240   */\n      tag_209\n        /* \"#utility.yul\":4236:4239   */\n      dup3\n        /* \"#utility.yul\":4147:4240   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4265:4267   */\n      0x40\n        /* \"#utility.yul\":4260:4263   */\n      dup3\n        /* \"#utility.yul\":4256:4268   */\n      add\n        /* \"#utility.yul\":4249:4268   */\n      swap1\n      pop\n        /* \"#utility.yul\":3908:4274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4280:4646   */\n    tag_211:\n        /* \"#utility.yul\":4422:4425   */\n      0x00\n        /* \"#utility.yul\":4443:4510   */\n      tag_213\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4502:4505   */\n      dup4\n        /* \"#utility.yul\":4443:4510   */\n      tag_192\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4436:4510   */\n      swap2\n      pop\n        /* \"#utility.yul\":4519:4612   */\n      tag_214\n        /* \"#utility.yul\":4608:4611   */\n      dup3\n        /* \"#utility.yul\":4519:4612   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4637:4639   */\n      0x20\n        /* \"#utility.yul\":4632:4635   */\n      dup3\n        /* \"#utility.yul\":4628:4640   */\n      add\n        /* \"#utility.yul\":4621:4640   */\n      swap1\n      pop\n        /* \"#utility.yul\":4280:4646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:5018   */\n    tag_216:\n        /* \"#utility.yul\":4794:4797   */\n      0x00\n        /* \"#utility.yul\":4815:4882   */\n      tag_218\n        /* \"#utility.yul\":4879:4881   */\n      0x1d\n        /* \"#utility.yul\":4874:4877   */\n      dup4\n        /* \"#utility.yul\":4815:4882   */\n      tag_192\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4808:4882   */\n      swap2\n      pop\n        /* \"#utility.yul\":4891:4984   */\n      tag_219\n        /* \"#utility.yul\":4980:4983   */\n      dup3\n        /* \"#utility.yul\":4891:4984   */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5009:5011   */\n      0x20\n        /* \"#utility.yul\":5004:5007   */\n      dup3\n        /* \"#utility.yul\":5000:5012   */\n      add\n        /* \"#utility.yul\":4993:5012   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:5018   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5024:5390   */\n    tag_221:\n        /* \"#utility.yul\":5166:5169   */\n      0x00\n        /* \"#utility.yul\":5187:5254   */\n      tag_223\n        /* \"#utility.yul\":5251:5253   */\n      0x2a\n        /* \"#utility.yul\":5246:5249   */\n      dup4\n        /* \"#utility.yul\":5187:5254   */\n      tag_192\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5180:5254   */\n      swap2\n      pop\n        /* \"#utility.yul\":5263:5356   */\n      tag_224\n        /* \"#utility.yul\":5352:5355   */\n      dup3\n        /* \"#utility.yul\":5263:5356   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5381:5383   */\n      0x40\n        /* \"#utility.yul\":5376:5379   */\n      dup3\n        /* \"#utility.yul\":5372:5384   */\n      add\n        /* \"#utility.yul\":5365:5384   */\n      swap1\n      pop\n        /* \"#utility.yul\":5024:5390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5396:5514   */\n    tag_226:\n        /* \"#utility.yul\":5483:5507   */\n      tag_228\n        /* \"#utility.yul\":5501:5506   */\n      dup2\n        /* \"#utility.yul\":5483:5507   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5478:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5508   */\n      mstore\n        /* \"#utility.yul\":5396:5514   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5520:5791   */\n    tag_125:\n        /* \"#utility.yul\":5650:5653   */\n      0x00\n        /* \"#utility.yul\":5672:5765   */\n      tag_231\n        /* \"#utility.yul\":5761:5764   */\n      dup3\n        /* \"#utility.yul\":5752:5758   */\n      dup5\n        /* \"#utility.yul\":5672:5765   */\n      tag_171\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5665:5765   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5785   */\n      dup2\n        /* \"#utility.yul\":5775:5785   */\n      swap1\n      pop\n        /* \"#utility.yul\":5520:5791   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5797:6019   */\n    tag_34:\n        /* \"#utility.yul\":5890:5894   */\n      0x00\n        /* \"#utility.yul\":5928:5930   */\n      0x20\n        /* \"#utility.yul\":5917:5926   */\n      dup3\n        /* \"#utility.yul\":5913:5931   */\n      add\n        /* \"#utility.yul\":5905:5931   */\n      swap1\n      pop\n        /* \"#utility.yul\":5941:6012   */\n      tag_233\n        /* \"#utility.yul\":6009:6010   */\n      0x00\n        /* \"#utility.yul\":5998:6007   */\n      dup4\n        /* \"#utility.yul\":5994:6011   */\n      add\n        /* \"#utility.yul\":5985:5991   */\n      dup5\n        /* \"#utility.yul\":5941:6012   */\n      tag_167\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5797:6019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6025:6467   */\n    tag_104:\n        /* \"#utility.yul\":6174:6178   */\n      0x00\n        /* \"#utility.yul\":6212:6214   */\n      0x60\n        /* \"#utility.yul\":6201:6210   */\n      dup3\n        /* \"#utility.yul\":6197:6215   */\n      add\n        /* \"#utility.yul\":6189:6215   */\n      swap1\n      pop\n        /* \"#utility.yul\":6225:6296   */\n      tag_235\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6282:6291   */\n      dup4\n        /* \"#utility.yul\":6278:6295   */\n      add\n        /* \"#utility.yul\":6269:6275   */\n      dup7\n        /* \"#utility.yul\":6225:6296   */\n      tag_167\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6306:6378   */\n      tag_236\n        /* \"#utility.yul\":6374:6376   */\n      0x20\n        /* \"#utility.yul\":6363:6372   */\n      dup4\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"#utility.yul\":6350:6356   */\n      dup6\n        /* \"#utility.yul\":6306:6378   */\n      tag_167\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6388:6460   */\n      tag_237\n        /* \"#utility.yul\":6456:6458   */\n      0x40\n        /* \"#utility.yul\":6445:6454   */\n      dup4\n        /* \"#utility.yul\":6441:6459   */\n      add\n        /* \"#utility.yul\":6432:6438   */\n      dup5\n        /* \"#utility.yul\":6388:6460   */\n      tag_226\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6025:6467   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6473:6915   */\n    tag_80:\n        /* \"#utility.yul\":6622:6626   */\n      0x00\n        /* \"#utility.yul\":6660:6662   */\n      0x60\n        /* \"#utility.yul\":6649:6658   */\n      dup3\n        /* \"#utility.yul\":6645:6663   */\n      add\n        /* \"#utility.yul\":6637:6663   */\n      swap1\n      pop\n        /* \"#utility.yul\":6673:6744   */\n      tag_239\n        /* \"#utility.yul\":6741:6742   */\n      0x00\n        /* \"#utility.yul\":6730:6739   */\n      dup4\n        /* \"#utility.yul\":6726:6743   */\n      add\n        /* \"#utility.yul\":6717:6723   */\n      dup7\n        /* \"#utility.yul\":6673:6744   */\n      tag_167\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":6754:6826   */\n      tag_240\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"#utility.yul\":6811:6820   */\n      dup4\n        /* \"#utility.yul\":6807:6825   */\n      add\n        /* \"#utility.yul\":6798:6804   */\n      dup6\n        /* \"#utility.yul\":6754:6826   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6836:6908   */\n      tag_241\n        /* \"#utility.yul\":6904:6906   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6889:6907   */\n      add\n        /* \"#utility.yul\":6880:6886   */\n      dup5\n        /* \"#utility.yul\":6836:6908   */\n      tag_226\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6473:6915   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6921:7191   */\n    tag_30:\n        /* \"#utility.yul\":7038:7042   */\n      0x00\n        /* \"#utility.yul\":7076:7078   */\n      0x20\n        /* \"#utility.yul\":7065:7074   */\n      dup3\n        /* \"#utility.yul\":7061:7079   */\n      add\n        /* \"#utility.yul\":7053:7079   */\n      swap1\n      pop\n        /* \"#utility.yul\":7089:7184   */\n      tag_243\n        /* \"#utility.yul\":7181:7182   */\n      0x00\n        /* \"#utility.yul\":7170:7179   */\n      dup4\n        /* \"#utility.yul\":7166:7183   */\n      add\n        /* \"#utility.yul\":7157:7163   */\n      dup5\n        /* \"#utility.yul\":7089:7184   */\n      tag_179\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6921:7191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7197:7447   */\n    tag_16:\n        /* \"#utility.yul\":7304:7308   */\n      0x00\n        /* \"#utility.yul\":7342:7344   */\n      0x20\n        /* \"#utility.yul\":7331:7340   */\n      dup3\n        /* \"#utility.yul\":7327:7345   */\n      add\n        /* \"#utility.yul\":7319:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":7355:7440   */\n      tag_245\n        /* \"#utility.yul\":7437:7438   */\n      0x00\n        /* \"#utility.yul\":7426:7435   */\n      dup4\n        /* \"#utility.yul\":7422:7439   */\n      add\n        /* \"#utility.yul\":7413:7419   */\n      dup5\n        /* \"#utility.yul\":7355:7440   */\n      tag_183\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7197:7447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7453:7766   */\n    tag_134:\n        /* \"#utility.yul\":7566:7570   */\n      0x00\n        /* \"#utility.yul\":7604:7606   */\n      0x20\n        /* \"#utility.yul\":7593:7602   */\n      dup3\n        /* \"#utility.yul\":7589:7607   */\n      add\n        /* \"#utility.yul\":7581:7607   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7662   */\n      dup2\n        /* \"#utility.yul\":7647:7651   */\n      dup2\n        /* \"#utility.yul\":7643:7663   */\n      sub\n        /* \"#utility.yul\":7639:7640   */\n      0x00\n        /* \"#utility.yul\":7628:7637   */\n      dup4\n        /* \"#utility.yul\":7624:7641   */\n      add\n        /* \"#utility.yul\":7617:7664   */\n      mstore\n        /* \"#utility.yul\":7681:7759   */\n      tag_247\n        /* \"#utility.yul\":7754:7758   */\n      dup2\n        /* \"#utility.yul\":7745:7751   */\n      dup5\n        /* \"#utility.yul\":7681:7759   */\n      tag_187\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7673:7759   */\n      swap1\n      pop\n        /* \"#utility.yul\":7453:7766   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7772:8191   */\n    tag_76:\n        /* \"#utility.yul\":7938:7942   */\n      0x00\n        /* \"#utility.yul\":7976:7978   */\n      0x20\n        /* \"#utility.yul\":7965:7974   */\n      dup3\n        /* \"#utility.yul\":7961:7979   */\n      add\n        /* \"#utility.yul\":7953:7979   */\n      swap1\n      pop\n        /* \"#utility.yul\":8025:8034   */\n      dup2\n        /* \"#utility.yul\":8019:8023   */\n      dup2\n        /* \"#utility.yul\":8015:8035   */\n      sub\n        /* \"#utility.yul\":8011:8012   */\n      0x00\n        /* \"#utility.yul\":8000:8009   */\n      dup4\n        /* \"#utility.yul\":7996:8013   */\n      add\n        /* \"#utility.yul\":7989:8036   */\n      mstore\n        /* \"#utility.yul\":8053:8184   */\n      tag_249\n        /* \"#utility.yul\":8179:8183   */\n      dup2\n        /* \"#utility.yul\":8053:8184   */\n      tag_196\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8045:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":7772:8191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:8616   */\n    tag_50:\n        /* \"#utility.yul\":8363:8367   */\n      0x00\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8390:8399   */\n      dup3\n        /* \"#utility.yul\":8386:8404   */\n      add\n        /* \"#utility.yul\":8378:8404   */\n      swap1\n      pop\n        /* \"#utility.yul\":8450:8459   */\n      dup2\n        /* \"#utility.yul\":8444:8448   */\n      dup2\n        /* \"#utility.yul\":8440:8460   */\n      sub\n        /* \"#utility.yul\":8436:8437   */\n      0x00\n        /* \"#utility.yul\":8425:8434   */\n      dup4\n        /* \"#utility.yul\":8421:8438   */\n      add\n        /* \"#utility.yul\":8414:8461   */\n      mstore\n        /* \"#utility.yul\":8478:8609   */\n      tag_251\n        /* \"#utility.yul\":8604:8608   */\n      dup2\n        /* \"#utility.yul\":8478:8609   */\n      tag_201\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8470:8609   */\n      swap1\n      pop\n        /* \"#utility.yul\":8197:8616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8622:9041   */\n    tag_100:\n        /* \"#utility.yul\":8788:8792   */\n      0x00\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup3\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8803:8829   */\n      swap1\n      pop\n        /* \"#utility.yul\":8875:8884   */\n      dup2\n        /* \"#utility.yul\":8869:8873   */\n      dup2\n        /* \"#utility.yul\":8865:8885   */\n      sub\n        /* \"#utility.yul\":8861:8862   */\n      0x00\n        /* \"#utility.yul\":8850:8859   */\n      dup4\n        /* \"#utility.yul\":8846:8863   */\n      add\n        /* \"#utility.yul\":8839:8886   */\n      mstore\n        /* \"#utility.yul\":8903:9034   */\n      tag_253\n        /* \"#utility.yul\":9029:9033   */\n      dup2\n        /* \"#utility.yul\":8903:9034   */\n      tag_206\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8895:9034   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:9041   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9047:9466   */\n    tag_59:\n        /* \"#utility.yul\":9213:9217   */\n      0x00\n        /* \"#utility.yul\":9251:9253   */\n      0x20\n        /* \"#utility.yul\":9240:9249   */\n      dup3\n        /* \"#utility.yul\":9236:9254   */\n      add\n        /* \"#utility.yul\":9228:9254   */\n      swap1\n      pop\n        /* \"#utility.yul\":9300:9309   */\n      dup2\n        /* \"#utility.yul\":9294:9298   */\n      dup2\n        /* \"#utility.yul\":9290:9310   */\n      sub\n        /* \"#utility.yul\":9286:9287   */\n      0x00\n        /* \"#utility.yul\":9275:9284   */\n      dup4\n        /* \"#utility.yul\":9271:9288   */\n      add\n        /* \"#utility.yul\":9264:9311   */\n      mstore\n        /* \"#utility.yul\":9328:9459   */\n      tag_255\n        /* \"#utility.yul\":9454:9458   */\n      dup2\n        /* \"#utility.yul\":9328:9459   */\n      tag_211\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9320:9459   */\n      swap1\n      pop\n        /* \"#utility.yul\":9047:9466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9472:9891   */\n    tag_123:\n        /* \"#utility.yul\":9638:9642   */\n      0x00\n        /* \"#utility.yul\":9676:9678   */\n      0x20\n        /* \"#utility.yul\":9665:9674   */\n      dup3\n        /* \"#utility.yul\":9661:9679   */\n      add\n        /* \"#utility.yul\":9653:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9725:9734   */\n      dup2\n        /* \"#utility.yul\":9719:9723   */\n      dup2\n        /* \"#utility.yul\":9715:9735   */\n      sub\n        /* \"#utility.yul\":9711:9712   */\n      0x00\n        /* \"#utility.yul\":9700:9709   */\n      dup4\n        /* \"#utility.yul\":9696:9713   */\n      add\n        /* \"#utility.yul\":9689:9736   */\n      mstore\n        /* \"#utility.yul\":9753:9884   */\n      tag_257\n        /* \"#utility.yul\":9879:9883   */\n      dup2\n        /* \"#utility.yul\":9753:9884   */\n      tag_216\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9745:9884   */\n      swap1\n      pop\n        /* \"#utility.yul\":9472:9891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9897:10316   */\n    tag_114:\n        /* \"#utility.yul\":10063:10067   */\n      0x00\n        /* \"#utility.yul\":10101:10103   */\n      0x20\n        /* \"#utility.yul\":10090:10099   */\n      dup3\n        /* \"#utility.yul\":10086:10104   */\n      add\n        /* \"#utility.yul\":10078:10104   */\n      swap1\n      pop\n        /* \"#utility.yul\":10150:10159   */\n      dup2\n        /* \"#utility.yul\":10144:10148   */\n      dup2\n        /* \"#utility.yul\":10140:10160   */\n      sub\n        /* \"#utility.yul\":10136:10137   */\n      0x00\n        /* \"#utility.yul\":10125:10134   */\n      dup4\n        /* \"#utility.yul\":10121:10138   */\n      add\n        /* \"#utility.yul\":10114:10161   */\n      mstore\n        /* \"#utility.yul\":10178:10309   */\n      tag_259\n        /* \"#utility.yul\":10304:10308   */\n      dup2\n        /* \"#utility.yul\":10178:10309   */\n      tag_221\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10170:10309   */\n      swap1\n      pop\n        /* \"#utility.yul\":9897:10316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10322:10544   */\n    tag_26:\n        /* \"#utility.yul\":10415:10419   */\n      0x00\n        /* \"#utility.yul\":10453:10455   */\n      0x20\n        /* \"#utility.yul\":10442:10451   */\n      dup3\n        /* \"#utility.yul\":10438:10456   */\n      add\n        /* \"#utility.yul\":10430:10456   */\n      swap1\n      pop\n        /* \"#utility.yul\":10466:10537   */\n      tag_261\n        /* \"#utility.yul\":10534:10535   */\n      0x00\n        /* \"#utility.yul\":10523:10532   */\n      dup4\n        /* \"#utility.yul\":10519:10536   */\n      add\n        /* \"#utility.yul\":10510:10516   */\n      dup5\n        /* \"#utility.yul\":10466:10537   */\n      tag_226\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10322:10544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10550:10882   */\n    tag_89:\n        /* \"#utility.yul\":10671:10675   */\n      0x00\n        /* \"#utility.yul\":10709:10711   */\n      0x40\n        /* \"#utility.yul\":10698:10707   */\n      dup3\n        /* \"#utility.yul\":10694:10712   */\n      add\n        /* \"#utility.yul\":10686:10712   */\n      swap1\n      pop\n        /* \"#utility.yul\":10722:10793   */\n      tag_263\n        /* \"#utility.yul\":10790:10791   */\n      0x00\n        /* \"#utility.yul\":10779:10788   */\n      dup4\n        /* \"#utility.yul\":10775:10792   */\n      add\n        /* \"#utility.yul\":10766:10772   */\n      dup6\n        /* \"#utility.yul\":10722:10793   */\n      tag_226\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10803:10875   */\n      tag_264\n        /* \"#utility.yul\":10871:10873   */\n      0x20\n        /* \"#utility.yul\":10860:10869   */\n      dup4\n        /* \"#utility.yul\":10856:10874   */\n      add\n        /* \"#utility.yul\":10847:10853   */\n      dup5\n        /* \"#utility.yul\":10803:10875   */\n      tag_226\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10550:10882   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10969:11067   */\n    tag_174:\n        /* \"#utility.yul\":11020:11026   */\n      0x00\n        /* \"#utility.yul\":11054:11059   */\n      dup2\n        /* \"#utility.yul\":11048:11060   */\n      mload\n        /* \"#utility.yul\":11038:11060   */\n      swap1\n      pop\n        /* \"#utility.yul\":10969:11067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11073:11172   */\n    tag_190:\n        /* \"#utility.yul\":11125:11131   */\n      0x00\n        /* \"#utility.yul\":11159:11164   */\n      dup2\n        /* \"#utility.yul\":11153:11165   */\n      mload\n        /* \"#utility.yul\":11143:11165   */\n      swap1\n      pop\n        /* \"#utility.yul\":11073:11172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11178:11325   */\n    tag_176:\n        /* \"#utility.yul\":11279:11290   */\n      0x00\n        /* \"#utility.yul\":11316:11319   */\n      dup2\n        /* \"#utility.yul\":11301:11319   */\n      swap1\n      pop\n        /* \"#utility.yul\":11178:11325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11331:11500   */\n    tag_192:\n        /* \"#utility.yul\":11415:11426   */\n      0x00\n        /* \"#utility.yul\":11449:11455   */\n      dup3\n        /* \"#utility.yul\":11444:11447   */\n      dup3\n        /* \"#utility.yul\":11437:11456   */\n      mstore\n        /* \"#utility.yul\":11489:11493   */\n      0x20\n        /* \"#utility.yul\":11484:11487   */\n      dup3\n        /* \"#utility.yul\":11480:11494   */\n      add\n        /* \"#utility.yul\":11465:11494   */\n      swap1\n      pop\n        /* \"#utility.yul\":11331:11500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11506:11691   */\n    tag_97:\n        /* \"#utility.yul\":11546:11547   */\n      0x00\n        /* \"#utility.yul\":11563:11583   */\n      tag_272\n        /* \"#utility.yul\":11581:11582   */\n      dup3\n        /* \"#utility.yul\":11563:11583   */\n      tag_229\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11558:11583   */\n      swap2\n      pop\n        /* \"#utility.yul\":11597:11617   */\n      tag_273\n        /* \"#utility.yul\":11615:11616   */\n      dup4\n        /* \"#utility.yul\":11597:11617   */\n      tag_229\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":11592:11617   */\n      swap3\n      pop\n        /* \"#utility.yul\":11636:11637   */\n      dup3\n        /* \"#utility.yul\":11626:11661   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11641:11659   */\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11626:11661   */\n    tag_274:\n        /* \"#utility.yul\":11683:11684   */\n      dup3\n        /* \"#utility.yul\":11680:11681   */\n      dup3\n        /* \"#utility.yul\":11676:11685   */\n      div\n        /* \"#utility.yul\":11671:11685   */\n      swap1\n      pop\n        /* \"#utility.yul\":11506:11691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11697:12045   */\n    tag_95:\n        /* \"#utility.yul\":11737:11744   */\n      0x00\n        /* \"#utility.yul\":11760:11780   */\n      tag_278\n        /* \"#utility.yul\":11778:11779   */\n      dup3\n        /* \"#utility.yul\":11760:11780   */\n      tag_229\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":11755:11780   */\n      swap2\n      pop\n        /* \"#utility.yul\":11794:11814   */\n      tag_279\n        /* \"#utility.yul\":11812:11813   */\n      dup4\n        /* \"#utility.yul\":11794:11814   */\n      tag_229\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":11789:11814   */\n      swap3\n      pop\n        /* \"#utility.yul\":11982:11983   */\n      dup2\n        /* \"#utility.yul\":11914:11980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11910:11984   */\n      div\n        /* \"#utility.yul\":11907:11908   */\n      dup4\n        /* \"#utility.yul\":11904:11985   */\n      gt\n        /* \"#utility.yul\":11899:11900   */\n      dup3\n        /* \"#utility.yul\":11892:11901   */\n      iszero\n        /* \"#utility.yul\":11885:11902   */\n      iszero\n        /* \"#utility.yul\":11881:11986   */\n      and\n        /* \"#utility.yul\":11878:12009   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":11989:12007   */\n      tag_281\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11878:12009   */\n    tag_280:\n        /* \"#utility.yul\":12037:12038   */\n      dup3\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12030:12039   */\n      mul\n        /* \"#utility.yul\":12019:12039   */\n      swap1\n      pop\n        /* \"#utility.yul\":11697:12045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12051:12147   */\n    tag_170:\n        /* \"#utility.yul\":12088:12095   */\n      0x00\n        /* \"#utility.yul\":12117:12141   */\n      tag_284\n        /* \"#utility.yul\":12135:12140   */\n      dup3\n        /* \"#utility.yul\":12117:12141   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":12106:12141   */\n      swap1\n      pop\n        /* \"#utility.yul\":12051:12147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12153:12243   */\n    tag_286:\n        /* \"#utility.yul\":12187:12194   */\n      0x00\n        /* \"#utility.yul\":12230:12235   */\n      dup2\n        /* \"#utility.yul\":12223:12236   */\n      iszero\n        /* \"#utility.yul\":12216:12237   */\n      iszero\n        /* \"#utility.yul\":12205:12237   */\n      swap1\n      pop\n        /* \"#utility.yul\":12153:12243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12249:12375   */\n    tag_285:\n        /* \"#utility.yul\":12286:12293   */\n      0x00\n        /* \"#utility.yul\":12326:12368   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12319:12324   */\n      dup3\n        /* \"#utility.yul\":12315:12369   */\n      and\n        /* \"#utility.yul\":12304:12369   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12381:12458   */\n    tag_229:\n        /* \"#utility.yul\":12418:12425   */\n      0x00\n        /* \"#utility.yul\":12447:12452   */\n      dup2\n        /* \"#utility.yul\":12436:12452   */\n      swap1\n      pop\n        /* \"#utility.yul\":12381:12458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12464:12614   */\n    tag_182:\n        /* \"#utility.yul\":12538:12547   */\n      0x00\n        /* \"#utility.yul\":12571:12608   */\n      tag_291\n        /* \"#utility.yul\":12602:12607   */\n      dup3\n        /* \"#utility.yul\":12571:12608   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":12558:12608   */\n      swap1\n      pop\n        /* \"#utility.yul\":12464:12614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12620:12760   */\n    tag_186:\n        /* \"#utility.yul\":12684:12693   */\n      0x00\n        /* \"#utility.yul\":12717:12754   */\n      tag_294\n        /* \"#utility.yul\":12748:12753   */\n      dup3\n        /* \"#utility.yul\":12717:12754   */\n      tag_292\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":12704:12754   */\n      swap1\n      pop\n        /* \"#utility.yul\":12620:12760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12766:12892   */\n    tag_292:\n        /* \"#utility.yul\":12816:12825   */\n      0x00\n        /* \"#utility.yul\":12849:12886   */\n      tag_296\n        /* \"#utility.yul\":12880:12885   */\n      dup3\n        /* \"#utility.yul\":12849:12886   */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12836:12886   */\n      swap1\n      pop\n        /* \"#utility.yul\":12766:12892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12898:13011   */\n    tag_297:\n        /* \"#utility.yul\":12948:12957   */\n      0x00\n        /* \"#utility.yul\":12981:13005   */\n      tag_299\n        /* \"#utility.yul\":12999:13004   */\n      dup3\n        /* \"#utility.yul\":12981:13005   */\n      tag_285\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":12968:13005   */\n      swap1\n      pop\n        /* \"#utility.yul\":12898:13011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13017:13324   */\n    tag_178:\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13095:13208   */\n    tag_301:\n        /* \"#utility.yul\":13109:13115   */\n      dup4\n        /* \"#utility.yul\":13106:13107   */\n      dup2\n        /* \"#utility.yul\":13103:13116   */\n      lt\n        /* \"#utility.yul\":13095:13208   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":13194:13195   */\n      dup1\n        /* \"#utility.yul\":13189:13192   */\n      dup3\n        /* \"#utility.yul\":13185:13196   */\n      add\n        /* \"#utility.yul\":13179:13197   */\n      mload\n        /* \"#utility.yul\":13175:13176   */\n      dup2\n        /* \"#utility.yul\":13170:13173   */\n      dup5\n        /* \"#utility.yul\":13166:13177   */\n      add\n        /* \"#utility.yul\":13159:13198   */\n      mstore\n        /* \"#utility.yul\":13131:13133   */\n      0x20\n        /* \"#utility.yul\":13128:13129   */\n      dup2\n        /* \"#utility.yul\":13124:13134   */\n      add\n        /* \"#utility.yul\":13119:13134   */\n      swap1\n      pop\n        /* \"#utility.yul\":13095:13208   */\n      jump(tag_301)\n    tag_303:\n        /* \"#utility.yul\":13226:13232   */\n      dup4\n        /* \"#utility.yul\":13223:13224   */\n      dup2\n        /* \"#utility.yul\":13220:13233   */\n      gt\n        /* \"#utility.yul\":13217:13318   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":13306:13307   */\n      0x00\n        /* \"#utility.yul\":13297:13303   */\n      dup5\n        /* \"#utility.yul\":13292:13295   */\n      dup5\n        /* \"#utility.yul\":13288:13304   */\n      add\n        /* \"#utility.yul\":13281:13308   */\n      mstore\n        /* \"#utility.yul\":13217:13318   */\n    tag_304:\n        /* \"#utility.yul\":13066:13324   */\n      pop\n        /* \"#utility.yul\":13017:13324   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13330:13510   */\n    tag_282:\n        /* \"#utility.yul\":13378:13455   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13375:13376   */\n      0x00\n        /* \"#utility.yul\":13368:13456   */\n      mstore\n        /* \"#utility.yul\":13475:13479   */\n      0x11\n        /* \"#utility.yul\":13472:13473   */\n      0x04\n        /* \"#utility.yul\":13465:13480   */\n      mstore\n        /* \"#utility.yul\":13499:13503   */\n      0x24\n        /* \"#utility.yul\":13496:13497   */\n      0x00\n        /* \"#utility.yul\":13489:13504   */\n      revert\n        /* \"#utility.yul\":13516:13696   */\n    tag_276:\n        /* \"#utility.yul\":13564:13641   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13561:13562   */\n      0x00\n        /* \"#utility.yul\":13554:13642   */\n      mstore\n        /* \"#utility.yul\":13661:13665   */\n      0x12\n        /* \"#utility.yul\":13658:13659   */\n      0x04\n        /* \"#utility.yul\":13651:13666   */\n      mstore\n        /* \"#utility.yul\":13685:13689   */\n      0x24\n        /* \"#utility.yul\":13682:13683   */\n      0x00\n        /* \"#utility.yul\":13675:13690   */\n      revert\n        /* \"#utility.yul\":13825:13942   */\n    tag_152:\n        /* \"#utility.yul\":13934:13935   */\n      0x00\n        /* \"#utility.yul\":13931:13932   */\n      dup1\n        /* \"#utility.yul\":13924:13936   */\n      revert\n        /* \"#utility.yul\":13948:14050   */\n    tag_195:\n        /* \"#utility.yul\":13989:13995   */\n      0x00\n        /* \"#utility.yul\":14040:14042   */\n      0x1f\n        /* \"#utility.yul\":14036:14043   */\n      not\n        /* \"#utility.yul\":14031:14033   */\n      0x1f\n        /* \"#utility.yul\":14024:14029   */\n      dup4\n        /* \"#utility.yul\":14020:14034   */\n      add\n        /* \"#utility.yul\":14016:14044   */\n      and\n        /* \"#utility.yul\":14006:14044   */\n      swap1\n      pop\n        /* \"#utility.yul\":13948:14050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14056:14281   */\n    tag_200:\n        /* \"#utility.yul\":14196:14230   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14192:14193   */\n      0x00\n        /* \"#utility.yul\":14184:14190   */\n      dup3\n        /* \"#utility.yul\":14180:14194   */\n      add\n        /* \"#utility.yul\":14173:14231   */\n      mstore\n        /* \"#utility.yul\":14265:14273   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14260:14262   */\n      0x20\n        /* \"#utility.yul\":14252:14258   */\n      dup3\n        /* \"#utility.yul\":14248:14263   */\n      add\n        /* \"#utility.yul\":14241:14274   */\n      mstore\n        /* \"#utility.yul\":14056:14281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14287:14448   */\n    tag_205:\n        /* \"#utility.yul\":14427:14440   */\n      0x4e6f74206f6e206c697374000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14423:14424   */\n      0x00\n        /* \"#utility.yul\":14415:14421   */\n      dup3\n        /* \"#utility.yul\":14411:14425   */\n      add\n        /* \"#utility.yul\":14404:14441   */\n      mstore\n        /* \"#utility.yul\":14287:14448   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14454:14674   */\n    tag_210:\n        /* \"#utility.yul\":14594:14628   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":14590:14591   */\n      0x00\n        /* \"#utility.yul\":14582:14588   */\n      dup3\n        /* \"#utility.yul\":14578:14592   */\n      add\n        /* \"#utility.yul\":14571:14629   */\n      mstore\n        /* \"#utility.yul\":14663:14666   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14658:14660   */\n      0x20\n        /* \"#utility.yul\":14650:14656   */\n      dup3\n        /* \"#utility.yul\":14646:14661   */\n      add\n        /* \"#utility.yul\":14639:14667   */\n      mstore\n        /* \"#utility.yul\":14454:14674   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14680:14862   */\n    tag_215:\n        /* \"#utility.yul\":14820:14854   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":14816:14817   */\n      0x00\n        /* \"#utility.yul\":14808:14814   */\n      dup3\n        /* \"#utility.yul\":14804:14818   */\n      add\n        /* \"#utility.yul\":14797:14855   */\n      mstore\n        /* \"#utility.yul\":14680:14862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14868:15047   */\n    tag_220:\n        /* \"#utility.yul\":15008:15039   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":15004:15005   */\n      0x00\n        /* \"#utility.yul\":14996:15002   */\n      dup3\n        /* \"#utility.yul\":14992:15006   */\n      add\n        /* \"#utility.yul\":14985:15040   */\n      mstore\n        /* \"#utility.yul\":14868:15047   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15053:15282   */\n    tag_225:\n        /* \"#utility.yul\":15193:15227   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":15189:15190   */\n      0x00\n        /* \"#utility.yul\":15181:15187   */\n      dup3\n        /* \"#utility.yul\":15177:15191   */\n      add\n        /* \"#utility.yul\":15170:15228   */\n      mstore\n        /* \"#utility.yul\":15262:15274   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15257:15259   */\n      0x20\n        /* \"#utility.yul\":15249:15255   */\n      dup3\n        /* \"#utility.yul\":15245:15260   */\n      add\n        /* \"#utility.yul\":15238:15275   */\n      mstore\n        /* \"#utility.yul\":15053:15282   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15288:15410   */\n    tag_140:\n        /* \"#utility.yul\":15361:15385   */\n      tag_318\n        /* \"#utility.yul\":15379:15384   */\n      dup2\n        /* \"#utility.yul\":15361:15385   */\n      tag_170\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":15354:15359   */\n      dup2\n        /* \"#utility.yul\":15351:15386   */\n      eq\n        /* \"#utility.yul\":15341:15404   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":15400:15401   */\n      0x00\n        /* \"#utility.yul\":15397:15398   */\n      dup1\n        /* \"#utility.yul\":15390:15402   */\n      revert\n        /* \"#utility.yul\":15341:15404   */\n    tag_319:\n        /* \"#utility.yul\":15288:15410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15416:15532   */\n    tag_144:\n        /* \"#utility.yul\":15486:15507   */\n      tag_321\n        /* \"#utility.yul\":15501:15506   */\n      dup2\n        /* \"#utility.yul\":15486:15507   */\n      tag_286\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15479:15484   */\n      dup2\n        /* \"#utility.yul\":15476:15508   */\n      eq\n        /* \"#utility.yul\":15466:15526   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":15522:15523   */\n      0x00\n        /* \"#utility.yul\":15519:15520   */\n      dup1\n        /* \"#utility.yul\":15512:15524   */\n      revert\n        /* \"#utility.yul\":15466:15526   */\n    tag_322:\n        /* \"#utility.yul\":15416:15532   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15538:15660   */\n    tag_148:\n        /* \"#utility.yul\":15611:15635   */\n      tag_324\n        /* \"#utility.yul\":15629:15634   */\n      dup2\n        /* \"#utility.yul\":15611:15635   */\n      tag_229\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":15604:15609   */\n      dup2\n        /* \"#utility.yul\":15601:15636   */\n      eq\n        /* \"#utility.yul\":15591:15654   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":15650:15651   */\n      0x00\n        /* \"#utility.yul\":15647:15648   */\n      dup1\n        /* \"#utility.yul\":15640:15652   */\n      revert\n        /* \"#utility.yul\":15591:15654   */\n    tag_325:\n        /* \"#utility.yul\":15538:15660   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c9b01cf6cd83383ec38212674860820ed115e941efbeaa861b5c8b13a514626164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_320": {
									"entryPoint": null,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_275": {
									"entryPoint": 667,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:552:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "315:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:1"
															},
															"nodeType": "YulIf",
															"src": "277:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "406:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "421:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "425:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "450:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "460:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "544:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "559:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "563:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "589:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "635:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "646:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "631:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "599:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "589:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "683:129:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "698:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "702:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "728:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "774:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "770:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "770:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "738:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "728:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													}
												],
												"src": "156:663:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "875:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "858:6:1",
														"type": ""
													}
												],
												"src": "825:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "943:7:1",
														"type": ""
													}
												],
												"src": "906:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1053:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1063:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1078:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1063:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1045:7:1",
														"type": ""
													}
												],
												"src": "1008:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1263:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:43:1"
															},
															"nodeType": "YulIf",
															"src": "1439:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:1",
														"type": ""
													}
												],
												"src": "1386:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1743 CODESIZE SUB DUP1 PUSH3 0x1743 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BA JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49 PUSH3 0x29B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x151 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH3 0x1C5 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH3 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x369 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B4 DUP2 PUSH3 0x34F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x2D6 JUMPI PUSH3 0x2D5 PUSH3 0x34A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2E6 DUP7 DUP3 DUP8 ADD PUSH3 0x2A3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x2F9 DUP7 DUP3 DUP8 ADD PUSH3 0x2A3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x30C DUP7 DUP3 DUP8 ADD PUSH3 0x2A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x323 DUP3 PUSH3 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35A DUP2 PUSH3 0x316 JUMP JUMPDEST DUP2 EQ PUSH3 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13CA DUP1 PUSH3 0x379 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x182 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x170D542C EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C PUSH2 0x225 PUSH2 0x675 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x67D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x418 PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AF DUP3 DUP3 PUSH2 0x80D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24EEEDF6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7A4 DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x75B DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x861 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x800 SWAP3 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST EQ PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x965 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xA27 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA3B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA4F DUP6 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP1 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0xB0E JUMPI DUP1 SWAP3 POP POP POP PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xB21 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0x134F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB2 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDC DUP5 DUP3 DUP6 ADD PUSH2 0xB79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP5 DUP3 DUP6 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP6 DUP3 DUP7 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC75 DUP6 DUP3 DUP7 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC88 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP3 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xCA3 DUP2 DUP6 PUSH2 0x1009 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x10F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x1014 JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x11D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x26 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0xB DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x21 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8C PUSH1 0x20 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 DUP3 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF PUSH1 0x1D DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBA DUP3 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD2 PUSH1 0x2A DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE03 DUP3 DUP5 PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE3E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE82 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE8F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE7 DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF08 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF48 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF68 DUP2 PUSH2 0xD7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF88 DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA8 DUP2 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1030 DUP3 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x103B DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0x11A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 DUP3 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x106C DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10A5 JUMPI PUSH2 0x10A4 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1103 DUP3 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1115 DUP3 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1143 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1358 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x10C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xB0 SHR 0xF6 0xCD DUP4 CODESIZE RETURNDATACOPY 0xC3 DUP3 SLT PUSH8 0x4860820ED115E941 0xEF 0xBE 0xAA DUP7 SHL 0x5C DUP12 SGT 0xA5 EQ PUSH3 0x616473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "22320:1713:0:-:0;;;22757:417;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8103:17;8123:12;:10;;;:12;;:::i;:::-;8103:32;;8155:9;8146:6;;:18;;;;;;;;;;;;;;;;;;8213:9;8180:43;;8209:1;8180:43;;;;;;;;;;;;8092:139;22913:1;22890:25;;:11;:25;;;;:57;;;;;22942:4;22919:28;;:11;:28;;;;22890:57;22882:66;;;;;;22997:1;22967:32;;:18;:32;;;;:71;;;;;23033:4;23003:35;;:18;:35;;;;22967:71;22959:80;;;;;;23073:11;23050:3;;:35;;;;;;;;;;;;;;;;;;23116:18;23096:10;;:39;;;;;;;;;;;;;;;;;;23157:9;23146:8;;:20;;;;;;;;;;;;;;;;;;22757:417;;;22320:1713;;6903:98;6956:7;6983:10;6976:17;;6903:98;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;22320:1713:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_buyToken_1068": {
									"entryPoint": 1661,
									"id": 1068,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_callOptionalReturn_875": {
									"entryPoint": 2405,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_commodityPrices_920": {
									"entryPoint": 560,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_functionCallWithValue_661": {
									"entryPoint": 2628,
									"id": 661,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_listToken_1013": {
									"entryPoint": 2061,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_275": {
									"entryPoint": 1653,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionCall_558": {
									"entryPoint": 2604,
									"id": 558,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_487": {
									"entryPoint": 2918,
									"id": 487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_108": {
									"entryPoint": 2145,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nft_911": {
									"entryPoint": 584,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_329": {
									"entryPoint": 999,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quoteErc20_914": {
									"entryPoint": 414,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_364": {
									"entryPoint": 660,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBuyToken_1092": {
									"entryPoint": 452,
									"id": 1092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeListToken_1028": {
									"entryPoint": 1040,
									"id": 1028,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_718": {
									"entryPoint": 2268,
									"id": 718,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferOwnership_392": {
									"entryPoint": 1203,
									"id": 392,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasury_916": {
									"entryPoint": 622,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC1155Mintable_$899_to_t_address_fromStack": {
									"entryPoint": 3263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$469_to_t_address_fromStack": {
									"entryPoint": 3278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3625,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3680,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155Mintable_$899__to_t_address__fromStack_reversed": {
									"entryPoint": 3735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$469__to_t_address__fromStack_reversed": {
									"entryPoint": 3762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155Mintable_$899_to_t_address": {
									"entryPoint": 4344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$469_to_t_address": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8": {
									"entryPoint": 4662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3": {
									"entryPoint": 4703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15663:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:1",
														"type": ""
													}
												],
												"src": "152:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:1",
														"type": ""
													}
												],
												"src": "295:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:1"
															},
															"nodeType": "YulIf",
															"src": "516:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:1",
														"type": ""
													}
												],
												"src": "440:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "849:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "895:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "897:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "897:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "897:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "870:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "879:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "862:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:32:1"
															},
															"nodeType": "YulIf",
															"src": "859:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "988:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1003:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1017:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1007:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1032:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1075:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1086:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1071:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1095:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1042:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1032:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "819:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "830:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "842:6:1",
														"type": ""
													}
												],
												"src": "775:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1192:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1238:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1240:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1240:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1240:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1213:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1205:32:1"
															},
															"nodeType": "YulIf",
															"src": "1202:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1331:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1346:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1350:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1375:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1410:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1421:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1406:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1406:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1430:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1385:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1385:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1375:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1162:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1173:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1185:6:1",
														"type": ""
													}
												],
												"src": "1126:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1592:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1592:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1592:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:32:1"
															},
															"nodeType": "YulIf",
															"src": "1554:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1683:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1698:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1702:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1727:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1762:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1773:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1758:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1758:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1782:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1737:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1727:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1810:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1825:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1839:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1829:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1855:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1865:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1855:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1506:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1517:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1529:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1537:6:1",
														"type": ""
													}
												],
												"src": "1461:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2023:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2046:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2028:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2016:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2016:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1994:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2001:3:1",
														"type": ""
													}
												],
												"src": "1941:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2173:265:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2183:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2229:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2197:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2187:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2244:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2327:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2332:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2251:75:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2374:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2370:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2370:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2348:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2348:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2409:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2420:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2425:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2154:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2161:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2169:3:1",
														"type": ""
													}
												],
												"src": "2065:373:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2533:90:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2610:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155Mintable_$899_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2555:54:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2555:61:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:74:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155Mintable_$899_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2528:3:1",
														"type": ""
													}
												],
												"src": "2444:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2708:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2725:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2775:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$469_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2730:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2730:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2718:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$469_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2703:3:1",
														"type": ""
													}
												],
												"src": "2629:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2943:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2910:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2958:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3024:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3029:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2965:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2958:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3071:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3078:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3085:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3090:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3045:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3106:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3117:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3144:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3122:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3122:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3113:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3106:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2867:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2882:3:1",
														"type": ""
													}
												],
												"src": "2794:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3310:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3320:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3391:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3327:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3320:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3403:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3505:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3516:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3521:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3512:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3512:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3298:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3306:3:1",
														"type": ""
													}
												],
												"src": "3164:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3692:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3758:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3763:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3699:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3864:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																	"nodeType": "YulIdentifier",
																	"src": "3775:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3775:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3775:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3877:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3888:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3877:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3670:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3678:3:1",
														"type": ""
													}
												],
												"src": "3536:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4064:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4130:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4071:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4071:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4236:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																	"nodeType": "YulIdentifier",
																	"src": "4147:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4147:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4249:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4260:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4265:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4256:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4249:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4042:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4050:3:1",
														"type": ""
													}
												],
												"src": "3908:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4426:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4436:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4502:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4443:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4436:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4608:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4519:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4519:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4519:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4621:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4632:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4637:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4628:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4414:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4422:3:1",
														"type": ""
													}
												],
												"src": "4280:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4798:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4808:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4874:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4879:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4815:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4980:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "4891:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4993:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5004:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4786:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4794:3:1",
														"type": ""
													}
												],
												"src": "4652:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5170:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5180:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5246:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5187:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5187:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5352:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "5263:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5263:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5365:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5376:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5381:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5365:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5158:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5166:3:1",
														"type": ""
													}
												],
												"src": "5024:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5461:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5501:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5483:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5483:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5471:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5471:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5449:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5456:3:1",
														"type": ""
													}
												],
												"src": "5396:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5654:137:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5665:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5752:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5761:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5672:79:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5665:3:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5782:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5775:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5633:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5639:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5650:3:1",
														"type": ""
													}
												],
												"src": "5520:271:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5895:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5905:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5917:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5928:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5913:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5913:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5905:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5985:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5998:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6009:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5994:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5941:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5941:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5867:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5879:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5890:4:1",
														"type": ""
													}
												],
												"src": "5797:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6179:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6189:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6201:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6189:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6269:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6282:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6293:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6225:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6225:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6225:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6350:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6374:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6306:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6306:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6432:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6441:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6388:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6388:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6388:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6135:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6147:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6155:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6163:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6174:4:1",
														"type": ""
													}
												],
												"src": "6025:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6627:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6637:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6649:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6660:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6637:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6717:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6741:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6673:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6673:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6798:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6811:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6822:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6807:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6754:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6754:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6880:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6904:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6889:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6836:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6836:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6836:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6583:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6595:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6603:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6611:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6622:4:1",
														"type": ""
													}
												],
												"src": "6473:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7043:148:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7053:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7076:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7061:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7061:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7053:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7157:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7170:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7181:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7166:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155Mintable_$899_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7089:67:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:95:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7089:95:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155Mintable_$899__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7015:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7027:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7038:4:1",
														"type": ""
													}
												],
												"src": "6921:270:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7309:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7319:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7331:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7342:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7327:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7327:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7319:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7413:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7437:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7422:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$469_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7355:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7355:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7355:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$469__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7281:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7293:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7304:4:1",
														"type": ""
													}
												],
												"src": "7197:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7571:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7581:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7604:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7581:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7628:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7639:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7624:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7624:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7647:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7653:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7643:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7643:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7617:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7673:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7745:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7754:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7681:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7681:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7673:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7543:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7555:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7566:4:1",
														"type": ""
													}
												],
												"src": "7453:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7953:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7965:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7961:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7953:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8000:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8011:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7996:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7996:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8019:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8025:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8015:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7989:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7989:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7989:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8045:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8179:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8053:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7923:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7938:4:1",
														"type": ""
													}
												],
												"src": "7772:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8368:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8378:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8401:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8386:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8386:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8378:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8421:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8444:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8450:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8440:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8414:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8470:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8604:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8478:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8478:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8470:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8348:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8363:4:1",
														"type": ""
													}
												],
												"src": "8197:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8793:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8803:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8815:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8811:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8803:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8850:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8861:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8846:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8846:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8869:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8875:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8865:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8865:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8839:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8839:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9029:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8903:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8895:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8788:4:1",
														"type": ""
													}
												],
												"src": "8622:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9218:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9228:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9240:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9251:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9236:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9236:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9228:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9275:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9286:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9271:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9294:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9300:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9290:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9264:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9264:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9320:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9454:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9328:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9328:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9320:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9198:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9213:4:1",
														"type": ""
													}
												],
												"src": "9047:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9643:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9653:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9665:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9653:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9700:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9711:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9696:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9719:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9725:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9715:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9689:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9689:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9745:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9879:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9753:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9753:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9745:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9623:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9638:4:1",
														"type": ""
													}
												],
												"src": "9472:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10068:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10078:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10090:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10101:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10086:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10086:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10078:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10125:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10136:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10121:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10144:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10150:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10114:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10114:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10170:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10304:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10178:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10178:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10170:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10048:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10063:4:1",
														"type": ""
													}
												],
												"src": "9897:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10420:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10430:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10442:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10453:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10438:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10430:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10510:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10523:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10534:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10519:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10466:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10466:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10392:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10415:4:1",
														"type": ""
													}
												],
												"src": "10322:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10676:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10686:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10698:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10709:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10686:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10766:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10779:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10790:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10722:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10722:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10722:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10847:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10860:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10871:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10856:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10803:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10803:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10803:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10640:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10652:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10660:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10671:4:1",
														"type": ""
													}
												],
												"src": "10550:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10928:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10938:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10954:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10948:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10948:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "10938:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10921:6:1",
														"type": ""
													}
												],
												"src": "10888:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11027:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11038:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11054:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11048:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11038:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11010:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11020:6:1",
														"type": ""
													}
												],
												"src": "10969:98:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11132:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11143:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11159:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11153:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11125:6:1",
														"type": ""
													}
												],
												"src": "11073:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11291:34:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11301:18:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11316:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11301:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11263:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11268:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11279:11:1",
														"type": ""
													}
												],
												"src": "11178:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11427:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11444:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11449:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11437:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11437:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11437:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11465:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11484:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11489:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11480:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11480:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11465:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11399:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11404:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11415:11:1",
														"type": ""
													}
												],
												"src": "11331:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11548:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11558:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11581:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11563:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11563:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11558:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11592:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11615:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11597:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11597:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11592:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11639:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11641:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11641:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11641:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11636:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11629:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:9:1"
															},
															"nodeType": "YulIf",
															"src": "11626:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11671:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11680:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11683:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11676:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11676:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11671:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11537:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11540:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11546:1:1",
														"type": ""
													}
												],
												"src": "11506:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11745:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11755:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11778:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11760:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11760:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11755:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11789:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11812:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11794:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11789:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11987:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11989:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11989:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11989:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11899:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11892:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11892:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11885:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11885:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11907:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11914:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11982:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11910:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11910:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11904:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11881:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11881:105:1"
															},
															"nodeType": "YulIf",
															"src": "11878:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12019:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12037:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12030:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12030:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12019:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11728:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11731:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11737:7:1",
														"type": ""
													}
												],
												"src": "11697:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12096:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12106:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12135:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12117:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12117:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12106:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12078:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12088:7:1",
														"type": ""
													}
												],
												"src": "12051:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12195:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12205:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12230:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12223:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12223:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12216:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12205:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12177:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12187:7:1",
														"type": ""
													}
												],
												"src": "12153:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12294:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12304:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12319:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12326:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12304:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12276:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12286:7:1",
														"type": ""
													}
												],
												"src": "12249:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12426:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12436:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12447:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12436:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12408:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12418:7:1",
														"type": ""
													}
												],
												"src": "12381:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12548:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12558:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12602:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12571:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12558:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155Mintable_$899_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12528:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12538:9:1",
														"type": ""
													}
												],
												"src": "12464:150:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12694:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12704:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12748:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "12717:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12717:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12704:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$469_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12674:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12684:9:1",
														"type": ""
													}
												],
												"src": "12620:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12826:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12836:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12880:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12849:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12836:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12806:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12816:9:1",
														"type": ""
													}
												],
												"src": "12766:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12958:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12968:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12999:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12981:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12981:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12968:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12938:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12948:9:1",
														"type": ""
													}
												],
												"src": "12898:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13066:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13076:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13085:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13080:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13145:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13170:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13175:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13166:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13166:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13189:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13194:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13185:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13185:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13179:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13179:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13159:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13159:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13159:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13106:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13109:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13103:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13103:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13117:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13119:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13128:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13131:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13124:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13124:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13119:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13099:3:1",
																"statements": []
															},
															"src": "13095:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13242:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13292:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13297:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13288:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13288:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13306:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13281:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13281:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13281:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13223:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13226:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13220:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13220:13:1"
															},
															"nodeType": "YulIf",
															"src": "13217:101:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13048:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13053:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13058:6:1",
														"type": ""
													}
												],
												"src": "13017:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13358:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13375:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13378:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13368:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13368:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13472:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13475:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13465:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13465:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13496:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13499:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13489:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13489:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13330:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13544:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13561:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13564:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13554:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13554:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13658:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13661:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13651:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13651:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13682:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13685:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13675:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13675:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13516:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13791:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13808:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13811:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13801:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13801:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13702:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13914:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13931:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13934:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13924:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13924:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "13825:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13996:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14006:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14024:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14031:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14020:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14040:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14036:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14016:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14016:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "14006:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13979:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13989:6:1",
														"type": ""
													}
												],
												"src": "13948:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14162:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14184:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14192:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14180:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14196:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14173:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14252:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14260:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14248:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14265:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14241:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14241:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14154:6:1",
														"type": ""
													}
												],
												"src": "14056:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14393:55:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14415:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14423:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14411:14:1"
																	},
																	{
																		"hexValue": "4e6f74206f6e206c697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14427:13:1",
																		"type": "",
																		"value": "Not on list"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14404:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14404:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14385:6:1",
														"type": ""
													}
												],
												"src": "14287:161:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14560:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14582:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14590:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14578:14:1"
																	},
																	{
																		"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14594:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14571:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14571:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14571:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14650:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14658:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14646:15:1"
																	},
																	{
																		"hexValue": "77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14663:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14639:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14639:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14552:6:1",
														"type": ""
													}
												],
												"src": "14454:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14786:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14808:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14816:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14804:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14820:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14797:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14797:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14778:6:1",
														"type": ""
													}
												],
												"src": "14680:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14974:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14996:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15004:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14992:14:1"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15008:31:1",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14985:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14985:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14966:6:1",
														"type": ""
													}
												],
												"src": "14868:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15159:123:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15181:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15189:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15177:14:1"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15193:34:1",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15170:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15249:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15257:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15245:15:1"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15262:12:1",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15238:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15238:37:1"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15151:6:1",
														"type": ""
													}
												],
												"src": "15053:229:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15331:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15388:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15397:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15400:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15390:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15390:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15390:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15354:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15379:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15361:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15361:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15351:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15351:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15344:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15344:43:1"
															},
															"nodeType": "YulIf",
															"src": "15341:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15324:5:1",
														"type": ""
													}
												],
												"src": "15288:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15456:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15510:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15519:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15522:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15512:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15512:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15512:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15479:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15501:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15486:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15486:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15476:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15476:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15469:40:1"
															},
															"nodeType": "YulIf",
															"src": "15466:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15449:5:1",
														"type": ""
													}
												],
												"src": "15416:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15581:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15638:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15647:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15650:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15640:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15640:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15640:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15604:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15629:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15611:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15611:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15601:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15601:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15594:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15594:43:1"
															},
															"nodeType": "YulIf",
															"src": "15591:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15574:5:1",
														"type": ""
													}
												],
												"src": "15538:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC1155Mintable_$899_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155Mintable_$899_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$469_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$469_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155Mintable_$899__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155Mintable_$899_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$469__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$469_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC1155Mintable_$899_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC20_$469_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not on list\")\n\n    }\n\n    function store_literal_in_memory_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeMath: multiplication overflo\")\n\n        mstore(add(memPtr, 32), \"w\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806361d027b31161006657806361d027b314610120578063715018a61461013e5780638da5cb5b14610148578063d3f5057314610166578063f2fde38b1461018257610093565b8063170d542c146100985780633e56e6c3146100b6578063432be4d0146100d257806347ccca0214610102575b600080fd5b6100a061019e565b6040516100ad9190610eb2565b60405180910390f35b6100d060048036038101906100cb9190610c3f565b6101c4565b005b6100ec60048036038101906100e79190610c12565b610230565b6040516100f99190610faf565b60405180910390f35b61010a610248565b6040516101179190610e97565b60405180910390f35b61012861026e565b6040516101359190610e0e565b60405180910390f35b610146610294565b005b6101506103e7565b60405161015d9190610e0e565b60405180910390f35b610180600480360381019061017b9190610c3f565b610410565b005b61019c60048036038101906101979190610bb8565b6104b3565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060046000848152602001908152602001600020541161021a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021190610f0f565b60405180910390fd5b61022c610225610675565b838361067d565b5050565b60046020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61029c610675565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610329576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032090610f4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610418610675565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049c90610f4f565b60405180910390fd5b6104af828261080d565b5050565b6104bb610675565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610f4f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610eef565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324eeedf68484846040518463ffffffff1660e01b81526004016106dc93929190610e60565b600060405180830381600087803b1580156106f657600080fd5b505af115801561070a573d6000803e3d6000fd5b505050506107a483600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661075b84600460008881526020019081526020016000205461086190919063ffffffff16565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108dc909392919063ffffffff16565b818373ffffffffffffffffffffffffffffffffffffffff167fbeae048c6d270d9469f86cf6e8fedda3c60ad770f16c24c9fc131c8e9a09101d836004600087815260200190815260200160002054604051610800929190610fca565b60405180910390a3505050565b806004600084815260200190815260200160002081905550817f92664190cca12aca9cd5309d87194bdda75bb51362d71c06e1a6f75c7c765711826040516108559190610faf565b60405180910390a25050565b60008083141561087457600090506108d6565b600082846108829190611056565b90508284826108919190611025565b146108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890610f2f565b60405180910390fd5b809150505b92915050565b61095f846323b872dd60e01b8585856040516024016108fd93929190610e29565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610965565b50505050565b60006109c7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610a2c9092919063ffffffff16565b9050600081511115610a2757808060200190518101906109e79190610be5565b610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90610f8f565b60405180910390fd5b5b505050565b6060610a3b8484600085610a44565b90509392505050565b6060610a4f85610b66565b610a8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8590610f6f565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ab79190610df7565b60006040518083038185875af1925050503d8060008114610af4576040519150601f19603f3d011682016040523d82523d6000602084013e610af9565b606091505b50915091508115610b0e578092505050610b5e565b600081511115610b215780518082602001fd5b836040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b559190610ecd565b60405180910390fd5b949350505050565b600080823b905060008111915050919050565b600081359050610b888161134f565b92915050565b600081519050610b9d81611366565b92915050565b600081359050610bb28161137d565b92915050565b600060208284031215610bce57610bcd6111d1565b5b6000610bdc84828501610b79565b91505092915050565b600060208284031215610bfb57610bfa6111d1565b5b6000610c0984828501610b8e565b91505092915050565b600060208284031215610c2857610c276111d1565b5b6000610c3684828501610ba3565b91505092915050565b60008060408385031215610c5657610c556111d1565b5b6000610c6485828601610ba3565b9250506020610c7585828601610ba3565b9150509250929050565b610c88816110b0565b82525050565b6000610c9982610ff3565b610ca38185611009565b9350610cb3818560208601611140565b80840191505092915050565b610cc8816110f8565b82525050565b610cd78161110a565b82525050565b6000610ce882610ffe565b610cf28185611014565b9350610d02818560208601611140565b610d0b816111d6565b840191505092915050565b6000610d23602683611014565b9150610d2e826111e7565b604082019050919050565b6000610d46600b83611014565b9150610d5182611236565b602082019050919050565b6000610d69602183611014565b9150610d748261125f565b604082019050919050565b6000610d8c602083611014565b9150610d97826112ae565b602082019050919050565b6000610daf601d83611014565b9150610dba826112d7565b602082019050919050565b6000610dd2602a83611014565b9150610ddd82611300565b604082019050919050565b610df1816110ee565b82525050565b6000610e038284610c8e565b915081905092915050565b6000602082019050610e236000830184610c7f565b92915050565b6000606082019050610e3e6000830186610c7f565b610e4b6020830185610c7f565b610e586040830184610de8565b949350505050565b6000606082019050610e756000830186610c7f565b610e826020830185610de8565b610e8f6040830184610de8565b949350505050565b6000602082019050610eac6000830184610cbf565b92915050565b6000602082019050610ec76000830184610cce565b92915050565b60006020820190508181036000830152610ee78184610cdd565b905092915050565b60006020820190508181036000830152610f0881610d16565b9050919050565b60006020820190508181036000830152610f2881610d39565b9050919050565b60006020820190508181036000830152610f4881610d5c565b9050919050565b60006020820190508181036000830152610f6881610d7f565b9050919050565b60006020820190508181036000830152610f8881610da2565b9050919050565b60006020820190508181036000830152610fa881610dc5565b9050919050565b6000602082019050610fc46000830184610de8565b92915050565b6000604082019050610fdf6000830185610de8565b610fec6020830184610de8565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611030826110ee565b915061103b836110ee565b92508261104b5761104a6111a2565b5b828204905092915050565b6000611061826110ee565b915061106c836110ee565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110a5576110a4611173565b5b828202905092915050565b60006110bb826110ce565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111038261111c565b9050919050565b60006111158261111c565b9050919050565b60006111278261112e565b9050919050565b6000611139826110ce565b9050919050565b60005b8381101561115e578082015181840152602081019050611143565b8381111561116d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f74206f6e206c697374000000000000000000000000000000000000000000600082015250565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b611358816110b0565b811461136357600080fd5b50565b61136f816110c2565b811461137a57600080fd5b50565b611386816110ee565b811461139157600080fd5b5056fea2646970667358221220c9b01cf6cd83383ec38212674860820ed115e941efbeaa861b5c8b13a514626164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61D027B3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xD3F50573 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x182 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x170D542C EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3E56E6C3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x432BE4D0 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0xC12 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x248 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x128 PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x146 PUSH2 0x294 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x150 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xC3F JUMP JUMPDEST PUSH2 0x410 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C PUSH2 0x225 PUSH2 0x675 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x67D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x29C PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x320 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x418 PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AF DUP3 DUP3 PUSH2 0x80D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4BB PUSH2 0x675 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x548 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53F SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AF SWAP1 PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24EEEDF6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7A4 DUP4 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x75B DUP5 PUSH1 0x4 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x861 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8DC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x800 SWAP3 SWAP2 SWAP1 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH32 0x92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711 DUP3 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0xFAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0x882 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x1025 JUMP JUMPDEST EQ PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP1 PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95F DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xE29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x965 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C7 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA2C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xA27 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9E7 SWAP2 SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xA26 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1D SWAP1 PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA3B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA4F DUP6 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xA8E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA85 SWAP1 PUSH2 0xF6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xAF4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0xB0E JUMPI DUP1 SWAP3 POP POP POP PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xB21 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB55 SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB88 DUP2 PUSH2 0x134F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB9D DUP2 PUSH2 0x1366 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB2 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCE JUMPI PUSH2 0xBCD PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBDC DUP5 DUP3 DUP6 ADD PUSH2 0xB79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFA PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC09 DUP5 DUP3 DUP6 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC28 JUMPI PUSH2 0xC27 PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP5 DUP3 DUP6 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH2 0xC55 PUSH2 0x11D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC64 DUP6 DUP3 DUP7 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC75 DUP6 DUP3 DUP7 ADD PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xC88 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC99 DUP3 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xCA3 DUP2 DUP6 PUSH2 0x1009 JUMP JUMPDEST SWAP4 POP PUSH2 0xCB3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x10F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x1014 JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x11D6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x26 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x11E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0xB DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x21 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x125F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8C PUSH1 0x20 DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 DUP3 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAF PUSH1 0x1D DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBA DUP3 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD2 PUSH1 0x2A DUP4 PUSH2 0x1014 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDD DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE03 DUP3 DUP5 PUSH2 0xC8E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE3E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE4B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE58 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xE75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xC7F JUMP JUMPDEST PUSH2 0xE82 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xE8F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEE7 DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF08 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF48 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF68 DUP2 PUSH2 0xD7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF88 DUP2 PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFA8 DUP2 PUSH2 0xDC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFDF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0xFEC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1030 DUP3 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x103B DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0x11A2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1061 DUP3 PUSH2 0x10EE JUMP JUMPDEST SWAP2 POP PUSH2 0x106C DUP4 PUSH2 0x10EE JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10A5 JUMPI PUSH2 0x10A4 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BB DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1103 DUP3 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1115 DUP3 PUSH2 0x111C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP3 PUSH2 0x10CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x115E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1143 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F6E206C697374000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1358 DUP2 PUSH2 0x10B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x136F DUP2 PUSH2 0x10C2 JUMP JUMPDEST DUP2 EQ PUSH2 0x137A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP2 EQ PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xB0 SHR 0xF6 0xCD DUP4 CODESIZE RETURNDATACOPY 0xC3 DUP3 SLT PUSH8 0x4860820ED115E941 0xEF 0xBE 0xAA DUP7 SHL 0x5C DUP12 SGT 0xA5 EQ PUSH3 0x616473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "22320:1713:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22465:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23832:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22534:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22431:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22498:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8954:148;;;:::i;:::-;;8312:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23361:121;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9257:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;22465:24;;;;;;;;;;;;;:::o;23832:192::-;23944:1;23917:16;:26;23934:8;23917:26;;;;;;;;;;;;:28;23909:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;23972:44;23982:12;:10;:12::i;:::-;23996:8;24006:9;23972;:44::i;:::-;23832:192;;:::o;22534:51::-;;;;;;;;;;;;;;;;;:::o;22431:27::-;;;;;;;;;;;;;:::o;22498:23::-;;;;;;;;;;;;;:::o;8954:148::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9061:1:::1;9024:40;;9045:6;::::0;::::1;;;;;;;;9024:40;;;;;;;;;;;;9092:1;9075:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;8954:148::o:0;8312:79::-;8350:7;8377:6;;;;;;;;;;;8370:13;;8312:79;:::o;23361:121::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;23446:28:::1;23457:8;23467:6;23446:10;:28::i;:::-;23361:121:::0;;:::o;9257:244::-;8534:12;:10;:12::i;:::-;8524:22;;:6;;;;;;;;;;:22;;;8516:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9366:1:::1;9346:22;;:8;:22;;;;9338:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;9456:8;9427:38;;9448:6;::::0;::::1;;;;;;;;9427:38;;;;;;;;;;;;9485:8;9476:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;9257:244:::0;:::o;6903:98::-;6956:7;6983:10;6976:17;;6903:98;:::o;23494:326::-;23586:3;;;;;;;;;;;:12;;;23599:6;23607:8;23617:9;23586:41;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23638:88;23666:6;23674:8;;;;;;;;;;;23684:41;23715:9;23684:16;:26;23701:8;23684:26;;;;;;;;;;;;:30;;:41;;;;:::i;:::-;23638:10;;;;;;;;;;;:27;;;;:88;;;;;;:::i;:::-;23764:8;23756:6;23752:60;;;23774:9;23785:16;:26;23802:8;23785:26;;;;;;;;;;;;23752:60;;;;;;;:::i;:::-;;;;;;;;23494:326;;;:::o;23186:163::-;23289:6;23260:16;:26;23277:8;23260:26;;;;;;;;;;;:35;;;;23324:8;23311:30;23334:6;23311:30;;;;;;:::i;:::-;;;;;;;;23186:163;;:::o;2380:471::-;2438:7;2688:1;2683;:6;2679:47;;;2713:1;2706:8;;;;2679:47;2738:9;2754:1;2750;:5;;;;:::i;:::-;2738:17;;2783:1;2778;2774;:5;;;;:::i;:::-;:10;2766:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2842:1;2835:8;;;2380:471;;;;;:::o;19052:205::-;19153:96;19173:5;19203:27;;;19232:4;19238:2;19242:5;19180:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19153:19;:96::i;:::-;19052:205;;;;:::o;21172:761::-;21596:23;21622:69;21650:4;21622:69;;;;;;;;;;;;;;;;;21630:5;21622:27;;;;:69;;;;;:::i;:::-;21596:95;;21726:1;21706:10;:17;:21;21702:224;;;21848:10;21837:30;;;;;;;;;;;;:::i;:::-;21829:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;21702:224;21242:691;21172:761;;:::o;15881:196::-;15984:12;16016:53;16039:6;16047:4;16053:1;16056:12;16016:22;:53::i;:::-;16009:60;;15881:196;;;;;:::o;17258:979::-;17388:12;17421:18;17432:6;17421:10;:18::i;:::-;17413:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;17547:12;17561:23;17588:6;:11;;17608:8;17619:4;17588:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17546:78;;;;17639:7;17635:595;;;17670:10;17663:17;;;;;;17635:595;17804:1;17784:10;:17;:21;17780:439;;;18047:10;18041:17;18108:15;18095:10;18091:2;18087:19;18080:44;17780:439;18190:12;18183:20;;;;;;;;;;;:::i;:::-;;;;;;;;17258:979;;;;;;;:::o;12963:422::-;13023:4;13231:12;13342:7;13330:20;13322:28;;13376:1;13369:4;:8;13362:15;;;12963:422;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:345::-;842:6;891:2;879:9;870:7;866:23;862:32;859:119;;;897:79;;:::i;:::-;859:119;1017:1;1042:61;1095:7;1086:6;1075:9;1071:22;1042:61;:::i;:::-;1032:71;;988:125;775:345;;;;:::o;1126:329::-;1185:6;1234:2;1222:9;1213:7;1209:23;1205:32;1202:119;;;1240:79;;:::i;:::-;1202:119;1360:1;1385:53;1430:7;1421:6;1410:9;1406:22;1385:53;:::i;:::-;1375:63;;1331:117;1126:329;;;;:::o;1461:474::-;1529:6;1537;1586:2;1574:9;1565:7;1561:23;1557:32;1554:119;;;1592:79;;:::i;:::-;1554:119;1712:1;1737:53;1782:7;1773:6;1762:9;1758:22;1737:53;:::i;:::-;1727:63;;1683:117;1839:2;1865:53;1910:7;1901:6;1890:9;1886:22;1865:53;:::i;:::-;1855:63;;1810:118;1461:474;;;;;:::o;1941:118::-;2028:24;2046:5;2028:24;:::i;:::-;2023:3;2016:37;1941:118;;:::o;2065:373::-;2169:3;2197:38;2229:5;2197:38;:::i;:::-;2251:88;2332:6;2327:3;2251:88;:::i;:::-;2244:95;;2348:52;2393:6;2388:3;2381:4;2374:5;2370:16;2348:52;:::i;:::-;2425:6;2420:3;2416:16;2409:23;;2173:265;2065:373;;;;:::o;2444:179::-;2555:61;2610:5;2555:61;:::i;:::-;2550:3;2543:74;2444:179;;:::o;2629:159::-;2730:51;2775:5;2730:51;:::i;:::-;2725:3;2718:64;2629:159;;:::o;2794:364::-;2882:3;2910:39;2943:5;2910:39;:::i;:::-;2965:71;3029:6;3024:3;2965:71;:::i;:::-;2958:78;;3045:52;3090:6;3085:3;3078:4;3071:5;3067:16;3045:52;:::i;:::-;3122:29;3144:6;3122:29;:::i;:::-;3117:3;3113:39;3106:46;;2886:272;2794:364;;;;:::o;3164:366::-;3306:3;3327:67;3391:2;3386:3;3327:67;:::i;:::-;3320:74;;3403:93;3492:3;3403:93;:::i;:::-;3521:2;3516:3;3512:12;3505:19;;3164:366;;;:::o;3536:::-;3678:3;3699:67;3763:2;3758:3;3699:67;:::i;:::-;3692:74;;3775:93;3864:3;3775:93;:::i;:::-;3893:2;3888:3;3884:12;3877:19;;3536:366;;;:::o;3908:::-;4050:3;4071:67;4135:2;4130:3;4071:67;:::i;:::-;4064:74;;4147:93;4236:3;4147:93;:::i;:::-;4265:2;4260:3;4256:12;4249:19;;3908:366;;;:::o;4280:::-;4422:3;4443:67;4507:2;4502:3;4443:67;:::i;:::-;4436:74;;4519:93;4608:3;4519:93;:::i;:::-;4637:2;4632:3;4628:12;4621:19;;4280:366;;;:::o;4652:::-;4794:3;4815:67;4879:2;4874:3;4815:67;:::i;:::-;4808:74;;4891:93;4980:3;4891:93;:::i;:::-;5009:2;5004:3;5000:12;4993:19;;4652:366;;;:::o;5024:::-;5166:3;5187:67;5251:2;5246:3;5187:67;:::i;:::-;5180:74;;5263:93;5352:3;5263:93;:::i;:::-;5381:2;5376:3;5372:12;5365:19;;5024:366;;;:::o;5396:118::-;5483:24;5501:5;5483:24;:::i;:::-;5478:3;5471:37;5396:118;;:::o;5520:271::-;5650:3;5672:93;5761:3;5752:6;5672:93;:::i;:::-;5665:100;;5782:3;5775:10;;5520:271;;;;:::o;5797:222::-;5890:4;5928:2;5917:9;5913:18;5905:26;;5941:71;6009:1;5998:9;5994:17;5985:6;5941:71;:::i;:::-;5797:222;;;;:::o;6025:442::-;6174:4;6212:2;6201:9;6197:18;6189:26;;6225:71;6293:1;6282:9;6278:17;6269:6;6225:71;:::i;:::-;6306:72;6374:2;6363:9;6359:18;6350:6;6306:72;:::i;:::-;6388;6456:2;6445:9;6441:18;6432:6;6388:72;:::i;:::-;6025:442;;;;;;:::o;6473:::-;6622:4;6660:2;6649:9;6645:18;6637:26;;6673:71;6741:1;6730:9;6726:17;6717:6;6673:71;:::i;:::-;6754:72;6822:2;6811:9;6807:18;6798:6;6754:72;:::i;:::-;6836;6904:2;6893:9;6889:18;6880:6;6836:72;:::i;:::-;6473:442;;;;;;:::o;6921:270::-;7038:4;7076:2;7065:9;7061:18;7053:26;;7089:95;7181:1;7170:9;7166:17;7157:6;7089:95;:::i;:::-;6921:270;;;;:::o;7197:250::-;7304:4;7342:2;7331:9;7327:18;7319:26;;7355:85;7437:1;7426:9;7422:17;7413:6;7355:85;:::i;:::-;7197:250;;;;:::o;7453:313::-;7566:4;7604:2;7593:9;7589:18;7581:26;;7653:9;7647:4;7643:20;7639:1;7628:9;7624:17;7617:47;7681:78;7754:4;7745:6;7681:78;:::i;:::-;7673:86;;7453:313;;;;:::o;7772:419::-;7938:4;7976:2;7965:9;7961:18;7953:26;;8025:9;8019:4;8015:20;8011:1;8000:9;7996:17;7989:47;8053:131;8179:4;8053:131;:::i;:::-;8045:139;;7772:419;;;:::o;8197:::-;8363:4;8401:2;8390:9;8386:18;8378:26;;8450:9;8444:4;8440:20;8436:1;8425:9;8421:17;8414:47;8478:131;8604:4;8478:131;:::i;:::-;8470:139;;8197:419;;;:::o;8622:::-;8788:4;8826:2;8815:9;8811:18;8803:26;;8875:9;8869:4;8865:20;8861:1;8850:9;8846:17;8839:47;8903:131;9029:4;8903:131;:::i;:::-;8895:139;;8622:419;;;:::o;9047:::-;9213:4;9251:2;9240:9;9236:18;9228:26;;9300:9;9294:4;9290:20;9286:1;9275:9;9271:17;9264:47;9328:131;9454:4;9328:131;:::i;:::-;9320:139;;9047:419;;;:::o;9472:::-;9638:4;9676:2;9665:9;9661:18;9653:26;;9725:9;9719:4;9715:20;9711:1;9700:9;9696:17;9689:47;9753:131;9879:4;9753:131;:::i;:::-;9745:139;;9472:419;;;:::o;9897:::-;10063:4;10101:2;10090:9;10086:18;10078:26;;10150:9;10144:4;10140:20;10136:1;10125:9;10121:17;10114:47;10178:131;10304:4;10178:131;:::i;:::-;10170:139;;9897:419;;;:::o;10322:222::-;10415:4;10453:2;10442:9;10438:18;10430:26;;10466:71;10534:1;10523:9;10519:17;10510:6;10466:71;:::i;:::-;10322:222;;;;:::o;10550:332::-;10671:4;10709:2;10698:9;10694:18;10686:26;;10722:71;10790:1;10779:9;10775:17;10766:6;10722:71;:::i;:::-;10803:72;10871:2;10860:9;10856:18;10847:6;10803:72;:::i;:::-;10550:332;;;;;:::o;10969:98::-;11020:6;11054:5;11048:12;11038:22;;10969:98;;;:::o;11073:99::-;11125:6;11159:5;11153:12;11143:22;;11073:99;;;:::o;11178:147::-;11279:11;11316:3;11301:18;;11178:147;;;;:::o;11331:169::-;11415:11;11449:6;11444:3;11437:19;11489:4;11484:3;11480:14;11465:29;;11331:169;;;;:::o;11506:185::-;11546:1;11563:20;11581:1;11563:20;:::i;:::-;11558:25;;11597:20;11615:1;11597:20;:::i;:::-;11592:25;;11636:1;11626:35;;11641:18;;:::i;:::-;11626:35;11683:1;11680;11676:9;11671:14;;11506:185;;;;:::o;11697:348::-;11737:7;11760:20;11778:1;11760:20;:::i;:::-;11755:25;;11794:20;11812:1;11794:20;:::i;:::-;11789:25;;11982:1;11914:66;11910:74;11907:1;11904:81;11899:1;11892:9;11885:17;11881:105;11878:131;;;11989:18;;:::i;:::-;11878:131;12037:1;12034;12030:9;12019:20;;11697:348;;;;:::o;12051:96::-;12088:7;12117:24;12135:5;12117:24;:::i;:::-;12106:35;;12051:96;;;:::o;12153:90::-;12187:7;12230:5;12223:13;12216:21;12205:32;;12153:90;;;:::o;12249:126::-;12286:7;12326:42;12319:5;12315:54;12304:65;;12249:126;;;:::o;12381:77::-;12418:7;12447:5;12436:16;;12381:77;;;:::o;12464:150::-;12538:9;12571:37;12602:5;12571:37;:::i;:::-;12558:50;;12464:150;;;:::o;12620:140::-;12684:9;12717:37;12748:5;12717:37;:::i;:::-;12704:50;;12620:140;;;:::o;12766:126::-;12816:9;12849:37;12880:5;12849:37;:::i;:::-;12836:50;;12766:126;;;:::o;12898:113::-;12948:9;12981:24;12999:5;12981:24;:::i;:::-;12968:37;;12898:113;;;:::o;13017:307::-;13085:1;13095:113;13109:6;13106:1;13103:13;13095:113;;;13194:1;13189:3;13185:11;13179:18;13175:1;13170:3;13166:11;13159:39;13131:2;13128:1;13124:10;13119:15;;13095:113;;;13226:6;13223:1;13220:13;13217:101;;;13306:1;13297:6;13292:3;13288:16;13281:27;13217:101;13066:258;13017:307;;;:::o;13330:180::-;13378:77;13375:1;13368:88;13475:4;13472:1;13465:15;13499:4;13496:1;13489:15;13516:180;13564:77;13561:1;13554:88;13661:4;13658:1;13651:15;13685:4;13682:1;13675:15;13825:117;13934:1;13931;13924:12;13948:102;13989:6;14040:2;14036:7;14031:2;14024:5;14020:14;14016:28;14006:38;;13948:102;;;:::o;14056:225::-;14196:34;14192:1;14184:6;14180:14;14173:58;14265:8;14260:2;14252:6;14248:15;14241:33;14056:225;:::o;14287:161::-;14427:13;14423:1;14415:6;14411:14;14404:37;14287:161;:::o;14454:220::-;14594:34;14590:1;14582:6;14578:14;14571:58;14663:3;14658:2;14650:6;14646:15;14639:28;14454:220;:::o;14680:182::-;14820:34;14816:1;14808:6;14804:14;14797:58;14680:182;:::o;14868:179::-;15008:31;15004:1;14996:6;14992:14;14985:55;14868:179;:::o;15053:229::-;15193:34;15189:1;15181:6;15177:14;15170:58;15262:12;15257:2;15249:6;15245:15;15238:37;15053:229;:::o;15288:122::-;15361:24;15379:5;15361:24;:::i;:::-;15354:5;15351:35;15341:63;;15400:1;15397;15390:12;15341:63;15288:122;:::o;15416:116::-;15486:21;15501:5;15486:21;:::i;:::-;15479:5;15476:32;15466:60;;15522:1;15519;15512:12;15466:60;15416:116;:::o;15538:122::-;15611:24;15629:5;15611:24;:::i;:::-;15604:5;15601:35;15591:63;;15650:1;15647;15640:12;15591:63;15538:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1013200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_commodityPrices(uint256)": "infinite",
								"nft()": "2667",
								"owner()": "2566",
								"quoteErc20()": "2601",
								"renounceOwnership()": "30313",
								"safeBuyToken(uint256,uint256)": "infinite",
								"safeListToken(uint256,uint256)": "infinite",
								"transferOwnership(address)": "30728",
								"treasury()": "2514"
							},
							"internal": {
								"_buyToken(address,uint256,uint256)": "infinite",
								"_listToken(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8133,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8123,
									"end": 8135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8103,
									"end": 8135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8155,
									"end": 8164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8146,
									"end": 8152,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8146,
									"end": 8164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8213,
									"end": 8222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8209,
									"end": 8210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8223,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8092,
									"end": 8231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22914,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22901,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22915,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22942,
									"end": 22946,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22919,
									"end": 22930,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22919,
									"end": 22947,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 22890,
									"end": 22947,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 22882,
									"end": 22948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22997,
									"end": 22998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 22985,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 22999,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23033,
									"end": 23037,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23003,
									"end": 23021,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23003,
									"end": 23038,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 22967,
									"end": 23038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 22959,
									"end": 23039,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 23084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23053,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23050,
									"end": 23053,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23050,
									"end": 23085,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23116,
									"end": 23134,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23106,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23096,
									"end": 23106,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23096,
									"end": 23135,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23157,
									"end": 23166,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23154,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 23146,
									"end": 23154,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23146,
									"end": 23166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22757,
									"end": 23174,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6956,
									"end": 6963,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6983,
									"end": 6993,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6993,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6903,
									"end": 7001,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 277,
									"end": 396,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 277,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 277,
									"end": 396,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 516,
									"end": 523,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 496,
									"end": 505,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 492,
									"end": 514,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 450,
									"end": 524,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 450,
									"end": 524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 406,
									"end": 534,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 631,
									"end": 653,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 589,
									"end": 663,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 589,
									"end": 663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 544,
									"end": 673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 774,
									"end": 783,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 770,
									"end": 792,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 728,
									"end": 802,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 728,
									"end": 802,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 683,
									"end": 812,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 961,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 961,
									"end": 996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1127,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1074,
									"end": 1128,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1457,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1449,
									"end": 1484,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1488,
									"end": 1500,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22320,
									"end": 24033,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9b01cf6cd83383ec38212674860820ed115e941efbeaa861b5c8b13a514626164736f6c63430008070033",
									".code": [
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "61D027B3"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "D3F50573"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "170D542C"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "3E56E6C3"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "432BE4D0"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22320,
											"end": 24033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22465,
											"end": 22489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23944,
											"end": 23945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23917,
											"end": 23933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23934,
											"end": 23942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23945,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23909,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23972,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23982,
											"end": 23994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23982,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23982,
											"end": 23994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23982,
											"end": 23994,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23982,
											"end": 23994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23996,
											"end": 24004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24006,
											"end": 24015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23972,
											"end": 23981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23972,
											"end": 24016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23972,
											"end": 24016,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 23972,
											"end": 24016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23832,
											"end": 24024,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22534,
											"end": 22585,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22431,
											"end": 22458,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22498,
											"end": 22521,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9024,
											"end": 9064,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9092,
											"end": 9093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9075,
											"end": 9094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8350,
											"end": 8357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 8383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23446,
											"end": 23474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23457,
											"end": 23465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23467,
											"end": 23473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23446,
											"end": 23456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23446,
											"end": 23474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23446,
											"end": 23474,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23446,
											"end": 23474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23361,
											"end": 23482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8534,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8534,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8524,
											"end": 8546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8516,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 9338,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9456,
											"end": 9464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9448,
											"end": 9454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9427,
											"end": 9465,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9485,
											"end": 9493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 9493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 6963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6993,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23586,
											"end": 23589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23586,
											"end": 23598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23598,
											"name": "PUSH",
											"source": 0,
											"value": "24EEEDF6"
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23607,
											"end": 23615,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23617,
											"end": 23626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23586,
											"end": 23627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23666,
											"end": 23672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23674,
											"end": 23682,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23715,
											"end": 23724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23701,
											"end": 23709,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 23684,
											"end": 23714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 23684,
											"end": 23725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23638,
											"end": 23648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23638,
											"end": 23665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 23638,
											"end": 23665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 23638,
											"end": 23726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23764,
											"end": 23772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23756,
											"end": 23762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "BEAE048C6D270D9469F86CF6E8FEDDA3C60AD770F16C24C9FC131C8E9A09101D"
										},
										{
											"begin": 23774,
											"end": 23783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23802,
											"end": 23810,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23752,
											"end": 23812,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23494,
											"end": 23820,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23186,
											"end": 23349,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23186,
											"end": 23349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23289,
											"end": 23295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23277,
											"end": 23285,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23260,
											"end": 23286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23295,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23260,
											"end": 23295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23324,
											"end": 23332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "PUSH",
											"source": 0,
											"value": "92664190CCA12ACA9CD5309D87194BDDA75BB51362D71C06E1A6F75C7C765711"
										},
										{
											"begin": 23334,
											"end": 23340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23311,
											"end": 23341,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 23186,
											"end": 23349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23186,
											"end": 23349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23186,
											"end": 23349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2438,
											"end": 2445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2706,
											"end": 2714,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2679,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2755,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2774,
											"end": 2784,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2766,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19173,
											"end": 19178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19203,
											"end": 19230,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19203,
											"end": 19230,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19203,
											"end": 19230,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19232,
											"end": 19236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19240,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19242,
											"end": 19247,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19153,
											"end": 19249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19153,
											"end": 19249,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 19153,
											"end": 19249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21172,
											"end": 21933,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21172,
											"end": 21933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21596,
											"end": 21619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21650,
											"end": 21654,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21630,
											"end": 21635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21622,
											"end": 21649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 21622,
											"end": 21649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 21622,
											"end": 21691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21596,
											"end": 21691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21596,
											"end": 21691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21726,
											"end": 21727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21706,
											"end": 21716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21706,
											"end": 21723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21706,
											"end": 21727,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21926,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21702,
											"end": 21926,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21848,
											"end": 21858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 21837,
											"end": 21867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 21829,
											"end": 21914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21926,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 21702,
											"end": 21926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21242,
											"end": 21933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15984,
											"end": 15996,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16016,
											"end": 16069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16039,
											"end": 16045,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16047,
											"end": 16051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16053,
											"end": 16054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16056,
											"end": 16068,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16016,
											"end": 16038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 16016,
											"end": 16069,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16016,
											"end": 16069,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16016,
											"end": 16069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16009,
											"end": 16069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15881,
											"end": 16077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17388,
											"end": 17400,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17421,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17432,
											"end": 17438,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17421,
											"end": 17431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 17421,
											"end": 17439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17421,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17421,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 17413,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17561,
											"end": 17584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17594,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17588,
											"end": 17599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17608,
											"end": 17616,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17619,
											"end": 17623,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17588,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17546,
											"end": 17624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17639,
											"end": 17646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17635,
											"end": 18230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17635,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17635,
											"end": 18230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17670,
											"end": 17680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17663,
											"end": 17680,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17635,
											"end": 18230,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 17635,
											"end": 18230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17804,
											"end": 17805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17784,
											"end": 17794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17784,
											"end": 17801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17784,
											"end": 17805,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 18219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17780,
											"end": 18219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18047,
											"end": 18057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18108,
											"end": 18123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18095,
											"end": 18105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18091,
											"end": 18093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18087,
											"end": 18106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18080,
											"end": 18124,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17780,
											"end": 18219,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17780,
											"end": 18219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18190,
											"end": 18202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17258,
											"end": 18237,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13023,
											"end": 13027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13231,
											"end": 13243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13342,
											"end": 13349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13330,
											"end": 13350,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13322,
											"end": 13350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13376,
											"end": 13377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13369,
											"end": 13373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13369,
											"end": 13377,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13362,
											"end": 13377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13362,
											"end": 13377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13362,
											"end": 13377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 13385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 842,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 894,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 859,
											"end": 978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 859,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 897,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 978,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 859,
											"end": 978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1071,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1042,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 775,
											"end": 1120,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1232,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1237,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1202,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1385,
											"end": 1438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1331,
											"end": 1448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1455,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1592,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1554,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1782,
											"end": 1789,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1771,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1737,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1886,
											"end": 1908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1935,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2046,
											"end": 2051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2028,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 2059,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2197,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2332,
											"end": 2338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2330,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2251,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2251,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2251,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2339,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2400,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2444,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2444,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2610,
											"end": 2615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2555,
											"end": 2616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 2616,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 2555,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2629,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 2730,
											"end": 2781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2730,
											"end": 2781,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2730,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2788,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2943,
											"end": 2948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2910,
											"end": 2949,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2910,
											"end": 2949,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2910,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3029,
											"end": 3035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2965,
											"end": 3036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3036,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2965,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3036,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 3036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3088,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3045,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3122,
											"end": 3151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3122,
											"end": 3151,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3122,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 3158,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3391,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3327,
											"end": 3394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3394,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3327,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3320,
											"end": 3394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3403,
											"end": 3496,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3403,
											"end": 3496,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3403,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3516,
											"end": 3519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3699,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3775,
											"end": 3868,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3775,
											"end": 3868,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3775,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3536,
											"end": 3902,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4130,
											"end": 4133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4071,
											"end": 4138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4071,
											"end": 4138,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4071,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 4147,
											"end": 4240,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4147,
											"end": 4240,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 4147,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4256,
											"end": 4268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4268,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4274,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 4443,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 4519,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4632,
											"end": 4635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4280,
											"end": 4646,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4879,
											"end": 4881,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4874,
											"end": 4877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4815,
											"end": 4882,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4815,
											"end": 4882,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4815,
											"end": 4882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4891,
											"end": 4984,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4891,
											"end": 4984,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4891,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5018,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 5187,
											"end": 5254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5187,
											"end": 5254,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5187,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5263,
											"end": 5356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5263,
											"end": 5356,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5263,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5376,
											"end": 5379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5372,
											"end": 5384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5390,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5396,
											"end": 5514,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5396,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5501,
											"end": 5506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5483,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5672,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5761,
											"end": 5764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5758,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5672,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5672,
											"end": 5765,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5672,
											"end": 5765,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5672,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5890,
											"end": 5894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5917,
											"end": 5926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 5931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5905,
											"end": 5931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6009,
											"end": 6010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5994,
											"end": 6011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5985,
											"end": 5991,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5941,
											"end": 6012,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5941,
											"end": 6012,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 5941,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 6019,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6201,
											"end": 6210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6282,
											"end": 6291,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6278,
											"end": 6295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6275,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 6225,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6363,
											"end": 6372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 6306,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6456,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6438,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6388,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6467,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6741,
											"end": 6742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6739,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6723,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6673,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6673,
											"end": 6744,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6744,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 6673,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6798,
											"end": 6804,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6754,
											"end": 6826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6754,
											"end": 6826,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6754,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6904,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6836,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 6836,
											"end": 6908,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6836,
											"end": 6908,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6836,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6915,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7076,
											"end": 7078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 7089,
											"end": 7184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7089,
											"end": 7184,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7089,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 7191,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7304,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7331,
											"end": 7340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7319,
											"end": 7345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7437,
											"end": 7438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 7355,
											"end": 7440,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7355,
											"end": 7440,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7355,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7197,
											"end": 7447,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7566,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7581,
											"end": 7607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7639,
											"end": 7640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7617,
											"end": 7664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7681,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 7681,
											"end": 7759,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7681,
											"end": 7759,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 7681,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7759,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7453,
											"end": 7766,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7938,
											"end": 7942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7978,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8025,
											"end": 8034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8019,
											"end": 8023,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8035,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 8036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 8053,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 8191,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8363,
											"end": 8367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8450,
											"end": 8459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8460,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8421,
											"end": 8438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8604,
											"end": 8608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8478,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8609,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8788,
											"end": 8792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8829,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8865,
											"end": 8885,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8859,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9029,
											"end": 9033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8903,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 9034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8895,
											"end": 9034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8622,
											"end": 9041,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9236,
											"end": 9254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9228,
											"end": 9254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9300,
											"end": 9309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9264,
											"end": 9311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9454,
											"end": 9458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9328,
											"end": 9459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9328,
											"end": 9459,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9328,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9320,
											"end": 9459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9320,
											"end": 9459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9047,
											"end": 9466,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9638,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9676,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9674,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9725,
											"end": 9734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9715,
											"end": 9735,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9700,
											"end": 9709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9696,
											"end": 9713,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9689,
											"end": 9736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9753,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9753,
											"end": 9884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9753,
											"end": 9884,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9753,
											"end": 9884,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9753,
											"end": 9884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9745,
											"end": 9884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9472,
											"end": 9891,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10090,
											"end": 10099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10086,
											"end": 10104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10140,
											"end": 10160,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10136,
											"end": 10137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10304,
											"end": 10308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 10178,
											"end": 10309,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10178,
											"end": 10309,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 10178,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9897,
											"end": 10316,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10442,
											"end": 10451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10466,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10523,
											"end": 10532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10466,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10466,
											"end": 10537,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10466,
											"end": 10537,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10466,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10671,
											"end": 10675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10709,
											"end": 10711,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 10712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 10790,
											"end": 10791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10779,
											"end": 10788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10722,
											"end": 10793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10722,
											"end": 10793,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 10722,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10871,
											"end": 10873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 10853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10803,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10803,
											"end": 10875,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10803,
											"end": 10875,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 10803,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10882,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11020,
											"end": 11026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11054,
											"end": 11059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11038,
											"end": 11060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10969,
											"end": 11067,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11153,
											"end": 11165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11073,
											"end": 11172,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11279,
											"end": 11290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11415,
											"end": 11426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11449,
											"end": 11455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11437,
											"end": 11456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11489,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11484,
											"end": 11487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11480,
											"end": 11494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11465,
											"end": 11494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11331,
											"end": 11500,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11546,
											"end": 11547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 11581,
											"end": 11582,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11563,
											"end": 11583,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11563,
											"end": 11583,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 11563,
											"end": 11583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11558,
											"end": 11583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 11597,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11592,
											"end": 11617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 11641,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11680,
											"end": 11681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11676,
											"end": 11685,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 11760,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 11812,
											"end": 11813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 11794,
											"end": 11814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11794,
											"end": 11814,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 11794,
											"end": 11814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11814,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11914,
											"end": 11980,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11984,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11907,
											"end": 11908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11904,
											"end": 11985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11892,
											"end": 11901,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11881,
											"end": 11986,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12009,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 11878,
											"end": 12009,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11989,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11878,
											"end": 12009,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 11878,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12030,
											"end": 12039,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12019,
											"end": 12039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11697,
											"end": 12045,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 12135,
											"end": 12140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12147,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12187,
											"end": 12194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12230,
											"end": 12235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12223,
											"end": 12236,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12216,
											"end": 12237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12205,
											"end": 12237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12326,
											"end": 12368,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12319,
											"end": 12324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12369,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12249,
											"end": 12375,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12418,
											"end": 12425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12447,
											"end": 12452,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12381,
											"end": 12458,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12538,
											"end": 12547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 12602,
											"end": 12607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 12571,
											"end": 12608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12558,
											"end": 12608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12558,
											"end": 12608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12614,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12717,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 12748,
											"end": 12753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12717,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12717,
											"end": 12754,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 12754,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 12717,
											"end": 12754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12760,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12816,
											"end": 12825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 12880,
											"end": 12885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12849,
											"end": 12886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 12849,
											"end": 12886,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12849,
											"end": 12886,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 12849,
											"end": 12886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12892,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 12957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 12999,
											"end": 13004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 12981,
											"end": 13005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12981,
											"end": 13005,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 12981,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 13005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 13005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12898,
											"end": 13011,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13109,
											"end": 13115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13103,
											"end": 13116,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13189,
											"end": 13192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13185,
											"end": 13196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13175,
											"end": 13176,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13170,
											"end": 13173,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13166,
											"end": 13177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13159,
											"end": 13198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13131,
											"end": 13133,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13134,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 13095,
											"end": 13208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13233,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 13217,
											"end": 13318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13297,
											"end": 13303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13292,
											"end": 13295,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13288,
											"end": 13304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13318,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 13217,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13066,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13324,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13330,
											"end": 13510,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 13330,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13378,
											"end": 13455,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13375,
											"end": 13376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13368,
											"end": 13456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13479,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13472,
											"end": 13473,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13465,
											"end": 13480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13499,
											"end": 13503,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13496,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13489,
											"end": 13504,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13516,
											"end": 13696,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 13516,
											"end": 13696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13564,
											"end": 13641,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13561,
											"end": 13562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13665,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 13658,
											"end": 13659,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13651,
											"end": 13666,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13689,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13682,
											"end": 13683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13675,
											"end": 13690,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13825,
											"end": 13942,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 13825,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13931,
											"end": 13932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13924,
											"end": 13936,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13989,
											"end": 13995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14040,
											"end": 14042,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14036,
											"end": 14043,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14031,
											"end": 14033,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14024,
											"end": 14029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14020,
											"end": 14034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14006,
											"end": 14044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14006,
											"end": 14044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13948,
											"end": 14050,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14056,
											"end": 14281,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 14056,
											"end": 14281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14196,
											"end": 14230,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14180,
											"end": 14194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14173,
											"end": 14231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14265,
											"end": 14273,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14260,
											"end": 14262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14252,
											"end": 14258,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14248,
											"end": 14263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14241,
											"end": 14274,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14056,
											"end": 14281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14056,
											"end": 14281,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14287,
											"end": 14448,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 14287,
											"end": 14448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14427,
											"end": 14440,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F74206F6E206C697374000000000000000000000000000000000000000000"
										},
										{
											"begin": 14423,
											"end": 14424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14415,
											"end": 14421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14411,
											"end": 14425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14404,
											"end": 14441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14287,
											"end": 14448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14287,
											"end": 14448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14454,
											"end": 14674,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 14454,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14594,
											"end": 14628,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 14590,
											"end": 14591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14582,
											"end": 14588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14578,
											"end": 14592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14571,
											"end": 14629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14663,
											"end": 14666,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14658,
											"end": 14660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14650,
											"end": 14656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14639,
											"end": 14667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14674,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14680,
											"end": 14862,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 14680,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14820,
											"end": 14854,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 14816,
											"end": 14817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14808,
											"end": 14814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14804,
											"end": 14818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14797,
											"end": 14855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14862,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14868,
											"end": 15047,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14868,
											"end": 15047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15008,
											"end": 15039,
											"name": "PUSH",
											"source": 1,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 15004,
											"end": 15005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14996,
											"end": 15002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14992,
											"end": 15006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 15047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14868,
											"end": 15047,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15053,
											"end": 15282,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 15053,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15193,
											"end": 15227,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 15189,
											"end": 15190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15181,
											"end": 15187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15177,
											"end": 15191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15170,
											"end": 15228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15262,
											"end": 15274,
											"name": "PUSH",
											"source": 1,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 15257,
											"end": 15259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15249,
											"end": 15255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15053,
											"end": 15282,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15288,
											"end": 15410,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 15288,
											"end": 15410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 15379,
											"end": 15384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 15361,
											"end": 15385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15361,
											"end": 15385,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 15361,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15354,
											"end": 15359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15351,
											"end": 15386,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 15341,
											"end": 15404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15400,
											"end": 15401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15390,
											"end": 15402,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15404,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 15341,
											"end": 15404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15410,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15416,
											"end": 15532,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15416,
											"end": 15532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15486,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 15501,
											"end": 15506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15486,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 15486,
											"end": 15507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15486,
											"end": 15507,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 15486,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15476,
											"end": 15508,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 15466,
											"end": 15526,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15519,
											"end": 15520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15512,
											"end": 15524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15526,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 15466,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15532,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15538,
											"end": 15660,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 15538,
											"end": 15660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 15629,
											"end": 15634,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 15611,
											"end": 15635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15611,
											"end": 15635,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 15611,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15604,
											"end": 15609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15601,
											"end": 15636,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 15591,
											"end": 15654,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15650,
											"end": 15651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15647,
											"end": 15648,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15640,
											"end": 15652,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15654,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 15591,
											"end": 15654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15660,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_commodityPrices(uint256)": "432be4d0",
							"nft()": "47ccca02",
							"owner()": "8da5cb5b",
							"quoteErc20()": "170d542c",
							"renounceOwnership()": "715018a6",
							"safeBuyToken(uint256,uint256)": "3e56e6c3",
							"safeListToken(uint256,uint256)": "d3f50573",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteErc20Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_commodityPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC1155Mintable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteErc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"}],\"name\":\"safeBuyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"safeListToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":\"VendingMachine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"atta-movies/ERC1155/ERC1155VendingMachine.sol\":{\"keccak256\":\"0x06aba2322274867e2e07103baaab8867c6279affe7422673609e333331b8fd27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f85d60a64c1b6ed93e137ddadb612928fab9de727c81163dce8e26a3771a79\",\"dweb:/ipfs/QmfLXoDhqVAxTGTbQ2q4KJDrP1d3UJKeDEvEXnk3Yn9bVV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 292,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:VendingMachine",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 911,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:VendingMachine",
								"label": "nft",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC1155Mintable)899"
							},
							{
								"astId": 914,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:VendingMachine",
								"label": "quoteErc20",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)469"
							},
							{
								"astId": 916,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:VendingMachine",
								"label": "treasury",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 920,
								"contract": "atta-movies/ERC1155/ERC1155VendingMachine.sol:VendingMachine",
								"label": "_commodityPrices",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155Mintable)899": {
								"encoding": "inplace",
								"label": "contract IERC1155Mintable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)469": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"atta-movies/ERC1155/ERC1155VendingMachine.sol": {
				"ast": {
					"absolutePath": "atta-movies/ERC1155/ERC1155VendingMachine.sol",
					"exportedSymbols": {
						"Address": [
							662
						],
						"Context": [
							287
						],
						"IERC1155Mintable": [
							899
						],
						"IERC20": [
							469
						],
						"Math": [
							266
						],
						"Ownable": [
							393
						],
						"SafeERC20": [
							876
						],
						"SafeMath": [
							195
						],
						"VendingMachine": [
							1093
						]
					},
					"id": 1094,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "159:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "186:575:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "SafeMath",
							"nameLocation": "771:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1093:114:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1112:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 27,
														"src": "1104:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1120:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1116:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1104:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1145:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1148:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1132:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1132:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1132:46:0"
											},
											{
												"expression": {
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1198:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1191:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "787:233:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1035:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1047:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1039:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1058:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1050:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:0"
									},
									"scope": 195,
									"src": "1026:181:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1557:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 39,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1579:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 40,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "1582:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															45,
															73
														],
														"referencedDeclaration": 73,
														"src": "1575:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1575:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 43,
												"nodeType": "Return",
												"src": "1568:50:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1215:269:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1499:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:0"
									},
									"scope": 195,
									"src": "1490:136:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2024:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 58,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "2043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 59,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "2048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2043:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 61,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "2051:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "2035:29:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2083:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 72,
														"src": "2075:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 64,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 66,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2087:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 67,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2091:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2087:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2075:17:0"
											},
											{
												"expression": {
													"id": 70,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "2112:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 56,
												"id": 71,
												"nodeType": "Return",
												"src": "2105:8:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1634:289:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1938:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1950:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1942:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1961:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1953:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1978:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "1964:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 51,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1964:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1941:50:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2015:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2014:9:0"
									},
									"scope": 195,
									"src": "1929:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2447:404:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 83,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2683:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 89,
												"nodeType": "IfStatement",
												"src": "2679:47:0",
												"trueBody": {
													"id": 88,
													"nodeType": "Block",
													"src": "2691:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 82,
															"id": 87,
															"nodeType": "Return",
															"src": "2706:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2746:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 107,
														"src": "2738:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "2750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "2754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2738:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 97,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2774:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 98,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 76,
																	"src": "2778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "2783:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2786:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2766:56:0"
											},
											{
												"expression": {
													"id": 105,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2842:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 106,
												"nodeType": "Return",
												"src": "2835:8:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2129:245:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2389:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2401:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2393:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2412:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2404:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:22:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2438:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:9:0"
									},
									"scope": 195,
									"src": "2380:471:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3394:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 119,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "3416:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 120,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3422:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 118,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															153
														],
														"referencedDeclaration": 153,
														"src": "3412:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3412:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 117,
												"id": 123,
												"nodeType": "Return",
												"src": "3405:46:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2859:462:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3336:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3359:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:22:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "3385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3384:9:0"
									},
									"scope": 195,
									"src": "3327:132:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "4050:183:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "4069:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4069:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 141,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4076:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "4061:28:0"
											},
											{
												"assignments": [
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "4108:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "4100:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4100:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4112:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 147,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "4116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4112:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4100:17:0"
											},
											{
												"expression": {
													"id": 150,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 145,
													"src": "4224:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 136,
												"id": 151,
												"nodeType": "Return",
												"src": "4217:8:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3467:482:0",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3964:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3968:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3987:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3979:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4004:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3990:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 131,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3967:50:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4041:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4040:9:0"
									},
									"scope": 195,
									"src": "3955:278:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "4765:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 164,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4787:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 165,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "4790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4793:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 163,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															170,
															194
														],
														"referencedDeclaration": 194,
														"src": "4783:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "4776:44:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4241:451:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4707:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4719:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4711:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:22:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:9:0"
									},
									"scope": 195,
									"src": "4698:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5408:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "5427:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5432:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 186,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "5435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5419:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5466:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5466:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 192,
												"nodeType": "Return",
												"src": "5459:12:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4836:471:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "5322:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5334:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5326:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5345:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5337:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5362:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5348:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5348:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:50:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "5399:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:9:0"
									},
									"scope": 195,
									"src": "5313:166:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1094,
							"src": "763:4719:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "5536:75:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Math",
							"nameLocation": "5621:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "5767:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 207,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "5790:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 210,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "5798:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5785:14:0",
													"trueExpression": {
														"id": 209,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "5794:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 212,
												"nodeType": "Return",
												"src": "5778:21:0"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5633:61:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5709:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5732:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5724:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5712:22:0"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "5758:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:0"
									},
									"scope": 266,
									"src": "5700:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "5950:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 224,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 225,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "5972:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5968:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 228,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "5980:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "5968:13:0",
													"trueExpression": {
														"id": 227,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5976:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 230,
												"nodeType": "Return",
												"src": "5961:20:0"
											}
										]
									},
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "5815:62:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5892:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5904:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5896:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5915:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5907:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "5941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5940:9:0"
									},
									"scope": 266,
									"src": "5883:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "6179:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 242,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "6253:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6257:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6253:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 245,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 246,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 237,
																		"src": "6263:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6267:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "6263:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 249,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6252:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 251,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 235,
																					"src": "6274:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 252,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6278:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6274:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 254,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 237,
																					"src": "6282:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 255,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6286:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6282:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6274:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 258,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6291:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "6273:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6272:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6252:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 263,
												"nodeType": "Return",
												"src": "6245:48:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "5997:105:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "6117:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6133:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6144:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6136:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6124:22:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "6170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:9:0"
									},
									"scope": 266,
									"src": "6108:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1094,
							"src": "5613:691:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "Context",
							"nameLocation": "6888:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "6965:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6983:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6983:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 270,
												"id": 273,
												"nodeType": "Return",
												"src": "6976:17:0"
											}
										]
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "6912:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6922:2:0"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "6956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6955:9:0"
									},
									"scope": 287,
									"src": "6903:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "7074:168:0",
										"statements": [
											{
												"expression": {
													"id": 280,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "7085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$287",
														"typeString": "contract Context"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "7085:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7226:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7226:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 279,
												"id": 284,
												"nodeType": "Return",
												"src": "7219:15:0"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7018:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7026:2:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "7060:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7059:14:0"
									},
									"scope": 287,
									"src": "7009:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1094,
							"src": "6870:375:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 287,
										"src": "7840:7:0"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "7840:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "7304:505:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 393,
							"linearizedBaseContracts": [
								393,
								287
							],
							"name": "Ownable",
							"nameLocation": "7829:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 292,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "7871:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 393,
									"src": "7855:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 291,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7855:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 298,
									"name": "OwnershipTransferred",
									"nameLocation": "7892:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "7929:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7913:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "7960:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7944:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:57:0"
									},
									"src": "7886:84:0"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "8092:139:0",
										"statements": [
											{
												"assignments": [
													303
												],
												"declarations": [
													{
														"constant": false,
														"id": 303,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "8111:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "8103:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 302,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8103:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 306,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 304,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "8123:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8103:32:0"
											},
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "8146:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "8155:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8146:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "8146:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8201:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 312,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8201:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8201:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "8213:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 311,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "8180:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8180:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "8175:48:0"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "7978:93:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 320,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8089:2:0"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8092:0:0"
									},
									"scope": 393,
									"src": "8077:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "8359:32:0",
										"statements": [
											{
												"expression": {
													"id": 326,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 292,
													"src": "8377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 325,
												"id": 327,
												"nodeType": "Return",
												"src": "8370:13:0"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "8239:67:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8321:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8326:2:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "8350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:0"
									},
									"scope": 393,
									"src": "8312:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "8505:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 333,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "8524:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 334,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "8534:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8534:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8524:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8548:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8516:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "8516:67:0"
											},
											{
												"id": 340,
												"nodeType": "PlaceholderStatement",
												"src": "8594:1:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "8399:79:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 342,
									"name": "onlyOwner",
									"nameLocation": "8493:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8502:2:0"
									},
									"src": "8484:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "9008:94:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 349,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9061:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9053:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 350,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9053:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9053:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9024:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9024:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "EmitStatement",
												"src": "9019:45:0"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9075:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 357,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9084:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9084:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9075:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "9075:19:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "8611:337:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 345,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "8998:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8998:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "8963:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8980:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9008:0:0"
									},
									"scope": 393,
									"src": "8954:148:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "9327:174:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 373,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "9346:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9366:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9358:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9358:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9358:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9346:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9370:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9338:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "9338:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 383,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9448:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "9456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 382,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "9427:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9427:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "EmitStatement",
												"src": "9422:43:0"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 387,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "9476:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 388,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "9485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9476:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "9476:17:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "9110:141:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 369,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "9317:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9317:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9266:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9292:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "9284:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9283:18:0"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9327:0:0"
									},
									"scope": 393,
									"src": "9257:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1094,
							"src": "7811:1693:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "9567:72:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "IERC20",
							"nameLocation": "9651:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "9665:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "9748:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9759:2:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "9785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9784:9:0"
									},
									"scope": 469,
									"src": "9739:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "9802:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "9891:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9900:17:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9941:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9940:9:0"
									},
									"scope": 469,
									"src": "9882:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "9958:215:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "10188:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10205:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10224:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10216:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10196:35:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "10250:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10249:6:0"
									},
									"scope": 469,
									"src": "10179:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "10264:270:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "10549:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10567:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10559:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10558:32:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "10614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10613:9:0"
									},
									"scope": 469,
									"src": "10540:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "10631:655:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "11301:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11317:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11326:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11308:33:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11360:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 435,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11360:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11359:6:0"
									},
									"scope": 469,
									"src": "11292:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "11374:304:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "11693:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "11714:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11706:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11730:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11722:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11741:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11705:51:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "11775:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11774:6:0"
									},
									"scope": 469,
									"src": "11684:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "11789:163:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 459,
									"name": "Transfer",
									"nameLocation": "11964:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11989:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11973:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12011:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "11995:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12023:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "12015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11972:57:0"
									},
									"src": "11958:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "12038:151:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 468,
									"name": "Approval",
									"nameLocation": "12201:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12210:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12233:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12266:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "12258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12209:63:0"
									},
									"src": "12195:78:0"
								}
							],
							"scope": 1094,
							"src": "9641:2635:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "12282:69:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "Address",
							"nameLocation": "12361:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "13029:356:0",
										"statements": [
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "13239:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 486,
														"src": "13231:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"nodeType": "VariableDeclarationStatement",
												"src": "13231:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "13320:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13322:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "13342:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "13330:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "13330:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13322:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "13342:7:0",
														"valueSize": 1
													},
													{
														"declaration": 479,
														"isOffset": false,
														"isSlot": false,
														"src": "13322:4:0",
														"valueSize": 1
													}
												],
												"id": 481,
												"nodeType": "InlineAssembly",
												"src": "13311:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "13369:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13369:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 477,
												"id": 485,
												"nodeType": "Return",
												"src": "13362:15:0"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "12376:581:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "12972:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12991:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "12983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12982:17:0"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "13023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:6:0"
									},
									"scope": 662,
									"src": "12963:422:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "14391:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 498,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "14418:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 496,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "14410:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14410:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "14410:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14435:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14410:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14443:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14402:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "14402:73:0"
											},
											{
												"assignments": [
													507,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14572:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 520,
														"src": "14567:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 506,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 514,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14617:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 508,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "14585:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "14585:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14608:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "14585:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14585:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14566:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "14639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14648:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14631:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "14631:78:0"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "13393:921:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "14329:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14355:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14339:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14339:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14374:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "14366:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14338:43:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14391:0:0"
									},
									"scope": 662,
									"src": "14320:397:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "15567:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "15596:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "15604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15610:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 531,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															538,
															558
														],
														"referencedDeclaration": 558,
														"src": "15583:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15583:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 530,
												"id": 536,
												"nodeType": "Return",
												"src": "15576:67:0"
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "14725:747:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "15487:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15508:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15500:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15516:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15516:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15499:35:0"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "15553:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15553:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15552:14:0"
									},
									"scope": 662,
									"src": "15478:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "15998:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "16039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "16047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 554,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "16056:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 550,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "16016:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16016:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 549,
												"id": 556,
												"nodeType": "Return",
												"src": "16009:60:0"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "15659:216:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "15890:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15911:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15903:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15932:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15919:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15919:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15952:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15938:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15902:63:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "15984:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15984:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15983:14:0"
									},
									"scope": 662,
									"src": "15881:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16565:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "16605:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "16613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 573,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "16619:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16626:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 570,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															611
														],
														"referencedDeclaration": 611,
														"src": "16583:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16583:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 576,
												"nodeType": "Return",
												"src": "16576:94:0"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "16085:361:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "16461:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16491:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16483:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16499:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16499:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16526:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16518:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16482:50:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16551:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16551:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16550:14:0"
									},
									"scope": 662,
									"src": "16452:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "17075:175:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 595,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "17102:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$662",
																				"typeString": "library Address"
																			}
																		],
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "17094:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 593,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "17094:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17094:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "17094:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 598,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "17119:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17094:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17126:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17086:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "17086:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 604,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "17208:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "17216:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 606,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "17222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "17229:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 603,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "17185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17185:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 591,
												"id": 609,
												"nodeType": "Return",
												"src": "17178:64:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "16686:242:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "16943:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16973:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16994:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "16981:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16981:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17008:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17000:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17029:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17015:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17015:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16964:78:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17061:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17061:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17060:14:0"
									},
									"scope": 662,
									"src": "16934:316:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "17402:835:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 626,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "17432:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 625,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "17421:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17421:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17441:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17413:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17413:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "17413:60:0"
											},
											{
												"assignments": [
													632,
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17552:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17547:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17547:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17574:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "17561:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17561:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "17619:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 635,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "17588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17588:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 637,
																"name": "weiValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "17608:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17588:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17588:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17546:78:0"
											},
											{
												"condition": {
													"id": 642,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "17639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 658,
													"nodeType": "Block",
													"src": "17698:532:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 646,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "17784:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "17784:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "17784:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 656,
																"nodeType": "Block",
																"src": "18164:55:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 653,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "18190:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 652,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18183:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18183:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 655,
																		"nodeType": "ExpressionStatement",
																		"src": "18183:20:0"
																	}
																]
															},
															"id": 657,
															"nodeType": "IfStatement",
															"src": "17780:439:0",
															"trueBody": {
																"id": 651,
																"nodeType": "Block",
																"src": "17807:351:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "17995:148:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18018:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18047:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18041:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18041:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18022:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18091:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18095:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18087:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18087:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18108:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18080:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18080:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18080:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18047:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 634,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18095:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 650,
																		"nodeType": "InlineAssembly",
																		"src": "17986:157:0"
																	}
																]
															}
														}
													]
												},
												"id": 659,
												"nodeType": "IfStatement",
												"src": "17635:595:0",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "17648:44:0",
													"statements": [
														{
															"expression": {
																"id": 643,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "17670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 623,
															"id": 644,
															"nodeType": "Return",
															"src": "17663:17:0"
														}
													]
												}
											}
										]
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "17267:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17298:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17290:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17319:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17306:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17306:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "weiValue",
												"nameLocation": "17333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17357:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17343:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 618,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17289:81:0"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "17388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17387:14:0"
									},
									"scope": 662,
									"src": "17258:979:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1094,
							"src": "12353:5887:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "18308:465:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "SafeERC20",
							"nameLocation": "18783:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 666,
									"libraryName": {
										"id": 664,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "18806:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18800:27:0",
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18819:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 669,
									"libraryName": {
										"id": 667,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "18839:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "18833:26:0",
									"typeName": {
										"id": 668,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "18851:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "18939:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "18970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 683,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "19000:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 418,
																		"src": "19000:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19000:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 686,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "19025:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 687,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "19029:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 681,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "18977:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "18977:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18977:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 679,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "18950:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18950:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "18950:86:0"
											}
										]
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "18876:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18896:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18889:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "18889:6:0"
													},
													"referencedDeclaration": 469,
													"src": "18889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18911:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18903:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18923:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "18915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18888:41:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18939:0:0"
									},
									"scope": 876,
									"src": "18867:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "19142:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "19173:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 708,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "19203:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 450,
																		"src": "19203:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19203:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 711,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "19232:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "19238:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 713,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "19242:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19180:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19180:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19180:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 704,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "19153:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19153:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "19153:96:0"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19061:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19085:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19078:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 693,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19078:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19078:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "19118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19077:55:0"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19142:0:0"
									},
									"scope": 876,
									"src": "19052:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "19602:546:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 726,
																			"src": "19896:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19905:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19896:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19895:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 738,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "19936:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$876",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 737,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "19928:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 736,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "19928:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 739,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19928:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 740,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "19943:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 734,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "19912:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$469",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 428,
																				"src": "19912:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19912:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19955:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "19912:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19911:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "19895:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19972:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 729,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19887:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "19887:152:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 750,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "20070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 753,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "20100:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20100:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20100:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 756,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "20124:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 757,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "20133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20077:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20077:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20077:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 749,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20050:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20050:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "20050:90:0"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "19265:255:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "19535:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19547:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "19547:6:0"
													},
													"referencedDeclaration": 469,
													"src": "19547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19569:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19561:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19586:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "19578:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19546:46:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19602:0:0"
									},
									"scope": 876,
									"src": "19526:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "20242:200:0",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "20261:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "20253:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 772,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "20320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 778,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20300:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20292:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 776,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20292:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20292:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 780,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20307:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 774,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "20276:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20276:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20276:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 28,
														"src": "20276:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20276:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20253:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "20357:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 790,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "20387:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20387:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20387:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 793,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "20411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 794,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "20420:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 788,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20364:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20364:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 786,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20337:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "20337:97:0"
											}
										]
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "20165:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20194:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20187:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20187:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20187:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20209:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "20218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20186:46:0"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20242:0:0"
									},
									"scope": 876,
									"src": "20156:286:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "20536:245:0",
										"statements": [
											{
												"assignments": [
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "20555:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 836,
														"src": "20547:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 809,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [
														{
															"id": 820,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "20614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20621:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 815,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "20594:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$876",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20586:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 813,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20586:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20586:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 817,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20601:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 811,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "20570:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 428,
																"src": "20570:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20570:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 73,
														"src": "20570:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20570:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20547:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "20696:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "20726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$469",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "20726:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20726:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 831,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "20750:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "20759:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 826,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20703:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20703:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20703:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "20676:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20676:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "20676:97:0"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "20459:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20488:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 800,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "20481:6:0"
													},
													"referencedDeclaration": 469,
													"src": "20481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20520:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "20512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20480:46:0"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20536:0:0"
									},
									"scope": 876,
									"src": "20450:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "21242:691:0",
										"statements": [
											{
												"assignments": [
													847
												],
												"declarations": [
													{
														"constant": false,
														"id": 847,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "21609:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "21596:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 846,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "21596:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "21650:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21656:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 850,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "21630:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$469",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "21622:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21622:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "21622:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21622:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21596:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 857,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "21706:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21706:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21706:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 873,
												"nodeType": "IfStatement",
												"src": "21702:224:0",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "21729:197:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 864,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 847,
																				"src": "21848:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "21861:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 865,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "21861:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 867,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "21860:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 862,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "21837:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "21837:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21837:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21869:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 861,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21829:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21829:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "ExpressionStatement",
															"src": "21829:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "20789:377:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "21181:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21208:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21201:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$469",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 840,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 839,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 469,
														"src": "21201:6:0"
													},
													"referencedDeclaration": 469,
													"src": "21201:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "21228:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "21215:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21215:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21200:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21242:0:0"
									},
									"scope": 876,
									"src": "21172:761:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1094,
							"src": "18775:3161:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 899,
							"linearizedBaseContracts": [
								899
							],
							"name": "IERC1155Mintable",
							"nameLocation": "21950:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "21974:68:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "509c191d",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchMint",
									"nameLocation": "22057:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "22079:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "22071:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "22103:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "22084:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 880,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 881,
													"nodeType": "ArrayTypeName",
													"src": "22084:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "_quantities",
												"nameLocation": "22127:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "22108:30:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 883,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 884,
													"nodeType": "ArrayTypeName",
													"src": "22108:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22070:69:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22148:0:0"
									},
									"scope": 899,
									"src": "22048:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "22157:74:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "24eeedf6",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "22246:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "22263:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22255:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "22276:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22268:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_quantities",
												"nameLocation": "22289:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "22281:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22254:47:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22310:0:0"
									},
									"scope": 899,
									"src": "22237:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1094,
							"src": "21940:374:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 900,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 393,
										"src": "22347:7:0"
									},
									"id": 901,
									"nodeType": "InheritanceSpecifier",
									"src": "22347:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1093,
							"linearizedBaseContracts": [
								1093,
								393,
								287
							],
							"name": "VendingMachine",
							"nameLocation": "22329:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 904,
									"libraryName": {
										"id": 902,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "22368:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22362:27:0",
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22381:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 908,
									"libraryName": {
										"id": 905,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 876,
										"src": "22401:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "22395:27:0",
									"typeName": {
										"id": 907,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 906,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 469,
											"src": "22415:6:0"
										},
										"referencedDeclaration": 469,
										"src": "22415:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$469",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 911,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "22455:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "22431:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
										"typeString": "contract IERC1155Mintable"
									},
									"typeName": {
										"id": 910,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 909,
											"name": "IERC1155Mintable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 899,
											"src": "22431:16:0"
										},
										"referencedDeclaration": 899,
										"src": "22431:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
											"typeString": "contract IERC1155Mintable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "170d542c",
									"id": 914,
									"mutability": "mutable",
									"name": "quoteErc20",
									"nameLocation": "22479:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "22465:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$469",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 913,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 912,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 469,
											"src": "22465:6:0"
										},
										"referencedDeclaration": 469,
										"src": "22465:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$469",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 916,
									"mutability": "mutable",
									"name": "treasury",
									"nameLocation": "22513:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "22498:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22498:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "432be4d0",
									"id": 920,
									"mutability": "mutable",
									"name": "_commodityPrices",
									"nameLocation": "22569:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1093,
									"src": "22534:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 919,
										"keyType": {
											"id": 917,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22542:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "22534:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 918,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 926,
									"name": "PriceUpdate",
									"nameLocation": "22600:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22628:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "22612:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "22645:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "22637:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22611:40:0"
									},
									"src": "22594:58:0"
								},
								{
									"anonymous": false,
									"id": 936,
									"name": "Buy",
									"nameLocation": "22664:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "22684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "22668:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22707:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "22691:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22691:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "22724:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "22716:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "22742:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "22734:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22667:81:0"
									},
									"src": "22658:91:0"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "22871:303:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "22890:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22913:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22905:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22905:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22905:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22890:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 952,
																	"name": "_nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "22919:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 955,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "22942:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VendingMachine_$1093",
																				"typeString": "contract VendingMachine"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VendingMachine_$1093",
																				"typeString": "contract VendingMachine"
																			}
																		],
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22934:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 953,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22934:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22934:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22919:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22890:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22882:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "22882:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "_quoteErc20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "22967:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22997:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "22989:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 963,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "22989:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22989:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "22967:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 968,
																	"name": "_quoteErc20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "23003:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 971,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "23033:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_VendingMachine_$1093",
																				"typeString": "contract VendingMachine"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_VendingMachine_$1093",
																				"typeString": "contract VendingMachine"
																			}
																		],
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "23025:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 969,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "23025:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23025:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "23003:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22967:71:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22959:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "22959:80:0"
											},
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 977,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "23050:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
															"typeString": "contract IERC1155Mintable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 979,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "23073:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 978,
															"name": "IERC1155Mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "23056:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155Mintable_$899_$",
																"typeString": "type(contract IERC1155Mintable)"
															}
														},
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23056:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
															"typeString": "contract IERC1155Mintable"
														}
													},
													"src": "23050:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
														"typeString": "contract IERC1155Mintable"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "23050:35:0"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "quoteErc20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "23096:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$469",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 985,
																"name": "_quoteErc20Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "23116:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 984,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "23109:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$469_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23109:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$469",
															"typeString": "contract IERC20"
														}
													},
													"src": "23096:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$469",
														"typeString": "contract IERC20"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "23096:39:0"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "23146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 990,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "23157:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23146:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "23146:20:0"
											}
										]
									},
									"id": 994,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "22787:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "22779:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_quoteErc20Address",
												"nameLocation": "22817:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "22809:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "22854:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "22846:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22768:102:0"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22871:0:0"
									},
									"scope": 1093,
									"src": "22757:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "23249:100:0",
										"statements": [
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1001,
															"name": "_commodityPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "23260:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1003,
														"indexExpression": {
															"id": 1002,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "23277:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23260:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "23289:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23260:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "23260:35:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1008,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "23324:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1009,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "23334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1007,
														"name": "PriceUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "23311:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23311:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "EmitStatement",
												"src": "23306:35:0"
											}
										]
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_listToken",
									"nameLocation": "23195:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "23214:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "23206:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "23232:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "23224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23205:34:0"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23249:0:0"
									},
									"scope": 1093,
									"src": "23186:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "23435:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "23457:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1024,
															"name": "_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "23467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "_listToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "23446:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23446:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "23446:28:0"
											}
										]
									},
									"functionSelector": "d3f50573",
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1020,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1019,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 342,
												"src": "23425:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23425:9:0"
										}
									],
									"name": "safeListToken",
									"nameLocation": "23370:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "23392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "23384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "23410:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "23402:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23383:34:0"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23435:0:0"
									},
									"scope": 1093,
									"src": "23361:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "23575:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1040,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "23599:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "23607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1042,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "23617:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1037,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "23586:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155Mintable_$899",
																"typeString": "contract IERC1155Mintable"
															}
														},
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeMint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 898,
														"src": "23586:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256) external"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23586:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "23586:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1048,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "23666:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "23674:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1054,
																	"name": "_quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "23715:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"id": 1050,
																		"name": "_commodityPrices",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "23684:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1052,
																	"indexExpression": {
																		"id": 1051,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "23701:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "23684:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 108,
																"src": "23684:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23684:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1045,
															"name": "quoteErc20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "23638:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$469",
																"typeString": "contract IERC20"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 718,
														"src": "23638:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$469_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$469_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23638:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "23638:88:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1059,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "23756:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "23764:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1061,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "23774:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1062,
																"name": "_commodityPrices",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "23785:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1064,
															"indexExpression": {
																"id": 1063,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1032,
																"src": "23802:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23785:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1058,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "23752:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23752:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1066,
												"nodeType": "EmitStatement",
												"src": "23747:65:0"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buyToken",
									"nameLocation": "23503:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "23521:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23513:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "23537:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23529:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "23555:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "23547:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23512:53:0"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23575:0:0"
									},
									"scope": 1093,
									"src": "23494:326:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "23898:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1076,
																	"name": "_commodityPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "23917:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1078,
																"indexExpression": {
																	"id": 1077,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "23934:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23917:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23944:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23917:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f6e206c697374",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23947:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															},
															"value": "Not on list"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e71829fbe1f2cb2ab04be7125009e28042792cd88998721d3e15133380350f8",
																"typeString": "literal_string \"Not on list\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23909:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23909:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "23909:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1085,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "23982:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23982:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "23996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1088,
															"name": "_quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "24006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_buyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "23972:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23972:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "23972:44:0"
											}
										]
									},
									"functionSelector": "3e56e6c3",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBuyToken",
									"nameLocation": "23841:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "23862:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "23854:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_quantity",
												"nameLocation": "23880:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "23872:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23853:37:0"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23898:0:0"
									},
									"scope": 1093,
									"src": "23832:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1094,
							"src": "22320:1713:0",
							"usedErrors": []
						}
					],
					"src": "159:23874:0"
				},
				"id": 0
			}
		}
	}
}